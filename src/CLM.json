{"files":[{"id":"98c4d17d-de51-43c2-87ed-f49ae07c4bc0","name":"view","type":"server_js","source":"function doGet(e) {\n  GLOBAL.Util.infoLog(\"Entering doGet()...\" + e.parameter);\n  \n  var evaluated \u003d getMainPage(\"Result of every activity will be displayed here...\");\n  evaluated.setSandboxMode(HtmlService.SandboxMode.IFRAME);\n  \n  return evaluated;\n\n}\n\n\n//-----------------------------------------------\n// show the index view\n//-----------------------------------------------\nfunction getMainPage(content){\n  GLOBAL.Util.infoLog(\"Entering getMainPage()...\");\n\n  var t \u003d HtmlService.createTemplateFromFile(\u0027main-page\u0027); //.setSandboxMode(HtmlService.SandboxMode.EMULATED);\n  \n  // Prepare Menu items in accordance with login user\n  t.menuitems \u003d GLOBAL.Security.createMenuItems();  //TODO: transfer the login user authority late\n  \n  // Prepare different data for displaying\n  //---------- COMMON --------------\n  t.branches \u003d Model.getBranches();\n  t.status \u003d GLOBAL.Constants.STATUS;\n  //t.message \u003d MESSAGETXT;\n  t.rs \u003d GLOBAL.Util.getLocalString();  // resource string  //TODO: create a button which can change this\n  \n  //---------- ORDER \u0026 STOCK ---------\n  // should be a two-dimensional array. \n  //t.items \u003d {}; //Model.prepareItems();\n\n  //t.itemTypes \u003d {};  //Model.getItemTypes();\n  //GLOBAL.Util.debugLog(\"[getMainPage] *** retrieved itemTypes ***\");\n  //GLOBAL.Util.displayObject(t.itemTypes);\n  \n  return t.evaluate();\n}\n\n//#######################################################################################\n//                               Server side process functions\n//#######################################################################################\n//-----------------------------------------------\n// Order and Orderlog function\n//-----------------------------------------------\n//--------- Prepare order form ------------------\nfunction processPrepareOrder() {\n  return Order.prepareOrder();\n}\n\n//--------- When place an Order ------------------\nfunction processPlaceOrder(params) {\n  return Order.placeOrder(params);\n}\n\n//--------- When display Order Log form ---------\nfunction processOrderLog() {\n  return Order.getLatestOrder();\n}\n\n//--------- Update order information (From OrderLog form) ---------\nfunction processUpdateOrder(orderID, params) {\n  return Order.updateOrder(orderID, params);\n}\n\n//-----------------------------------------------\n// Purchase and Purchaselog function\n//-----------------------------------------------\n//--------- Aggregate the orders to create purchase list ---------\nfunction processQueryPurchase(start, end) {\n  var purchase \u003d Purchase.queryPurchase(start, end);\n  return Purchase.createResults(purchase);\n}\n\n//--------- Aggregate the orders to create purchase list\nfunction processSetToPurchased(purchaseID) {\n  return Purchase.setToPurchased(purchaseID);\n}\n\n//--------- When display Purchase Log form\nfunction processPurchaseLog() {\n  GLOBAL.Util.debugLog(\"entering processPurchaseLog...\");\n  return Purchase.getPurchases();\n}\n\n//--------- Add purchase datail in PurchaseLog form\n// when this purchase has not been done yet ---------\nfunction processDisplayPurchaseDetail(purchaseId, statusId) {\n  GLOBAL.Util.debugLog(\"entering processDisplayPurchaseDetail...\" + purchaseId + \":\" + statusId);\n  return Purchase.displayPurchaseDetail(purchaseId, statusId);\n}\n\n//--------- When update purchase detail in PurchaseLog form\nfunction processUpdatePurchaseDetail(purchaseId, params) {\n  GLOBAL.Util.debugLog(\"entering processUpdatePurchaseDetail...\" + purchaseId + \":\" + params);\n  return Purchase.updatePurchaseDetail(purchaseId, params);\n}\n\n//-----------------------------------------------\n// Stock List, in and out\n//-----------------------------------------------\n//--------- When init a Stock List\nfunction processStockList() {\n  return Stock.initStockList(); \n}\n\n//--------- When prepare a Stock in/out form\nfunction processPrepareStock(content) {\n  return Stock.prepareStock(content);  //content for in \u0026 out toggle\n}\n\n//--------- Query the stock data\nfunction processQueryStock(params) {\n  return Stock.queryStock(params);\n}\n\n//--------- Save the stock in/out data\nfunction processSaveStock(params) {\n  return Stock.saveStock(params);\n}\n\n//--------- after stock in / out some items, the items info\n// should be refreshed and displayed\nfunction processRefreshStockItems() {\n  return Stock.refreshItems();\n}\n\n//--------- When display Latest purchase list in Distribute form\nfunction processDistributeList() {\n  return Distribute.getList();\n}\n\n//-----------------------------------------------\n// Distribute\n//-----------------------------------------------\n//--------- When display Distribute detail\nfunction processDistributeDetail(purchaseId, statusId) {\n  return Distribute.queryDistDataByPurchaseID(purchaseId, statusId);\n}\n\n//--------- Update the distribute data after item be delivered\nfunction processConfirmDistribute(purchaseID, status, comment) {\n  return Distribute.confirmDistribute(purchaseID, status, comment);\n}\n\n//-----------------------------------------------\n// Item Management\n//-----------------------------------------------\n//--------- Init the item management\nfunction processItemMgr() {\n  return Itemmgr.initItemMgr();\n}\n\n//--------- Upload the item file ---------\nfunction processFormItemFile(form) {\n  return Itemmgr.uploadItemFile(form);\n}\n\n//--------- Query the item data ---------\nfunction processQueryItem(param) {\n  return Itemmgr.queryItem(param);\n}\n\n//-----------------------------------------------\n// Supplier Management\n//-----------------------------------------------\n//--------- Query the supper data ---------\nfunction processQuerySupplier(param) {\n  return Suppmgr.querySupplier(param);\n}\n\n//--------- Upload the supplier file ---------\nfunction processFormSupplierFile(form) {\n  return Suppmgr.uploadSupplierFile(form);\n}\n\n//-----------------------------------------------\n// Administration\n//-----------------------------------------------\n//--------- Init Admin form ---------\nfunction processInitAdminList() {\n  return Admin.initializeAdminList();\n}\n\n//--------- Add a User ---------\nfunction processAddUser(param) {\n  return Admin.addUser(param);\n}\n\n//--------- Add a Branch ---------\nfunction processAddBranch(param) {\n  return Admin.addBranch(param);\n}\n\n"},{"id":"5cf9755a-bc87-4222-874b-36b610f65c2d","name":"base-js","type":"server_js","source":"var GLOBAL\u003d{};\nGLOBAL.namespace\u003dfunction(str){\n\tvar arr\u003dstr.split(\".\"), o\u003dGLOBAL;\n\tfor (var i\u003d(arr[0]\u003d\u003d\"GLOBAL\")? 1:0; i\u003carr.length; i++){\n\t\to[arr[i]] \u003d o[arr[i]] || {};\n\t\to\u003do[arr[i]];\n\t}\n};\n\n/*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/\n//Lang Relative\n/*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/\nGLOBAL.namespace(\"Lang\");\nGLOBAL.Lang.trim\u003dfunction(ostr){\n    if (typeof(ostr) !\u003d\u003d \"string\") return ostr;\n\treturn ostr.replace(/^\\s+|\\s+$/g,\"\");\n};\n\nGLOBAL.Lang.isNumber\u003dfunction(s){\n\treturn !isNaN(s);\n};\n\nGLOBAL.Lang.extend\u003dfunction(subClass, superClass) {\n\tvar F\u003dfunction(){};\n\tF.prototype\u003dsuperClass.prototype;\n\tsubClass.prototype\u003dnew F();\n\tsubClass.prototype.constructor\u003dsubClass;\n\tsubClass.superclass\u003dsuperClass.prototype;\n\tif(superClass.prototype.constructor\u003d\u003dObject.prototype.constructor) {\n\t\tsuperClass.prototype.constructor\u003dsuperClass;\n\t}\n};\n\n/*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/\n//Database Relative\n/*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/\n\n/*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/\n//Other base function\n/*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/\n//----------------------------------------------------\n// Add format function for String object\n// Usage: String.format(\"from {0} to {1}\", \"A\", \"B\") -\u003e from A to B\n//----------------------------------------------------\nString.format \u003d function(src){\n    if (arguments.length \u003d\u003d 0) return null;\n    var args \u003d Array.prototype.slice.call(arguments, 1);\n    return src.replace(/\\{(\\d+)\\}/g, function(m, i){\n        return args[i];\n    });\n};\n\nfunction LogicException(message) {\n   this.message \u003d message;\n   this.name \u003d \"LogicException\";\n}\n\nfunction BusinessException(message) {\n   this.message \u003d message;\n   this.name \u003d \"BusinessException\";\n}\n\n//----------------------------------------------------\n//----------------------------------------------------\n//compare two purchase data by purchase date of each data\nfunction createComparison (propertyName, asce) {  //asce: true, false(\u003ddesc)\n  return function (object1, object2) {\n    var value1 \u003d object1[propertyName];\n    var value2 \u003d object2[propertyName];\n    \n    if (value1 \u003e value2) {\n      return asce?1:-1;\n    }else if (value1 \u003c value2) {\n      return asce?-1:1;\n    }else{\n      return 0;\n    }\n  };\n}\n\n//----------------------------------------------------\n//----------------------------------------------------\nfunction getContent(filename) {\n  return HtmlService.createTemplateFromFile(filename).getRawContent();\n}"},{"id":"0c0a54a7-d297-47f5-9688-3df5acd31d87","name":"base-css","type":"html","source":"\u003cstyle type\u003d\"text/css\"\u003e\n    \n/* CSS reset */\n/*\nbody, div, dl, dt, dd, ul, ol, li, h1, h2, h3, h4, h5, h6, pre, form, fieldset, input, textarea, p, blockquote, th, td {margin:0;padding:0;}\n*/\ntable {border-collapse:collapse;border-spacing:0;}\nimg {border:0;}\naddress, caption, cite, code, dfn, em, strong, th, var {font-style:normal;font-weight:normal;}\nol, ul {list-style:none;}\ncaption, th {text-align:left;}\n/*h1, h2, h3, h4, h5, h6 {font-size:100%;font-weight:normal;}*/\nq:before, q:after {content:\u0027\u0027;}\nabbr, acronym {border:0;}\n\n/* FONT */\n/*.df {font-family:helvetica,arial,simsun,sans-serif !important;}*/\n.df {font-family:\"Helvetica Neue\", Helvetica, \u0027Hiragino Sans GB\u0027, \u0027Microsoft YaHei\u0027, \u0027WenQuanYi Micro Hei\u0027, Arial,sans-serif !important;}\n\n/* 文字排版 characters layout */\n.f10 {font-size:10px;}\n.f11 {font-size:11px;}\n.f12 {font-size:12px;}\n.f13 {font-size:13px;}\n.f14 {font-size:14px;}\n.f16 {font-size:16px;}\n.f18 {font-size:18px;}\n.f20 {font-size:20px;}\n.f36 {font-size:36px;}\n.fb {font-weight:bold;}\n.fi {font-style:italic;}\n.fn {font-weight:normal;}\n.t2 {text-indent:2em;}\n.lh150 {line-height:150%;}\n.lh180 {line-height:180%;}\n.lh200 {line-height:200%;}\n.unl {text-decoration:underline;}\n.no_unl {text-decoration:none;}\n\n/* 定位 positioning */\n.tl {text-align:left;}\n.tc {text-align:center;}\n.tr {text-align:right;}\n.bc {margin-left:auto;margin-right:auto;} /* usually come with width setting, e.g., w100 or w200 */\n.fl {float:left;display:inline;}\n.fr {float:right;display:inline;}\n.cb {clear:both;}\n.cl {clear:left;}\n.cr {clear:right;}\n\n/*The problem happens when a floated element is within a container box, \nthat element does not automatically force the container’s height adjust to the floated element. \nWhen an element is floated, its parent no longer contains it because the float is removed from the flow. \nYou can use 2 methods to fix it:\n{clear: both;}\nclearfix\nOnce you understand what is happening, use the method below to “clearfix” it. */\n.clearfix:after{content:\".\";display:block;height:0;clear:both;visibility:hidden}\n.clearfix{*+height:1%;}\n/*.clearfix:after {content:\".\";display:block;height:0;clear:both;visibility:hidden;}\n.clearfix {display:inline-block}\nhtml[xmlns] .clearfix {display:block;}\n* html .clearfix{height:1%}*/\n\n.vm {vertical-align:middle;}\n.vt {vertical-align: top;}\n.pr {position:relative;}\n.pa {position:absolute;}\n.abs-right {position:absolute;right:0;}\n.hidden {visibility:hidden;}\n.inblock {display:inline-block;}\n.none {display:none;}\n\n/* 长度高度 length and height */\n.w10 {width:10px;}\n.w20 {width:20px;}\n.w30 {width:30px;}\n.w40 {width:40px;}\n.w50 {width:50px;}\n.w60 {width:60px;}\n.w70 {width:70px;}\n.w80 {width:80px;}\n.w90 {width:90px;}\n.w100 {width:100px;}\n.w180 {width:180px;}\n.w200 {width:200px;}\n.w250 {width:250px;}\n.w300 {width:300px;}\n.w400 {width:400px;}\n.w500 {width:500px;}\n.w600 {width:600px;}\n.w700 {width:700px;}\n.w800 {width:800px;}\n.w {width:100%;}\n.h50 {height:50px;}\n.h80 {height:80px;}\n.h100 {height:100px;}\n.h200 {height:200px;}\n.h {height:100%;}\n\n/* 边距 margin \u0026 padding */\n.m0 {margin:0px;}\n.m5 {margin:5px;}\n.m10 {margin:10px;}\n.m15 {margin:15px;}\n.m30 {margin:30px;}\n\n.mt5 {margin-top:5px;}\n.mt10 {margin-top:10px;}\n.mt15 {margin-top:15px;}\n.mt20 {margin-top:20px;}\n.mt30 {margin-top:30px;}\n.mt50 {margin-top:50px;}\n.mt100 {margin-top:100px;}\n\n.mb5 {margin-bottom:5px;}\n.mb10 {margin-bottom:10px;}\n.mb15 {margin-bottom:15px;}\n.mb20 {margin-bottom:20px;}\n.mb30 {margin-bottom:30px;}\n.mb50 {margin-bottom:50px;}\n.mb100 {margin-bottom:100px;}\n\n.ml5 {margin-left:5px;}\n.ml10 {margin-left:10px;}\n.ml15 {margin-left:15px;}\n.ml20 {margin-left:20px;}\n.ml30 {margin-left:30px;}\n.ml50 {margin-left:50px;}\n.ml100 {margin-left:100px;}\n\n.mr5 {margin-right:5px;}\n.mr10 {margin-right:10px;}\n.mr15 {margin-right:15px;}\n.mr20 {margin-right:20px;}\n.mr30 {margin-right:30px;}\n.mr50 {margin-right:50px;}\n.mr100 {margin-right:100px;}\n\n.p0 {padding:5px;}\n.p5 {padding:5px;}\n.p10 {padding:10px;}\n.p15 {padding:15px;}\n.p30 {padding:30px;}\n\n.pt5 {padding-top:5px;}\n.pt10 {padding-top:10px;}\n.pt15 {padding-top:15px;}\n.pt20 {padding-top:20px;}\n.pt30 {padding-top:30px;}\n.pt50 {padding-top:50px;}\n.pt100 {padding-top:100px;}\n\n.pb5 {padding-bottom:5px;}\n.pb10 {padding-bottom:10px;}\n.pb15 {padding-bottom:15px;}\n.pb20 {padding-bottom:20px;}\n.pb30 {padding-bottom:30px;}\n.pb50 {padding-bottom:50px;}\n.pb100 {padding-bottom:100px;}\n\n.pl5 {padding-left:5px;}\n.pl10 {padding-left:10px;}\n.pl15 {padding-left:15px;}\n.pl20 {padding-left:20px;}\n.pl30 {padding-left:30px;}\n.pl50 {padding-left:50px;}\n.pl100 {padding-left:100px;}\n\n.pr5 {padding-right:5px;}\n.pr10 {padding-right:10px;}\n.pr15 {padding-right:15px;}\n.pr20 {padding-right:20px;}\n.pr30 {padding-right:30px;}\n.pr50 {padding-right:50px;}\n.pr100 {padding-right:100px;}\n\n/* border */\n.b0 {border:0px;}\n\n\n\u003c/style\u003e"},{"id":"d5bf10f6-155d-4d95-b5f4-6b2be781660f","name":"common-css","type":"html","source":"\u003cstyle type\u003d\"text/css\"\u003e\n    \n/*body {font-family:Verdana,Arial !important;font-size: 10px;}*/\n/* background */\nbody {\n  /*background-color:#eceff1;*/\n  background-image: url(\"https://drive.google.com/uc?id\u003d0B2GrL44-u3KubmluX1JOT1ZmU3M\");\n}\n/*-------------------------*/\n/* LOGO, CONTAINER, FOOTER */\n/*-------------------------*/\n.header {\n  /*background-color:#4285F4;*/\n  color:#283593;min-width:1024px;padding:5px;height:50px;\n}\n.header1 {\n\tbackground-image: -webkit-gradient(linear, 0 0, 0 100%, color-stop(0.5, #000), to(#ddd));\n\tbackground-image: -webkit-linear-gradient(#000 50%, #ddd);\n\tbackground-image: -moz-linear-gradient(#000 50%, #ddd);\n\tbackground-image: -o-linear-gradient(#000 50%, #ddd);\n\tbackground-image: linear-gradient(#000 50%, #ddd);\n}\n.container {\n  /*background-color:#eceff1;*/\n  min-height:650px;min-width:1100px;overflow:hidden;\n}\n\n.footer {\n  background-color:#4285F4;color:#fff;font-size:1.2em;text-align:center;min-width:1024px;\n}\n\n/*---------------------------------------*/\n/* SIDE BAR, including MENU, COMMON-INFO */\n/*---------------------------------------*/\n.sidebar {width:250px;height:100%;min-height:550px;margin-top:10px;}\n\n.commonInfo {border:0px solid #000;text-align:right;color:#FFDDAA;padding:20px;} \n.commonInfo li {list-style:none;margin-top:5px;} \n\n#menu {\n    /*font-family: Arial;*/\n    font-size: 14px;\n    /*width: 500px;*/\n    overflow: hidden;\n}\n\n#menu, #menu ul {\n    list-style-type: none;\n    background: #5677fc;\n    margin: 0;\n    padding: 0;\n}\n\n#menu li {\n    float: left;\n}\n\n#menu li a {\n    display: block;\n    padding: 10px 15px;\n    color: #eed;\n    text-decoration: none;\n    border-right: 1px solid #FFF;\n}\n#menu li a:hover {\n    background: #3f51b5;\n    color:#fff;\n}\n\n#menu li ul li {\n    font-size:12px;\n    background-color:#fff;\n    width:200px;\n    float: none;\n}\n\n#menu li ul li a {\n    border-top: 1px solid #FFF;\n    background-color:#e7e9fd;\n    color:#000;\n}\n\n#menu li ul {\n    display: none;\n    position: absolute;\n}\n\n#menu li:hover ul{\n    display: block;\n}\n\n#menu li \u003e a:after { content: \u0027 ▼\u0027; } \n\n#menu li \u003e a:only-child:after { content: \u0027\u0027; }   \n  \n/*---------------------------------------------------*/\n/* CONTENT, including TITLE, INPUT-AREA, OUTPUT-AREA */\n/*---------------------------------------------------*/\n.content {min-height:550px;\n   margin-top:5px;\n   width:98%;\n   /*background-color: #eceff1;*/\n   border:1px solid #eee;\n   padding: 5px;\n}\n.content-title {\n    display : none;\n    font-weight:bold;\n    font-size:1.2em;\n    margin: 5px 0px;\n    padding:1px 5px;\n    color: #fff;\n    /*border-left: 2px solid #f70;*/\n    border-radius:1px;\n    background-color: #5677fc;\n}\n\n.input-area, .output-area {\n    /*border-top: 2px solid #f70;*/\n    /*margin-bottom:10px;*/\n    /*margin-top:10px;*/\n    /*padding:5px;*/\n}\n\n.area-title {\n   font-size:1em;\n   font-weight:bold;\n   margin:10px 0px;\n   border-bottom: 1px solid #628cbb;\n}\n\n.item-select-cell {\n    background-color:#b2ebf2;\n    border:0px solid #333366;\n    width:200px;\n    min-height:70px;padding:0.2em;\n    border-radius:.4em;   \n}\n\n.item-select-cell .cell-td-1 {\n  width: 140px;\n}\n\n.item-select-cell .cell-td-2 {\n  width: 60px;\n}\n\n.item-select-cell table tr td {\n  padding:5px;\n}\n\n/*---------------------------------------------------*/\n/* MESSAGE                                           */\n/*---------------------------------------------------*/\n.msg_info, .msg_success, .msg_warning, .msg_error {\n    border: 1px solid #ccc;\n    margin: 10px 0px;\n    padding:15px 10px 15px 50px;\n    background-repeat: no-repeat;\n    background-position: 10px center;\n    -moz-border-radius:2px;\n    -webkit-border-radius:2px;\n    border-radius:2px;\n    font-size: 0.8em;\n}\n.msg_info {\n    color: #00529B;\n    background-color: #BDE5F8;\n    background-image: url(\u0027https://drive.google.com/uc?id\u003d0B8kalvI6sCsuRDR6VHN1OGw1LTA\u0027);\n}\n.msg_success {\n    color: #4F8A10;\n    background-color: #DFF2BF;\n    background-image: url(\u0027https://drive.google.com/uc?id\u003d0B8kalvI6sCsuRGNoVUVzb0xiQU0\u0027);\n}\n.msg_warning {\n    color: #9F6000;\n    background-color: #FEEFB3;\n    background-image: url(\u0027https://drive.google.com/uc?id\u003d0B8kalvI6sCsuVFNtUHhEWkVzQjg\u0027);\n}\n.msg_error {\n    color: #D8000C;\n    background-color: #FFBABA;\n    background-image: url(\u0027https://drive.google.com/uc?id\u003d0B8kalvI6sCsuOVZiZlpZaHlkY00\u0027);\n}\n/*-------------------------------*/\n/* jQuery UI style customization */\n/*-------------------------------*/\n/*.ui-menu {width: 160px; z-index: 2;}\n.ui-accordion {width:160px;z-index:2;padding: 0.1em 0.1em;}\n.ui-accordion-content {padding: 0.5em 2.2em;}\norder, #itemmgr .ui-tabs {width: 100%; overflow:hidden;} */\n.ui-widget {\n  font-family:\"Helvetica Neue\", Helvetica, \u0027Hiragino Sans GB\u0027, \u0027Microsoft YaHei\u0027, \u0027WenQuanYi Micro Hei\u0027, Arial,sans-serif;\n}\n/*.ui-button {font-size:14px} #607d8b*/\n.ui-button-text {\n  font-size: 14px;\n  background-color: #5677fc;\n  color:#FFF;\n  cursor:pointer;\n}\n\n/* --------- datepicker ------- */\n.ui-datepicker {\n  font-size: 12px;\n}\n\n/* --------- dialog --------- */\n.no-close .ui-dialog-titlebar-close {\n  display: none;\n}\n\n.ui-dialog .ui-dialog-buttonpane {\n  margin: 0px;\n  padding: 0px;\n}\n.ui-dialog-title {\n  background: transparent; \n  /*background-color: #5677fc;*/\n  border: none;\n  font-size:14px;\n  color:#eee;\n}\n\n.error-dialog \u003e .ui-dialog-titlebar {\n  font-size:12px;\n  background: #5677fc;\n}\n\n.info-dialog \u003e .ui-dialog-titlebar {\n  font-size:12px;\n  background: #5677fc;\n}\n\n\n.error-dialog .ui-dialog-content {\n  font-size:12px;\n  font-weight:bold;\n  color:red;\n}\n\n.info-dialog .ui-dialog-content {\n  font-size:12px;\n  color:#111;\n}\n\n/* --------- pure css styling dialog --------- */\n#overlay {\n  visibility: hidden;\n  position: absolute;\n  left: 0px;\n  top: 0px;\n  width:100%;\n  height:100%;\n  text-align:center;\n  z-index: 1000;\n}\n\n#overlay div {\n  width:300px;\n  margin: 100px auto;\n  background-color: #fff;\n  border:1px solid #000;\n  padding:15px;\n  text-align:center;\n}\n\n/* --------- breadcrumbs --------- */\n#breadcrumbs {\n  /*background-color: #EDF5FA;*/\n  padding: 5px;\n  font-size: 14px;\n  color: #777;\n}\n#breadcrumbs a {\n  color: #5677FC;\n  font-weight: bold;\n}\n\n/* --------- Table --------- */\ntable {\n  font-size:12px;\n}\n\ntable .table-input {\n  width:60px;\n  font-size:1em;\n}\n\ntable .selected-row {\n  background-color: #DFF2BF;\n}\n\ntable .table-button {\n  background-color: #607D8B;\n  width:100px;\n  font-size:1em;\n  color:#FFF;\n}\n\ntable .dataTable tbody td{\n  padding:0px;\n  font-size:1em;\n}\n\ntable .ui-state-default {\n  border:0px;\n  background:#5677fc;\n  font-size: 1.1em;\n  color: #eee;\n}\n\n.ui-datepicker-header {\n  background:#5677fc;\n  color: #eee;\n}\n\n.tabs-min {\n    background: transparent; \n    border: none; \n} \n.tabs-min .ui-widget-header { \n    background: transparent; \n    border: none; \n    border-bottom: 1px solid #c0c0c0; \n    -moz-border-radius: 0px; \n    -webkit-border-radius: 0px; \n    border-radius: 0px; \n} \n.tabs-min .ui-tabs-nav .ui-state-default { \n    background: transparent; \n    border: none; \n} \n.tabs-min .ui-tabs-nav .ui-state-active { \n    background: transparent url(img/uiTabsArrow.png) no-repeat bottom center; \n    border: none; \n} \n.tabs-min .ui-tabs-nav .ui-state-default a { \n    font-size: 14px;\n    color: #b0b0b0; \n} \n.tabs-min .ui-tabs-nav .ui-state-active a { \n    font-size: 14px;\n    font-weight: bold;\n    color: #017CDC; \n}\n\n/*-------------------------------*/\n/* Common control                */\n/*-------------------------------*/\nh1 {\n  margin:5px;\n}\n\nh2 {\n  font-size:1.4em;font-weight:normal;margin:5px 0;\n}\n\nh3 {\n  font-size:1.2em;font-weight:normal;margin:5px;\n}\n\nfieldset {\n  margin: 1em 0;\n  /*padding: 1em;*/\n  border: 1px solid #ccc;\n  background: #f8fafa;\n}\n\nfieldset legend {\n  font-weight: bold;\n  font-size: 18px;\n  color: #303F9F;\n}\n\nfieldset label {\n  margin:5px;\n  display: block;\n}\n\nfieldset input:focus {\n  border: 2px solid #353;\n  /*background: #fcc;*/\n}\n\n\nfieldset button {\n  margin: 0.4em 0em;\n  min-width: 100px;\n}\n\nfieldset div label {\n  display: inline-block;\n  width: 200px;\n}\n\n.styled-select select {\n   background: transparent;\n   width: 268px;\n   padding: 5px;\n   font-size: 14px;\n   line-height: 1;\n   border: 0;\n   border-radius: 0;\n   height: 34px;\n   -webkit-appearance: none;\n}\n\n.styled-select {\n   width: 240px;\n   height: 34px;\n   overflow: hidden;\n   background: url(\u0027https://drive.google.com/uc?id\u003d0B8kalvI6sCsuN0M3Qk4wOFptMGs\u0027) no-repeat right #ddd;\n   border: 1px solid #ccc;\n}\n\ni {\n  cursor:pointer;\n}\n\u003c/style\u003e"},{"id":"d38c7cb1-99da-4beb-bfb3-730e6d28ce6b","name":"main-page","type":"html","source":"\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e  \n  \u003cmeta http-equiv\u003d\"Content-Type\" content\u003d\"text/html; charset\u003dutf-8\"\u003e\n  \n  \u003clink rel\u003d\"stylesheet\" href\u003d\"//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/themes/smoothness/jquery-ui.css\" /\u003e\n  \u003c!--link rel\u003d\"stylesheet\" href\u003d\"http://ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/css/jquery.dataTables.css\"--\u003e   \n  \u003clink rel\u003d\"stylesheet\" href\u003d\"//cdn.datatables.net/1.9.4/css/jquery.dataTables.css\" /\u003e\n  \u003clink rel\u003d\"stylesheet\" href\u003d\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\"\u003e\n\n  \u003ctitle\u003eCloud Logistics Manager - Cloud Information System\u003c/title\u003e                        \n  \u003c!--link rel\u003d\"stylesheet\" href\u003d\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\" /--\u003e\n  \n  \u003c?!\u003d getContent(\"common-css\") ?\u003e\n  \u003c?!\u003d getContent(\"base-css\") ?\u003e\n\n  \u003cscript src\u003d\"//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js\"\u003e\u003c/script\u003e\n  \u003cscript src\u003d\"//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js\"\u003e\u003c/script\u003e\n  \u003cscript src\u003d\"//ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/jquery.dataTables.min.js\"\u003e\u003c/script\u003e\n  \u003c!--script src\u003d\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js\"\u003e\u003c/script--\u003e\n  \n  \u003c?!\u003d getContent(\"common-js\") ?\u003e\n  \u003c?!\u003d getContent(\"init-js\") ?\u003e\n  \u003c?!\u003d getContent(\"order-ui-js\") ?\u003e\n  \u003c?!\u003d getContent(\"purchase-ui-js\") ?\u003e\n  \u003c?!\u003d getContent(\"stock-ui-js\") ?\u003e\n  \u003c?!\u003d getContent(\"distribute-ui-js\") ?\u003e\n  \u003c?!\u003d getContent(\"management-ui-js\") ?\u003e\n  \u003c?!\u003d getContent(\"admin-ui-js\") ?\u003e\n  \n\u003c/head\u003e\n  \n\u003cbody class\u003d\"df\"\u003e\n\n\u003cdiv id\u003d\"logo\" class\u003d\"header bc\"\u003e\n  \u003c!--h1\u003e\u003c?\u003drs.common.sysTitle?\u003e\u003c/h1--\u003e\n  \u003c!--img style\u003d\"height:50px;\" src\u003d\u0027https://drive.google.com/uc?id\u003d0B2GrL44-u3KuUzlKMDFYMFFNYXM\u0027 alt\u003d\u0027Company\u0027/--\u003e\n  \u003cimg style\u003d\"height:50px;\" src\u003d\u0027https://drive.google.com/uc?id\u003d0B2GrL44-u3KuM1h0WE5ZX055SEk\u0027 alt\u003d\u0027Company\u0027/\u003e\n\u003c/div\u003e \u003c!-- logo --\u003e\n\n\u003cdiv id\u003d\"container\" class\u003d\"container bc\"\u003e\n\u003cinput type\u003d\"hidden\" name\u003d\"branches\" value\u003d\"\u003c?\u003dJSON.stringify(branches)?\u003e\" /\u003e\n\u003cinput type\u003d\"hidden\" name\u003d\"status\" value\u003d\"\u003c?\u003dJSON.stringify(status)?\u003e\" /\u003e\n\u003cinput type\u003d\"hidden\" name\u003d\"message\" value\u003d\"\u003c?\u003dJSON.stringify(rs)?\u003e\" /\u003e\n\u003cinput type\u003d\"hidden\" name\u003d\"menuitems\" value\u003d\"\u003c?\u003dJSON.stringify(menuitems)?\u003e\" /\u003e\n\n\u003c!--\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d MENU \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n\u003cul id\u003d\"menu\"\u003e\n\u003c/ul\u003e\n\n\u003cdiv id\u003d\"content\" class\u003d\"content bc\"\u003e\n\u003c!--\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d MESSAGE BOX          \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n\u003c!--div id\u003d\"ok-dialog\" title\u003d\"\"\u003e\n  \u003cdiv id\u003d\"ok-dialog-message\"\u003e\u003c/div\u003e\n\u003c/div--\u003e\n\u003cdiv id\u003d\"confirm-dialog\" title\u003d\"\u003c?\u003drs.common.confirmDialogTitle?\u003e:\"\u003e\n  \u003cdiv id\u003d\"confirm-dialog-message\"\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv id\u003d\"info-dialog\" title\u003d\"\u003c?\u003drs.common.infoDialogTitle?\u003e:\"\u003e\n\u003c/div\u003e\n\u003cdiv id\u003d\"dialog\"\u003e\n\u003c/div\u003e\n\n\u003c!-- pure css dialog --\u003e\n\u003cdiv id\u003d\"overlay\"\u003e\u003cdiv\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003c!--\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Navigator \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n\u003cdiv id\u003d\"breadcrumbs\"\u003e\n\u003c/div\u003e\n\n\u003c!--\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d HOME FORM \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n\u003cdiv id\u003d\"home\" class\u003d\"content-form\"\u003e\n  \u003cdiv class\u003d\"content-title\"\u003e\u003ch2 style\u003d\"display:inline\"\u003e\u003c?\u003drs.home.formTitle?\u003e\u003c/h2\u003e\u0026nbsp;\u0026nbsp;\u003cspan style\u003d\"font-size:14px;font-weight:normal\"\u003ever.001\u003c/span\u003e\u003c/div\u003e\n  \u003cdiv id\u003d\"home-message\"\u003e\u003c/div\u003e\n  \u003cdiv id\u003d\"ds-order\"\u003e\u003c/div\u003e\n  \u003cdiv id\u003d\"ds-purchase\"\u003e\u003c/div\u003e\n  \u003cdiv id\u003d\"ds-stock\"\u003e\u003c/div\u003e\n  \u003cdiv id\u003d\"ds-distribute\"\u003e\u003c/div\u003e\n\u003c/div\u003e \u003c!-- home div --\u003e\n\n\u003c!--\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ORDER FORM \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n\u003cdiv id\u003d\"order\"\u003e\n \u003cdiv class\u003d\"content-title\"\u003e\u003ch2\u003e\u003c?\u003drs.order.formTitle?\u003e\u003c/h2\u003e\u003c/div\u003e\n \n \u003cdiv id\u003d\"order-input-area\" class\u003d\"input-area\"\u003e\n   \u003cfieldset\u003e\n     \u003clegend\u003e\u003c?\u003drs.order.inputTitle?\u003e\u003c/legend\u003e\n     \u003cdiv id\u003d\"order-tabs\" class\u003d\"f12 tabs-min\" \u003e\n     \u003c/div\u003e \u003c!-- order-tabs --\u003e\n     \u003cbutton id\u003d\"order-add-sbitems\" onclick\u003d\"addOrderSBItems()\"\u003e\u003c?\u003drs.order.addSBItemTitle?\u003e\u003c/button\u003e\n   \u003c/fieldset\u003e\n \u003c/div\u003e \u003c!-- order-input-area --\u003e\n \n \u003cdiv id\u003d\"order-output-area\" class\u003d\"output-area\"\u003e\n   \u003cfieldset\u003e\n     \u003clegend\u003e\u003c?\u003drs.order.outputTitle?\u003e\u003c/legend\u003e\n     \u003cp class\u003d\"msg_warning\"\u003e\u003c?\u003drs.order.info01?\u003e\u003c/p\u003e\n     \u003ctable id\u003d\"order-sbitem-list\" class\u003d\"display\"\u003e\n     \u003c/table\u003e\n     \u003cbutton id\u003d\"order-submit\" onclick\u003d\"submitSaveOrder()\"\u003e\u003c?\u003drs.order.placeOrderTitle?\u003e\u003c/button\u003e\n   \u003c/fieldset\u003e\n \u003c/div\u003e\n\n\u003c/div\u003e \u003c!-- order div --\u003e\n\n\n\u003c!--\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ORDER LOG FORM \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n\u003cdiv id\u003d\"orderlog\" class\u003d\"content-form\"\u003e\n\n  \u003cdiv class\u003d\"content-title\"\u003e\u003ch2\u003e\u003c?\u003drs.orderlog.formTitle?\u003e\u003c/h2\u003e\u003c/div\u003e\n\n  \u003cdiv class\u003d\"input-area\"\u003e\n    \u003cfieldset\u003e\n      \u003clegend\u003e\u003c?\u003drs.orderlog.inputTitle?\u003e \u003cem\u003e[No.\u003cspan id\u003d\"orderlog-order-id\"\u003e\u003c/span\u003e]\u003c/em\u003e\u003c/legend\u003e\n      \u003cdiv\u003e\u003clabel\u003e\u003c?\u003drs.business.Branch?\u003e:\u003c/label\u003e\u003cspan id\u003d\"orderlog-order-branch\"\u003e\u003c/span\u003e\u003c/div\u003e\n      \u003cdiv\u003e\u003clabel\u003e\u003c?\u003drs.business.PlacedDate?\u003e:\u003c/label\u003e\u003cspan id\u003d\"orderlog-order-placedate\"\u003e\u003c/span\u003e\u003c/div\u003e\n      \u003cdiv\u003e\u003clabel\u003e\u003c?\u003drs.business.Status?\u003e:\u003c/label\u003e\u003cspan id\u003d\"orderlog-order-status\"\u003e\u003c/span\u003e\u003c/div\u003e\n    \u003c/fieldset\u003e\n  \u003c/div\u003e\n  \n  \u003cdiv class\u003d\"output-area\"\u003e\n    \u003cfieldset\u003e\n      \u003clegend\u003e\u003c?\u003drs.orderlog.outputTitle?\u003e\u003c/legend\u003e\n      \u003ctable id\u003d\"order-log-list\"\u003e\u003c/table\u003e\n      \u003cbutton id\u003d\"order-log-submit\" class\u003d\"btn btn-success\" onclick\u003d\"submitSaveOrderLog()\"\u003e\u003c?\u003drs.orderlog.updateOrderTitle?\u003e\u003c/button\u003e\n    \u003c/fieldset\u003e\n  \u003c/div\u003e\n\u003c/div\u003e \u003c!-- order div --\u003e\n\n\u003c!--\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PURCHASE FORM \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n\u003cdiv id\u003d\"purchase\" class\u003d\"content-form\"\u003e\n  \u003cdiv class\u003d\"content-title\"\u003e\u003ch2\u003e\u003c?\u003drs.purchase.formTitle?\u003e\u003c/h2\u003e\u003c/div\u003e\n  \n  \u003cdiv id\u003d\"purchase-input-area\" class\u003d\"input-area\"\u003e\n    \u003cfieldset\u003e\n      \u003clegend\u003e\u003c?\u003drs.purchase.inputTitle?\u003e \u003c/legend\u003e\n      \u003cdiv\u003e\n        \u003clabel for\u003d\"purchase-query-from\"\u003e\u003c?\u003drs.business.StartDate?\u003e (YYYY/MM/DD):\u003c/label\u003e\n        \u003cinput type\u003d\u0027text\u0027 id\u003d\u0027purchase-query-from\u0027 value\u003d\u0027\u0027 /\u003e\n      \u003c/div\u003e\n      \u003cdiv\u003e\n        \u003clabel for\u003d\"purchase-query-to\"\u003e\u003c?\u003drs.business.EndDate?\u003e (YYYY/MM/DD):\u003c/label\u003e\n        \u003cinput type\u003d\u0027text\u0027 id\u003d\u0027purchase-query-to\u0027 value\u003d\u0027\u0027 /\u003e\n      \u003c/div\u003e\n      \u003cbutton id\u003d\u0027query-purchase\u0027 class\u003d\"btn\" onclick\u003d\"queryPurchase()\"\u003e\u003c?\u003drs.common.queryBtnTitle?\u003e\u003c/button\u003e\n      \u003cbutton id\u003d\u0027reset-query-Purchase\u0027 class\u003d\"btn\" onclick\u003d\"clearQueryPurchase()\"\u003e\u003c?\u003drs.common.clearBtnTitle?\u003e\u003c/button\u003e\n    \u003c/fieldset\u003e\n  \u003c/div\u003e\n  \n  \u003cdiv id\u003d\"purchase-output-area\" class\u003d\"output-area\"\u003e\n    \u003cfieldset\u003e\n      \u003clegend\u003e\u003c?\u003drs.purchase.outputTitle?\u003e\u003c/legend\u003e\n    \n      \u003cinput type\u003d\"hidden\" id\u003d\"purchase-purchaseid\" value\u003d\"\" /\u003e\n      \u003cp id\u003d\"all-in-stock-msg\" class\u003d\"msg_info\"\u003e\n        \u003c?\u003drs.purchase.info01?\u003e\n      \u003c/p\u003e\n      \u003cbutton id\u003d\u0027set-to-purchased\u0027 class\u003d\"btn mb10\" onclick\u003d\"setToPurchased()\"\u003e\u003c?\u003drs.purchase.setPurchasedTitle?\u003e\u003c/button\u003e\n      \u003ctable id\u003d\"purchase-list\" class\u003d\"display\"\u003e\u003c/table\u003e\n    \u003c/fieldset\u003e\n  \u003c/div\u003e\n\u003c/div\u003e \u003c!-- purchase div --\u003e\n\n\u003c!--\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PURCHASE LOG FORM \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n\u003cdiv id\u003d\"purchaselog\" class\u003d\"content-form\"\u003e\n  \u003cdiv class\u003d\"content-title\"\u003e\u003ch2\u003e\u003c?\u003drs.purchaselog.formTitle?\u003e\u003c/h2\u003e\u003c/div\u003e\n  \u003cdiv id\u003d\"purchaselog-input-area\" class\u003d\"input-area\"\u003e\n    \u003cfieldset\u003e\n      \u003clegend\u003e\u003c?\u003drs.purchaselog.inputTitle?\u003e\u003c/legend\u003e\n      \u003ctable id\u003d\"purchase-log-list\"\u003e\u003c/table\u003e\n    \u003c/fieldset\u003e\n  \u003c/div\u003e\n  \n  \u003cdiv id\u003d\"purchaselog-output-area\" class\u003d\"output-area\"\u003e\n    \u003cfieldset\u003e\n      \u003clegend\u003e\u003c?\u003drs.purchaselog.outputTitle?\u003e\u003c/legend\u003e\n      \u003cinput type\u003d\"hidden\" id\u003d\"purchase-log-id\" value\u003d\"\" /\u003e\n      \u003ctable id\u003d\"purchase-detail-list\" class\u003d\"display\"\u003e\u003c/table\u003e\n      \u003cbutton id\u003d\u0027update-purchased\u0027 class\u003d\"btn\" onclick\u003d\"updatePurchaseDetail()\"\u003e\u003c?\u003drs.purchaselog.purchaseAllTitle?\u003e\u003c/button\u003e\n    \u003c/fieldset\u003e\n  \u003c/div\u003e\n\u003c/div\u003e \u003c!-- purchase log div --\u003e\n\n\u003c!--\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d STOCK LIST FORM \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n\u003cdiv id\u003d\"stocklist\" class\u003d\"content-form\"\u003e\n  \u003cdiv class\u003d\"content-title\"\u003e\u003ch2\u003e\u003c?\u003drs.stock.formTitle?\u003e\u003c/h2\u003e\u003c/div\u003e\n  \u003cdiv id\u003d\"stocklist-input-area\" class\u003d\"input-area\"\u003e\n    \u003cfieldset\u003e\n      \u003clegend\u003e\u003c?\u003drs.stock.inputTitle?\u003e\u003c/legend\u003e\n      \u003cdiv class\u003d\"msg_info\"\u003e\u003c?\u003drs.common.querymsg002?\u003e\u003c/div\u003e\n      \u003cdiv\u003e\n        \u003clabel for\u003d\"stock-item-type\"\u003e\u003c?\u003drs.business.ItemType?\u003e:\u003c/label\u003e\n        \u003cselect id\u003d\u0027stock-item-type\u0027\u003e\n          \u003coption value\u003d\"-1\"\u003e\u003c/option\u003e\n        \u003c/select\u003e\n      \u003c/div\u003e\n      \u003cbutton id\u003d\u0027query-stock\u0027 class\u003d\"btn\" onclick\u003d\"queryStock()\"\u003e\u003c?\u003drs.common.queryBtnTitle?\u003e\u003c/button\u003e\n      \u003c!--button id\u003d\u0027reset-query-stock\u0027 onclick\u003d\"clearQueryStock()\"\u003eClear\u003c/button--\u003e\n    \u003c/fieldset\u003e\n  \u003c/div\u003e\n  \u003cdiv id\u003d\"stocklist-output-area\" class\u003d\"output-area\"\u003e\n    \u003cfieldset\u003e\n      \u003clegend\u003e\u003c?\u003drs.stock.outputTitle?\u003e\u003c/legend\u003e\n      \u003ctable id\u003d\"stock-list\" class\u003d\"display\"\u003e\n      \u003c/table\u003e\n    \u003c/fieldset\u003e\n  \u003c/div\u003e  \n\u003c/div\u003e \u003c!-- stock div --\u003e\n\n\u003c!--\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d STOCK IN/OUT FORM \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n\u003cdiv id\u003d\"stock\" class\u003d\"content-form\"\u003e\n  \u003cdiv id\u003d\"stock-form-title\" class\u003d\"content-title\"\u003e\u003ch2\u003e\u003c?\u003drs.stockin.formTitle?\u003e\u003c/h2\u003e\u003c/div\u003e\n\n  \u003cdiv id\u003d\"stock-input-area\" class\u003d\"input-area\"\u003e\n    \u003cfieldset\u003e\n      \u003clegend\u003e\u003c?\u003drs.stockin.inputTitle?\u003e\u003c/legend\u003e\n      \u003cdiv id\u003d\"stock-tabs\" class\u003d\"f12 tabs-min\"\u003e\u003c/div\u003e\n      \u003cbutton id\u003d\"stock-in-item\" class\u003d\"btn none\" onclick\u003d\"addStockInItem()\"\u003e\u003c?\u003drs.stockin.btnTitle?\u003e\u003c/button\u003e\n      \u003cbutton id\u003d\"stock-out-item\" class\u003d\"btn none\" onclick\u003d\"addStockOutItem()\"\u003e\u003c?\u003drs.stockout.btnTitle?\u003e\u003c/button\u003e\n    \u003c/fieldset\u003e\n  \u003c/div\u003e\n  \u003cdiv id\u003d\"stock-output-area\" class\u003d\"output-area\"\u003e\n    \u003cfieldset\u003e\n      \u003clegend\u003e\u003c?\u003drs.stockin.inputTitle?\u003e\u003c/legend\u003e\n      \u003cp class\u003d\"msg_warning\"\u003e\u003cspan id\u003d\"stock-message\"\u003e\u003c/span\u003e\u003c/p\u003e\n      \u003ctable id\u003d\"stock-item-list\"\u003e\n      \u003c/table\u003e\n      \u003cbutton id\u003d\"stock-items-submit\" class\u003d\"btn btn-success\" onclick\u003d\"submitSaveStock()\"\u003e\u003c?\u003drs.stockin.confBtnTitle?\u003e\u003c/button\u003e\n    \u003c/fieldset\u003e\n  \u003c/div\u003e\n\u003c/div\u003e \u003c!-- stock div --\u003e\n\n\u003c!--\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d DISTRIBUTE FORM \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n\u003cdiv id\u003d\"distribute\" class\u003d\"content-form\"\u003e\n  \u003cdiv class\u003d\"content-title\"\u003e\u003ch2\u003e\u003c?\u003drs.distribute.formTitle?\u003e\u003c/h2\u003e\u003c/div\u003e\n  \u003cdiv id\u003d\"distribute-input-area\" class\u003d\"input-area\"\u003e\n    \u003cfieldset\u003e\n      \u003clegend\u003e\u003c?\u003drs.distribute.inputTitle?\u003e\u003c/legend\u003e\n      \u003ctable id\u003d\"distribute-list\"\u003e\u003c/table\u003e\n    \u003c/fieldset\u003e\n  \u003c/div\u003e\n  \u003cdiv id\u003d\"distribute-output-area\" class\u003d\"output-area\"\u003e\n    \u003cfieldset\u003e\n      \u003clegend\u003e\u003c?\u003drs.distribute.outputTitle?\u003e\u0026nbsp;[No.\u003cspan id\u003d\"distribute-purchase-id\"\u003e\u003c/span\u003e]\u003c/legend\u003e\n      \u003cp class\u003d\"msg_info\"\u003e\u003c?\u003drs.distribute.info01?\u003e\u003c/p\u003e\n      \u003ctable id\u003d\"distribute-detail\" class\u003d\"display\"\u003e\u003c/table\u003e\n      \u003cbutton id\u003d\"distribute-submit\" class\u003d\"btn none\" onclick\u003d\"submitConfirmDistribute()\"\u003e\u003c?\u003drs.distribute.confBtnTitle?\u003e\u003c/button\u003e\n    \u003c/fieldset\u003e\n  \u003c/div\u003e\n  \n\u003c/div\u003e \u003c!-- distribution div --\u003e\n\n\u003c!--\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ITEM MANAGEMENT FORM \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n\u003cdiv id\u003d\"itemmgr\"\u003e\n  \u003cdiv class\u003d\"content-title\"\u003e\u003ch2\u003e\u003c?\u003drs.itemmgr.formTitle?\u003e\u003c/h2\u003e\u003c/div\u003e\n  \u003cdiv id\u003d\"itemmgr-tabs\" class\u003d\"f14 tabs-min\"\u003e\n    \u003cul\u003e\n      \u003cli\u003e\u003ca href\u003d\"#itemmgr-tabs-1\"\u003e\u003c?\u003drs.itemmgr.tabTitle1?\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href\u003d\"#itemmgr-tabs-2\"\u003e\u003c?\u003drs.itemmgr.tabTitle2?\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n    \n    \u003cdiv id\u003d\"itemmgr-tabs-1\" class\u003d\"input-area\"\u003e \n      \u003cinput type\u003d\u0027hidden\u0027 name\u003d\u0027view\u0027 value\u003d\u0027itemmgr\u0027 /\u003e\n      \n      \u003cfieldset\u003e\n        \u003clegend\u003e\u003c?\u003drs.itemmgr.inputTitle1?\u003e\u003c/legend\u003e\n        \u003cp class\u003d\"msg_info\"\u003e\u003c?\u003drs.common.querymsg002?\u003e\u003c/p\u003e\n        \u003cdiv\u003e\n          \u003clabel for\u003d\"select-item-type\" class\u003d\"inblock\"\u003e\u003c?\u003drs.business.ItemType?\u003e:\u003c/label\u003e\n            \u003cselect id\u003d\u0027select-item-type\u0027\u003e\n            \u003c/select\u003e\n        \u003c/div\u003e\n        \u003cbutton id\u003d\u0027queryItems\u0027 class\u003d\"btn\" onclick\u003d\"submitQueryItems()\"\u003e\u003c?\u003drs.common.queryBtnTitle?\u003e\u003c/button\u003e\n        \u003c!--button id\u003d\u0027clearQueryItems\u0027 class\u003d\"btn\" onclick\u003d\"clearQueryItems()\"\u003eClear\u003c/button--\u003e\n      \u003c/fieldset\u003e\n      \n    \u003c/div\u003e\n    \u003cdiv id\u003d\"itemmgr-tabs-2\" class\u003d\"input-area\"\u003e \n      \u003cfieldset\u003e\n        \u003clegend\u003e\u003c?\u003drs.itemmgr.inputTitle2?\u003e\u003c/legend\u003e\n        \u003cp id\u003d\u0027upload-status\u0027 class\u003d\"msg_info\"\u003e\u003c?\u003drs.itemmgr.info01?\u003e\u003c/p\u003e\n        \u003cform id\u003d\u0027uploadItemFileForm\u0027\u003e\n          \u003cinput type\u003d\u0027file\u0027 id\u003d\u0027itemFile\u0027 name\u003d\u0027itemFile\u0027 accept\u003d\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" /\u003e\n          \u003cbutton id\u003d\u0027uploadItemFile\u0027 class\u003d\"btn\" onclick\u003d\"google.script.run.withSuccessHandler(onSuccessItemFile).processFormItemFile(this.parentNode)\"\u003e\u003c?\u003drs.common.uploadBtnTitle?\u003e\u003c/button\u003e\n        \u003c/form\u003e\n      \u003c/fieldset\u003e\n    \u003c/div\u003e\n    \u003cdiv style\u003d\"display: block;height: 0px;clear: both;visibility: hidden;\"\u003e\u003c/div\u003e \u003c!-- hack for IE6 --\u003e\n  \u003c/div\u003e \u003c!-- itemmgr-tabs --\u003e\n  \n  \u003cdiv id\u003d\"itemmgr-output-area\" class\u003d\"output-area\"\u003e\n    \u003cfieldset\u003e\n      \u003clegend\u003e\u003c?\u003drs.itemmgr.outputTitle?\u003e\u003c/legend\u003e\n      \u003ctable id\u003d\"itemmgr-item-list\" class\u003d\"display\"\u003e\u003c/table\u003e\n    \u003c/fieldset\u003e\n  \u003c/div\u003e\n\u003c/div\u003e \u003c!-- item management div --\u003e\n\n\u003c!--\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SUPPLIER MANAGEMENT FORM \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n\u003cdiv id\u003d\"suppmgt\"\u003e\n  \u003cdiv class\u003d\"content-title\"\u003e\u003ch2\u003e\u003c?\u003drs.suppmgr.formTitle?\u003e\u003c/h2\u003e\u003c/div\u003e\n  \u003cdiv id\u003d\"suppmgr-tabs\" class\u003d\"f14 tabs-min\"\u003e\n    \u003cul\u003e\n      \u003cli\u003e\u003ca href\u003d\"#suppmgr-tabs-1\"\u003e\u003c?\u003drs.suppmgr.tabTitle1?\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href\u003d\"#suppmgr-tabs-2\"\u003e\u003c?\u003drs.suppmgr.tabTitle2?\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n    \n    \u003cdiv id\u003d\"suppmgr-tabs-1\" class\u003d\"input-area\"\u003e \n      \u003cinput type\u003d\u0027hidden\u0027 name\u003d\u0027view\u0027 value\u003d\u0027suppmgr\u0027 /\u003e\n      \u003cfieldset\u003e\n        \u003clegend\u003e\u003c?\u003drs.suppmgr.inputTitle1?\u003e\u003c/legend\u003e\n        \n        \u003cdiv\u003e \n          \u003clabel for\u003d\"suppname\"\u003e\u003c?\u003drs.suppmgr.suppname?\u003e:\u003c/label\u003e \n          \u003cinput type\u003d\"text\" name\u003d\"suppname\" id\u003d\"suppname\" /\u003e \n        \u003c/div\u003e \n        \n        \u003cdiv\u003e \n          \u003clabel for\u003d\"suppemail\"\u003e\u003c?\u003drs.business.Email?\u003e:\u003c/label\u003e \n          \u003cinput type\u003d\"text\" name\u003d\"suppemail\" id\u003d\"suppemail\" /\u003e \n        \u003c/div\u003e \n        \n        \u003cdiv\u003e \n          \u003clabel for\u003d\"supptel\"\u003e\u003c?\u003drs.business.TelNo?\u003e:\u003c/label\u003e \n          \u003cinput type\u003d\"text\" name\u003d\"supptel\" id\u003d\"supptel\" /\u003e \n        \u003c/div\u003e \n        \n        \u003cdiv\u003e \n          \u003clabel for\u003d\"suppfax\"\u003e\u003c?\u003drs.business.FaxNo?\u003e:\u003c/label\u003e \n          \u003cinput type\u003d\"text\" name\u003d\"suppfax\" id\u003d\"suppfax\" /\u003e \n        \u003c/div\u003e \n        \n        \u003cbutton id\u003d\u0027querySuppliers\u0027 class\u003d\"btn\" onclick\u003d\"submitQuerySuppliers()\"\u003e\u003c?\u003drs.common.queryBtnTitle?\u003e\u003c/button\u003e\n        \u003cbutton id\u003d\u0027clearQuerySuppliers\u0027 class\u003d\"btn\" onclick\u003d\"clearQuerySuppliers()\"\u003e\u003c?\u003drs.common.clearBtnTitle?\u003e\u003c/button\u003e\n      \u003c/fieldset\u003e\n    \u003c/div\u003e\n    \u003cdiv id\u003d\"suppmgr-tabs-2\"  class\u003d\"input-area\"\u003e \n      \u003cfieldset\u003e\n        \u003clegend\u003e\u003c?\u003drs.suppmgr.inputTitle2?\u003e\u003c/legend\u003e\n        \u003cform id\u003d\u0027uploadSupplierFileForm\u0027\u003e\n          \u003cp id\u003d\u0027upload-supplier-status\u0027 class\u003d\"msg_info\"\u003e\u003c?\u003drs.suppmgr.info01?\u003e\u003c/p\u003e\n          \u003cinput type\u003d\u0027file\u0027 id\u003d \u0027supplierFile\u0027 name\u003d\u0027supplierFile\u0027 accept\u003d\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" /\u003e\n          \u003cbutton id\u003d\u0027uploadSupplierFile\u0027 class\u003d\"btn\" onclick\u003d\"google.script.run.withSuccessHandler(onSuccessSupplierFile).processFormSupplierFile(this.parentNode)\"\u003e\u003c?\u003drs.common.uploadBtnTitle?\u003e\u003c/button\u003e\n        \u003c/form\u003e\n      \u003c/fieldset\u003e\n    \u003c/div\u003e\n    \u003cdiv style\u003d\"display: block;height: 0px;clear: both;visibility: hidden;\"\u003e\u003c/div\u003e \u003c!-- hack for IE6 --\u003e\n  \u003c/div\u003e \u003c!-- suppmgr-tabs --\u003e\n  \u003cdiv id\u003d\"suppmgr-output-area\" class\u003d\"output-area\"\u003e\n    \u003cfieldset\u003e\n      \u003clegend\u003e\u003c?\u003drs.suppmgr.outputTitle?\u003e\u003c/legend\u003e\n      \u003ctable id\u003d\"suppmgr-supplier-list\" class\u003d\"display\"\u003e\u003c/table\u003e\n    \u003c/fieldset\u003e\n  \u003c/div\u003e\n\u003c/div\u003e \u003c!-- supplier management div --\u003e\n\n\u003c!--\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ADMIN FORM \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n\u003cdiv id\u003d\"admin\"\u003e\n  \u003cdiv class\u003d\"content-title\"\u003e\u003ch2\u003e\u003c?\u003drs.admin.formTitle?\u003e\u003c/h2\u003e\u003c/div\u003e\n  \u003cdiv id\u003d\"admin-tabs\" class\u003d\"f14 tabs-min\" \u003e\n    \u003cul\u003e\n      \u003cli\u003e\u003ca href\u003d\"#admin-tabs-1\"\u003e\u003c?\u003drs.admin.tabTitle1?\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003cli\u003e\u003ca href\u003d\"#admin-tabs-2\"\u003e\u003c?\u003drs.admin.tabTitle2?\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n    \n    \u003cdiv id\u003d\"admin-tabs-1\" class\u003d\"input-area\"\u003e \n      \u003cfieldset\u003e\n        \u003clegend\u003e\u003c?\u003drs.admin.inputTitle1?\u003e\u003c/legend\u003e\n        \u003cdiv\u003e \n          \u003clabel for\u003d\"userlastname\"\u003e\u003c?\u003drs.business.PersonLName?\u003e:\u003c/label\u003e \n          \u003cinput type\u003d\"text\" name\u003d\"userlastname\" id\u003d\"userlastname\" /\u003e *\n        \u003c/div\u003e \n        \n        \u003cdiv\u003e \n          \u003clabel for\u003d\"userfirstname\"\u003e\u003c?\u003drs.business.PersonFName?\u003e:\u003c/label\u003e \n          \u003cinput type\u003d\"text\" name\u003d\"userfirstname\" id\u003d\"userfirstname\" /\u003e *\n        \u003c/div\u003e \n\n        \u003cdiv\u003e \n          \u003clabel for\u003d\"useremail\"\u003e\u003c?\u003drs.business.Email?\u003e:\u003c/label\u003e \n          \u003cinput type\u003d\"text\" name\u003d\"useremail\" id\u003d\"useremail\" /\u003e *\n        \u003c/div\u003e \n\n        \u003cdiv\u003e \n          \u003clabel for\u003d\"select-user-branch\"\u003e\u003c?\u003drs.business.Branch?\u003e:\u003c/label\u003e \n          \u003cselect id\u003d\u0027select-user-branch\u0027\u003e\n            \u003coption value\u003d\"-1\"\u003e\u003c/option\u003e\n          \u003c?for (var i\u003d0;i\u003cbranches.length;i++) { ?\u003e\n              \u003coption value\u003d\"\u003c?\u003dbranches[i].id?\u003e\"\u003e\u003c?\u003dbranches[i].name?\u003e\u003c/option\u003e\n          \u003c? } ?\u003e\n          \u003c/select\u003e *\n        \u003c/div\u003e \n       \n        \u003cbutton id\u003d\u0027updateUser\u0027 class\u003d\"btn btn-success\" onclick\u003d\"submitAddUser()\"\u003e\u003c?\u003drs.common.addBtnTitle?\u003e\u003c/button\u003e\n        \u003cbutton id\u003d\u0027clearUpdateUser\u0027 class\u003d\"btn btn-success\" onclick\u003d\"clearUpdateUser()\"\u003e\u003c?\u003drs.common.clearBtnTitle?\u003e\u003c/button\u003e\n      \u003c/fieldset\u003e\n\n      \u003cfieldset\u003e\n        \u003clegend\u003e\u003c?\u003drs.admin.outputTitle1?\u003e\u003c/legend\u003e\n        \u003ctable id\u003d\"admin-user-list\" class\u003d\"display\"\u003e\u003c/table\u003e\n      \u003c/fieldset\u003e\n       \n    \u003c/div\u003e\n    \u003cdiv id\u003d\"admin-tabs-2\"\u003e \n      \u003cfieldset\u003e\n        \u003clegend\u003e\u003c?\u003drs.admin.inputTitle2?\u003e\u003c/legend\u003e\n        \u003cdiv\u003e \n          \u003clabel for\u003d\"branchname\"\u003e\u003c?\u003drs.business.Branch?\u003e:\u003c/label\u003e \n          \u003cinput type\u003d\"text\" name\u003d\"branchname\" id\u003d\"branchname\" /\u003e \n        \u003c/div\u003e \n        \u003cdiv\u003e \n          \u003clabel for\u003d\"branchaddress\"\u003e\u003c?\u003drs.business.Address?\u003e:\u003c/label\u003e \n          \u003cinput type\u003d\"text\" name\u003d\"branchaddress\" id\u003d\"branchaddress\" /\u003e \n        \u003c/div\u003e \n        \u003cdiv\u003e \n          \u003clabel for\u003d\"branchtel\"\u003e\u003c?\u003drs.business.TelNo?\u003e:\u003c/label\u003e \n          \u003cinput type\u003d\"text\" name\u003d\"branchtel\" id\u003d\"branchtel\" /\u003e \n        \u003c/div\u003e \n        \u003cdiv\u003e \n          \u003clabel for\u003d\"branchfax\"\u003e\u003c?\u003drs.business.FaxNo?\u003e:\u003c/label\u003e \n          \u003cinput type\u003d\"text\" name\u003d\"branchfax\" id\u003d\"branchfax\" /\u003e \n        \u003c/div\u003e \n        \u003cdiv\u003e \n          \u003clabel for\u003d\"branchemail\"\u003e\u003c?\u003drs.business.Email?\u003e:\u003c/label\u003e \n          \u003cinput type\u003d\"text\" name\u003d\"branchemail\" id\u003d\"branchemail\" /\u003e \n        \u003c/div\u003e \n        \u003cdiv\u003e \n          \u003clabel for\u003d\"branchcontact\"\u003e\u003c?\u003drs.business.Contact?\u003e:\u003c/label\u003e \n          \u003cinput type\u003d\"text\" name\u003d\"branchcontact\" id\u003d\"branchcontact\" /\u003e \n        \u003c/div\u003e \n       \n        \u003cbutton id\u003d\u0027updateBranch\u0027 class\u003d\"btn\" onclick\u003d\"submitAddBranch()\"\u003e\u003c?\u003drs.common.addBtnTitle?\u003e\u003c/button\u003e\n        \u003cbutton id\u003d\u0027clearUpdateBranch\u0027 class\u003d\"btn\" onclick\u003d\"clearUpdateBranch()\"\u003e\u003c?\u003drs.common.clearBtnTitle?\u003e\u003c/button\u003e\n      \u003c/fieldset\u003e\n\n      \u003cfieldset\u003e\n        \u003clegend\u003e\u003c?\u003drs.admin.outputTitle2?\u003e\u003c/legend\u003e\n        \u003ctable id\u003d\"admin-branch-list\" class\u003d\"display\"\u003e\u003c/table\u003e\n      \u003c/fieldset\u003e\n           \n    \u003c/div\u003e\n    \n  \u003c/div\u003e \u003c!-- admin-tabs --\u003e\n  \n\u003c/div\u003e \u003c!-- admin div --\u003e\n\n\u003c/div\u003e \u003c!-- content--\u003e\n\n\u003cdiv style\u003d\"font:0px/0px sans-serif;clear:both;display:block\"\u003e\u003c/div\u003e\u003c!--here--\u003e\n\u003c/div\u003e \u003c!-- container--\u003e\n\n\u003cdiv id\u003d\"footer\" class\u003d\"footer bc\"\u003e\n\u003cp\u003eCloud Information System\u003c/p\u003e\n\u003c/div\u003e  \n\n\u003c!--\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d JAVASCRIPT CODE      \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e\n\n  \u003cscript language\u003d\"javascript\" type\u003d\"text/jscript\"\u003e\n  \u003c!--  \n  //log(\"Entering define variables...\");\n  //Global variabes\n  var handle \u003d {};\n  \n  var MESSAGETXT \u003d JSON.parse($(\"input[name\u003d\u0027message\u0027]\").first().val());\n  var STATUS \u003d JSON.parse($(\"input[name\u003d\u0027status\u0027]\").first().val());\n  var menuitems \u003d JSON.parse($(\"input[name\u003d\u0027menuitems\u0027]\").first().val());\n  \n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ON START FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  $(document).ready(function(){\n    log(\"Entering ready...\");\n    \n    // Initial menu etc.,\n    initLayout();\n    \n    // Assign handle function to each menu item\n    initHandle();\n    \n    //Hide all content page at the begining\n    hideAllContent();\n\n    // initialize all controls\n    initControls();\n    \n    // and other init functions\n    initFunctions();\n    \n    // Display the home page\n    displayHomePage(\"Welcome to Cloud Logistics System! \");\n    \n  });\n\n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d COMMON FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\n  \n  --\u003e\n  \u003c/script\u003e\n\u003c/body\u003e\n  \n\u003c/html\u003e"},{"id":"e5ccfc92-15bd-4e33-ab93-169ee7972b1e","name":"global-constants","type":"server_js","source":"//Constants Relative\nGLOBAL.namespace(\"Constants\");\n\nGLOBAL.Constants.APP_URL \u003d \u0027https://script.google.com/macros/s/AKfycby9qc2P6sXqd3WWrUEJE8vcApg9LTrvYX4VMQGNebw/dev\u0027;\n\nGLOBAL.Constants.REC_ACTIVE \u003d 0;\nGLOBAL.Constants.REC_EXPIRED \u003d 1;\n\nGLOBAL.Constants.LOG_FORMAT \u003d \"[INFO] USER:[%s] \u003d\u003e %s\";\nGLOBAL.Constants.ERR_LOG_FORMAT \u003d \"[ERROR] USER:[%s] \u003d\u003e %s\";\n\nGLOBAL.Constants.RET_OK \u003d 0;\nGLOBAL.Constants.RET_ERR \u003d -1;\n\n\n//---------- STATUS DEFINITION -------------\n// Order\u0027s status\nGLOBAL.Constants.STATUS \u003d {};\nGLOBAL.Constants.STATUS.NEW \u003d {title:\"New\", value:0};\nGLOBAL.Constants.STATUS.IN_PROGRESS \u003d  {title:\"In Progress\", value:1};\nGLOBAL.Constants.STATUS.PURCHASED \u003d {title:\"Purchased\", value:2};\nGLOBAL.Constants.STATUS.DELIVERED \u003d {title:\"Delivered\", value:3};\nGLOBAL.Constants.STATUS.NONE \u003d {title:\"\", value:-1};\nGLOBAL.Constants.STATUS.ALL \u003d {title:\"All\", value:99};\n\n\n//---------- TABLE TYPE -------------\nGLOBAL.Constants.ITEM_TYPE \u003d \"Item\";\nGLOBAL.Constants.ITEMTYPE_TYPE \u003d \"ItemType\";\nGLOBAL.Constants.ORDER_TYPE \u003d \"Order\";\nGLOBAL.Constants.ORDER_DETAIL_TYPE \u003d \"OrderDetail\";\nGLOBAL.Constants.AGG_ORDER_TYPE \u003d \"AggregatedOrder\";\nGLOBAL.Constants.DISTRIBUTE_TYPE \u003d \"DistributeDetail\";\nGLOBAL.Constants.DISTRMASTER_TYPE \u003d \"DistrMaster\";\nGLOBAL.Constants.PURCHASE_TYPE \u003d \"Purchase\";\nGLOBAL.Constants.PD_TYPE \u003d \"PurchaseDetail\";\nGLOBAL.Constants.BRANCH_TYPE \u003d \"Branch\";\nGLOBAL.Constants.ITEM_SUPPLIER_TYPE \u003d \"ItemSupplier\";\nGLOBAL.Constants.SUPPLIER_TYPE \u003d \"Supplier\";\nGLOBAL.Constants.STAFF_TYPE \u003d \"Staff\";\nGLOBAL.Constants.BRANCH_STAFF_TYPE \u003d \"BranchStaff\";\n\n\nGLOBAL.Constants.STOCK_IN \u003d 0;\nGLOBAL.Constants.STOCK_OUT \u003d 1;\n//GLOBAL.Constants.STOCK_DIRECTION \u003d new Array(\"IN\", \"OUT\");  // Internationalized\n\n\n//---------- OTHERS --------------------------\nGLOBAL.Constants.CURRENCY_SYMBOL \u003d \"£\";\nGLOBAL.Constants.TIME_FMT \u003d \"yyyy/MM/dd\";\n"},{"id":"44472d19-b728-444e-9bb0-6232dd32039d","name":"global-util","type":"server_js","source":"//Constants Relative\nGLOBAL.namespace(\"Util\");\n\nGLOBAL.Util.debugLog \u003d function(msg) {\n  Logger.log(\"[DEBUG]\" + msg);\n}\n\nGLOBAL.Util.infoLog \u003d function(msg) {\n  Logger.log(GLOBAL.Constants.LOG_FORMAT,GLOBAL.Util.getCurrentUser(), msg);\n}\n\nGLOBAL.Util.errorLog \u003d function(msg) {\n  Logger.log(GLOBAL.Constants.ERR_LOG_FORMAT,GLOBAL.Util.getCurrentUser(), msg);\n}\n\nGLOBAL.Util.getCurrentTime \u003d function(){\n  var currentTime \u003d new Date();\n  return currentTime.getTime();\n}\n\nGLOBAL.Util.getCurrentUser \u003d function() {\n  return Session.getActiveUser().getEmail();\n  //return \"SongXin\";\n}\n\nGLOBAL.Util.getCurrentTimeString \u003d function(){\n  var currentTime \u003d new Date();\n  return JSON.stringify(currentTime);\n}\n\nGLOBAL.Util.getCurrentUserEmail \u003d function() {\n  return Session.getActiveUser().getEmail();\n}\n\n//string must not be null, empty, or just space or LR/CR etc.\nGLOBAL.Util.isValidString \u003d function(str) {\n\n  if (!str) return false;\n  if (str \u003d\u003d\u003d undefined) return false;\n  \n  if (str.replace(/(^s*)|(s*$)/g, \"\").length \u003d\u003d0) \n  { \n    return false; \n  } \n  return true;\n}\n\n//whether a object is {} or null.\nGLOBAL.Util.isEmpty \u003d function(obj) {\n\n  for (var name in obj) {\n    return false;\n  }\n  return true;\n}\n\n\nGLOBAL.Util.showPara \u003d function (obj) {\n  \n  for (var item in obj) {\n    if (item \u003d\u003d \"funcName\") continue;\n    GLOBAL.Util.debugLog(\"[\"+obj.funcName+\"] -------- parameter [\"+item+\"] is --------\");\n    GLOBAL.Util.displayObject(obj[item]);\n    \n  }\n  \n}\n//----------------------------------------------------\n// INPUT: Object that needs to be displayed\n// OUTPUT: Key-Value list\n//----------------------------------------------------\nGLOBAL.Util.displayObject \u003d function (obj) {\n\n  var type \u003d GLOBAL.Util.toType(obj);\n  \n  GLOBAL.Util.debugLog(\"---------------   START   ---------------\");\n  GLOBAL.Util.debugLog(\"--\u003etype is \" + type + \"\");\n  GLOBAL.Util.debugLog(\"--\u003econtent is \" + JSON.stringify(obj) + \"\");\n  GLOBAL.Util.debugLog(\"---------------   End     ---------------\");\n\n}\n\nGLOBAL.Util.toType \u003d function(obj) {\n  return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n  //return Object.prototype.toString.call(obj);\n}\n//----------------------------------------------------\n// INPUT: Date as MillSec\n// OUTPUT: String of that Date with format\n//----------------------------------------------------\nGLOBAL.Util.formatDateByTime \u003d function(time, fmt) {\n  \n  if (time \u003d\u003d 0 || time \u003d\u003d null || time \u003d\u003d\u003d undefined || isNaN(time)) {\n    return \"\";\n  }\n  \n  //GLOBAL.Util.debugLog(\"formatDateByTime: \" + time + \" with \" + fmt);\n  \n  var dd \u003d new Date(time);\n  \n  var o \u003d {\n    \"M+\" : dd.getMonth()+1, //month\n    \"d+\" : dd.getDate(),    //day\n    \"h+\" : dd.getHours(),   //hour\n    \"m+\" : dd.getMinutes(), //minute\n    \"s+\" : dd.getSeconds(), //second\n    \"q+\" : Math.floor((dd.getMonth()+3)/3),  //quarter\n    \"S\" : dd.getMilliseconds() //millisecond\n  }\n  \n  if(/(y+)/.test(fmt)){\n    fmt\u003dfmt.replace(RegExp.$1,(dd.getFullYear()+\"\").substr(4 - RegExp.$1.length));\n  }\n  \n  for(var k in o) {\n    if(new RegExp(\"(\"+ k +\")\").test(fmt)) {\n      fmt \u003d fmt.replace(RegExp.$1,RegExp.$1.length\u003d\u003d1 ? o[k] : (\"00\"+ o[k]).substr((\"\"+ o[k]).length));\n    }\n  }\n  \n  return fmt;\n}\n\n\n/*\nGLOBAL.Util.convert_old \u003d function(fileId) {\n  GLOBAL.Util.authorize();\n  var key \u003d \"AIzaSyDBKvH3jYGl_SROPhd0TFdD27ZwrcDaWo0\"; // \u003c-- developer key, usually get it from https://code.google.com/apis/console\n  var params \u003d {method:\"post\"\n                ,oAuthServiceName: \"drive\"\n                ,oAuthUseToken: \"always\"\n                //,contentType: \u0027application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\u0027\n               };\n  \n  var uploadRequest \u003d UrlFetchApp.fetch(\"https://www.googleapis.com/drive/v2/files/\"+fileId+\"/copy?convert\u003dtrue\u0026key\u003d\"+key, params);\n  GLOBAL.Util.debugLog(\"uploadRequest has been fetched! \" + uploadRequest.getContentText());\n  var uploadResponse \u003d Utilities.jsonParse(uploadRequest.getContentText());\n  return DocsList.getFileById(uploadResponse.id);\n}\n\nGLOBAL.Util.authorize \u003d function() {\n  var oauthConfig \u003d UrlFetchApp.addOAuthService(\"drive\");\n  var scope \u003d \"https://www.googleapis.com/auth/drive\";\n  oauthConfig.setConsumerKey(\"anonymous\");\n  oauthConfig.setConsumerSecret(\"anonymous\");\n  oauthConfig.setRequestTokenUrl(\"https://www.google.com/accounts/OAuthGetRequestToken?scope\u003d\"+scope);\n  oauthConfig.setAuthorizationUrl(\"https://accounts.google.com/OAuthAuthorizeToken\");    \n  oauthConfig.setAccessTokenUrl(\"https://www.google.com/accounts/OAuthGetAccessToken\");  \n}\n*/\n/**\n * Convert from Excel data to Spreadsheet\n * @param {Blob} excelFile the excel blob data.\n * @param {String} filename file name on uploading drive\n * @return {Spreadsheet} spreadsheet instance.\n **/\n/*GLOBAL.Util.convert2Spreadsheet \u003d function (excelFile, filename) {\n\n  var key \u003d \"AIzaSyDBKvH3jYGl_SROPhd0TFdD27ZwrcDaWo0\"; // \u003c-- developer key, usually get it from https://code.google.com/apis/console\n  var oauthConfig \u003d UrlFetchApp.addOAuthService(\u0027drive\u0027);\n  \n  //Create oauth config for drive api\n  var scope \u003d \u0027https://www.googleapis.com/auth/drive\u0027;\n  oauthConfig.setConsumerKey(\u0027anonymous\u0027);\n  oauthConfig.setConsumerSecret(\u0027anonymous\u0027);\n  oauthConfig.setRequestTokenUrl(\u0027https://www.google.com/accounts/OAuthGetRequestToken?scope\u003d\u0027+scope);\n  oauthConfig.setAuthorizationUrl(\u0027https://accounts.google.com/OAuthAuthorizeToken\u0027);    \n  oauthConfig.setAccessTokenUrl(\u0027https://www.google.com/accounts/OAuthGetAccessToken\u0027);  \n  \n  var uploadParams \u003d {\n    method:\u0027post\u0027,\n    oAuthServiceName: \u0027drive\u0027,\n    oAuthUseToken: \u0027always\u0027,\n    contentType: \u0027application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\u0027,\n    contentLength: excelFile.getBytes().length,\n    payload: excelFile.getBytes()\n  };\n  \n  //insert to root folder of google drive, and convert to Sheets\n  var uploadResponse \u003d UrlFetchApp.fetch(\u0027https://www.googleapis.com/upload/drive/v2/files/?uploadType\u003dmedia\u0026convert\u003dtrue\u0026key\u003d\u0027+key, uploadParams);\n    \n  //this response body format is json , and it has file id. Please see https://developers.google.com/drive/v2/reference/files#resource\n  var fileDataResponse \u003d JSON.parse(uploadResponse.getContentText());\n \n  //Update filename\n  var updateParams \u003d {\n    method:\u0027put\u0027,\n    oAuthServiceName: \u0027drive\u0027,\n    oAuthUseToken: \u0027always\u0027,\n    contentType: \u0027application/json\u0027,\n    payload: JSON.stringify({ title: filename })\n  };\n  \n  UrlFetchApp.fetch(\u0027https://www.googleapis.com/drive/v2/files/\u0027+fileDataResponse.id+\u0027?key\u003d\u0027+key, updateParams);\n  \n  return SpreadsheetApp.openById(fileDataResponse.id);\n};*/\n\nGLOBAL.Util.getFnName \u003d function(callee){\n  var _callee \u003d callee.toString().replace(/[\\s\\?]*/g,\"\"),\n  comb \u003d _callee.length \u003e\u003d 50 ? 50 :_callee.length;\n  _callee \u003d _callee.substring(0,comb);\n  var name \u003d _callee.match(/^function([^\\(]+?)\\(/);\n  if(name \u0026\u0026 name[1]){\n    return name[1];\n  }\n  var caller \u003d callee.caller,\n  _caller \u003d caller.toString().replace(/[\\s\\?]*/g,\"\");\n  var last \u003d _caller.indexOf(_callee),\n  str \u003d _caller.substring(last-30,last);\n  name \u003d str.match(/var([^\\\u003d]+?)\\\u003d/);\n  if(name \u0026\u0026 name[1]){\n    return name[1];\n  }\n  return \"anonymous\"\n};\n\nGLOBAL.Util.getStatusTitleByValue \u003d function(statusId) {\n  if (statusId \u003d\u003d NaN || statusId \u003d\u003d null || statusId \u003d\u003d undefined) return \"\";\n  for (var s in GLOBAL.Constants.STATUS) {\n    if (statusId \u003d\u003d GLOBAL.Constants.STATUS[s].value) {\n      return GLOBAL.Constants.STATUS[s].title;\n      break;\n    }\n  }\n  return \"\";\n};\n\nGLOBAL.Util.getLocalString \u003d function() {\n  return MESSAGETXT_EN;\n}\n\nGLOBAL.Util.trimString \u003d function(str,L) {\n    var result \u003d \u0027\u0027,\n        strlen \u003d str.length, // 字符串长度\n        chrlen \u003d str.replace(/[^\\x00-\\xff]/g,\u0027**\u0027).length; // 字节长度\n\n    if(chrlen\u003c\u003dL){return str;}\n    \n    for(var i\u003d0,j\u003d0;i\u003cstrlen;i++){\n        var chr \u003d str.charAt(i);\n        if(/[\\x00-\\xff]/.test(chr)){\n            j++; // ascii码为0-255，一个字符就是一个字节的长度\n        }else{\n            j+\u003d2; // ascii码为0-255以外，一个字符就是两个字节的长度\n        }\n        if(j\u003c\u003dL){ // 当加上当前字符以后，如果总字节长度小于等于L，则将当前字符真实的+在result后\n            result +\u003d chr;\n        }else{ // 反之则说明result已经是不拆分字符的情况下最接近L的值了，直接返回\n            return result + \"...\";\n        }\n    }\n}\n"},{"id":"24afdaea-1d17-4ce2-b0a5-75960bd1c89a","name":"order","type":"server_js","source":"/**\nOrder module containing all the definition \nand methods that are used by Order module (including order log)\n\n@class\n@constructor\n\n@author songxin \u003csongxin1973@gmail.com\u003e\n@modified songxin\n@date 2014-03-04\n**/\n\n//\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Server End Code \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d//\nvar Order \u003d {                    //create a namespace\n\n  prepareOrder : function() {\n    var result \u003d {};\n  // should be a two-dimensional array. \n    result.items \u003d Model.prepareItems();\n    result.itemTypes \u003d Model.getItemTypes();\n      \n    return result;\n  },\n//--------------------------------------------------\n// save the items from the basket as order record\n// 2015/05/18 adding cust_itemID from uploaded file \n//--------------------------------------------------\n  placeOrder : function (params) {\n  \n    GLOBAL.Util.infoLog(\"Entering Order#placeOrder()...\");\n    GLOBAL.Util.showPara({\n      funcName:\"Order#placeOrder\",\n      params:params\n    });\n    \n    //create a order\n    var branchID \u003d GLOBAL.Security.getCurrentBranchByLogin(GLOBAL.Util.getCurrentUser()).branchID;\n    var currentTime \u003d GLOBAL.Util.getCurrentTime();\n    \n    var lock \u003d LockService.getPublicLock();\n    lock.waitLock(30000);\n    \n    try{\n      //branchID, deliveryDate, placeStaffID\n      var order \u003d Model.createOrder(branchID,\"\",GLOBAL.Security.getCurrentStaffID());\n      var details \u003d new Array();\n      \n      GLOBAL.Util.displayObject(order);\n      \n      //saving all details and making them belonging to this order\n      for (var i\u003d0;i\u003cparams.length;i++){\n        //var itemID \u003d parseInt(params[i].itemID);  // ID should be number, representing for the record_id of item table\n        var itemID \u003d parseInt(params[i].id);\n        \n        var item \u003d Model.getItemByID(itemID);\n        var detail \u003d {};\n        detail.detailID \u003d i;\n        detail.orderID \u003d order.record_id;\n        detail.item \u003d item;\n        detail.itemQty \u003d params[i].qty;\n        detail.itemPrice \u003d Model.getSupplierInfoByItemID(itemID).guidePrice;\n        detail.supplier \u003d params[i].supplier;\n        detail.valid \u003d true;\n        details.push(detail);\n      }\n      order.details \u003d details;\n      Model.updateOrder(order);\n      \n    }finally { // make sure it gets released even if we blow up\n      lock.releaseLock();\n    }\n    \n    //sending an email to the staff who place the order\n    this.sendEmail();\n    \n    return order;\n  },\n\n/**\nUpdate the order which data comes from OrderLog\n if there is no detail, still remain the order information\n\n@method updateOrder\n@param orderID {string} identify the order that will be updated \n@param params {Array} include the data that will be updated \n@return  {Object} order that has been updated\n*/\n  updateOrder : function (orderID, params) {\n  \n    GLOBAL.Util.infoLog(\"Entering Order#updateOrder()...\" + orderID + \":\" +params);\n    GLOBAL.Util.displayObject(params);\n    \n    \n    var currentTime \u003d GLOBAL.Util.getCurrentTime();\n    \n    var lock \u003d LockService.getPublicLock();\n\n    lock.waitLock(30000);\n    try{\n      \n      var condition \u003d {record_id:orderID};\n      var orders \u003d Model.getOrdersByKey(condition);\n      \n      if (orders.length !\u003d 1) {\n        var msg \u003d \"there is no or more than one orders with id \" + orderID;\n        GLOBAL.Util.errorLog(msg);\n        throw new BusinessException(msg);\n      }\n      \n      GLOBAL.Util.displayObject(orders);\n      \n      var details \u003d orders[0].details;\n      var hit \u003d false;\n      // updating the detail with params\n      for (var idx\u003d0,max\u003ddetails.length; idx\u003cmax; idx++) {\n        var detail \u003d details[idx];\n        hit \u003d false;\n        for (var idp\u003d0; idp\u003cparams.length; idp++) {\n          if (detail.item.record_id \u003d\u003d params[idp].itemID) {\n            detail.itemQty \u003d params[idp].itemQty;\n            hit \u003d true;\n            break;\n          }\n        }\n\n        if (!hit) {\n          //This detail has been deleted.\n          detail.valid \u003d false;\n        }\n      }\n      \n      //update the order\n      Model.updateOrder(orders[0]);\n\n    }finally { // make sure it gets released even if we blow up\n      lock.releaseLock();\n    }\n    \n    \n    //sending an email to the staff who place the order\n    this.sendEmail();\n    \n    return orders[0];\n  },\n\n//----------------------------------------------------\n// Send an email to branch manager and purchase manager\n//----------------------------------------------------\n  sendEmail : function () {\n    GLOBAL.Util.infoLog(\"Entering order#sendEmail()...\");\n    \n    var subject \u003d \"Confirmation of Order\";\n    var message \u003d \"An order has been placed and sent to Purchasing Manager.\";\n    message +\u003d \"\u003cbr /\u003e You can find the latest order information in following url:\";\n    message +\u003d \"\u003cbr /\u003e \" + GLOBAL.Constants.APP_URL + \"?view\u003dorderlog\";\n    \n    //MailApp.sendEmail(GLOBAL.Util.getCurrentUserEmail(), subject, message);  \n  },\n\n\n//----------------------------------------------------\n// get the latest order the current user placed and display it \n// in the orderlog view.\n//----------------------------------------------------\n  getLatestOrder : function() {\n  \n    GLOBAL.Util.infoLog(\"Entering order#getLatestOrder()...\")\n    \n    var branchID \u003d GLOBAL.Security.getCurrentBranchByLogin(GLOBAL.Util.getCurrentUser()).branchID;\n    var branches \u003d Model.getBranches();\n    var itemTypes \u003d Model.getItemTypes();\n    \n    var order \u003d {};\n    \n    var latestOrder \u003d Model.getLatestOrder(branchID);     \n    GLOBAL.Util.debugLog(\"The id of the latest order is \" + latestOrder.record_id);\n\n    //Mapping the necessary information\n    order.record_id \u003d latestOrder.record_id;\n    order.branchName \u003d branches[branchID].name;\n    order.placeDate \u003d GLOBAL.Util.formatDateByTime(latestOrder.placeDate, \"yyyy/MM/dd hh:mm:ss\");\n    order.statusID \u003d latestOrder.statusID;\n    order.statusText \u003d GLOBAL.Util.getStatusTitleByValue(latestOrder.statusID);\n    \n    //setting detail information\n    order.details \u003d latestOrder.details;\n    //GLOBAL.Util.debugLog(\"[getLatestOrder] before setting, the details are \");\n    //GLOBAL.Util.displayObject(order.details);\n    for(var idx\u003d0,max\u003dorder.details.length;idx\u003cmax;idx++){\n      var detail \u003d order.details[idx];\n      detail.itemType \u003d itemTypes[detail.item.itemTypeCode];\n      detail.description \u003d detail.item.name + \" \" + detail.item.package;\n    }\n    //GLOBAL.Util.debugLog(\"[getLatestOrder] after setting, the details are \");\n    //GLOBAL.Util.displayObject(order.details);\n    \n    //GLOBAL.Util.displayObject(order);\n    return order;\n  },\n  \n  end : function() {\n    GLOBAL.Util.infoLog(\"Entering Order#end()...\");\n  }\n  \n};\n"},{"id":"daac610b-419d-4780-acac-2678850f7a2d","name":"global-data","type":"server_js","source":"/**\nData module containing all the constant definition \nand methods that manipulating data via Scriptdb\n\n@class\n@constructor\n\n@author songxin \u003csongxin1973@gmail.com\u003e\n@modified songxin\n@date 2014-02-03\n**/\nGLOBAL.namespace(\"Data\");\n\n\n/**\ndelete the whole database. maybe time-consuming if there are \nmany data existed\n\n@method GLOBAL.Data.deleteAll\n@return {null}\n**/\nGLOBAL.Data.deleteAll \u003d function() {\n  \n};\n\n/**\nsave item into database.  \n\n@method GLOBAL.Data.saveDataItem\n@param type {String} the type of data you want to save\n@param [content] {Object} A map containing the content that you want to save\n@example\n   1. create an object that contains the contents;\n   2. GLOBAL.Data.saveDataItem(\"data type\", contents)\n@return {Object} The object that just has been saved\n**/\nGLOBAL.Data.saveDataItem \u003d function(type, content) {\n  \n  GLOBAL.Util.infoLog(\"Entering saveDataItem. type:\" + type);\n  \n  var data \u003d {};\n  data.collection \u003d type;\n  data.data \u003d content;\n  \n  // to set record_id, get the count of this type of data\n  var count \u003d GLOBAL.Data.getCount(type);\n  \n  data.data.record_id \u003d count;\n  // set other necessary information\n  data.data.activeFlg \u003d GLOBAL.Constants.REC_ACTIVE;\n  data.data.modifiedPerson \u003d GLOBAL.Util.getCurrentUser();\n  data.data.modifiedDate \u003d GLOBAL.Util.getCurrentTime();\n  \n  // store the data\n  var res \u003d GLOBAL.Data.insert(data);\n  \n  if (res.code \u003d\u003d GLOBAL.Constants.RET_OK) {\n    return res.data;\n  } else {\n    var msg \u003d \"There is an error occurred when insert data\" + res.message;\n    GLOBAL.Util.errorLog(msg);\n    throw new LogicException(msg);    \n  }\n};\n\n/**\nupdate item into database.  \n@method GLOBAL.Data.updateDataItem\n@param obj {Object} the object that want to be updated\n@example\n@return Map the item that just be updated\n**/\nGLOBAL.Data.updateDataItem \u003d function(obj, query) {\n  GLOBAL.Util.infoLog(\"Entering updateDataItem: ...\");\n  GLOBAL.Util.showPara({\n    funcName:\"updateDataItem\",\n    \"obj\":obj,\n    \"query\":query\n  });\n  \n  var upd \u003d {};\n  upd.collection \u003d obj.type;\n  upd.id \u003d obj.id;\n  \n  if (!query \u0026\u0026 obj.hasOwnProperty(\"record_id\")) {  // record_id is the common key for all tables\n    upd.query \u003d {\"record_id\" : obj.record_id};\n  }else if (query) {\n    upd.query \u003d query;\n  }\n  upd.data \u003d obj;\n  \n  var res \u003d GLOBAL.Data.update(upd);\n  if (res.code \u003d\u003d GLOBAL.Constants.RET_OK) {\n    return res.data;\n  } else {\n    var msg \u003d \"There is an error occurred when update data: \" + res.message;\n    GLOBAL.Util.errorLog(msg);\n    throw new LogicException(msg);    \n  }\n  \n}\n\n/**\nretrieve data from database by condition.  \n\n@method GLOBAL.Data.getDataItems\n@param [condition] {Object} A map containing the content that you want to save\n@example\n@return [results] {Array} An array the item depend on the condition\n**/\nGLOBAL.Data.getDataItems \u003d function(condition) {\n  //GLOBAL.Util.infoLog(\"Entering GLOBAL.Data.getDataItems:\" + condition.type);\n  \n  //add ACTIVE flag\n  condition.activeFlg \u003d GLOBAL.Constants.REC_ACTIVE;\n  \n  return GLOBAL.Data.getAllDataItems(condition);  \n}\n\n// \"condition\" includes following:\n//   \u003d\u003e type:         represents the table/collection which should be feteched\n//   \u003d\u003e record_id:    have to be sure that is a number\n//   \u003d\u003e sort:         sort conditions, which should follow the \"%s\" parameter\n//   \u003d\u003e limit:        a number showing how many records should be retrieved \n// NOTE: only the real data will be returned (there is no status code or error message, etc.)\n// If there is no data, just return null\nGLOBAL.Data.getAllDataItems \u003d function(condition) {\n  GLOBAL.Util.infoLog(\"Entering GLOBAL.Data.getAllDataItems...\");\n  GLOBAL.Util.showPara({\n    funcName:\"getAllDataItems\",\n    \"condition\":condition\n  });\n  var results \u003d new Array();\n  \n  var query \u003d {};\n  query.collection \u003d condition.type;\n\n  var queryString \u003d {};\n  var sort \u003d {};\n  var limit \u003d 0;\n  \n  // Setting the query condition, which is attached after \"\u0026q\u003d\"\n  // as well as sort (after \"\u0026s\u003d\") and limit (after \"\u0026l\u003d\")\n  for (var key in condition) {\n    if (key \u003d\u003d \"type\") continue;   // type has been already used as collection\n    if (key \u003d\u003d \"record_id\") {\n      queryString[key] \u003d parseInt(condition[key]);\n      continue;\n    }\n    if (key \u003d\u003d \"sort\") {\n      sort \u003d condition.sort;\n      continue;\n    }\n    if (key \u003d\u003d \"limit\") {\n      limit \u003d condition.limit;\n      continue;\n    }\n    \n    //otherwise, all attribues should be one of the query conditon\n    queryString[key] \u003d condition[key];\n  }\n  query.queryString \u003d queryString;  \n    \n  // fetch data\n  var records \u003d GLOBAL.Data.fetchData(query, sort, limit);\n  for (var idx in records.data) {\n    results.push(records.data[idx]);\n  }\n\n  return results;  \n}\n\n\n\n/**\nclear the data that is in the table (type is appointed).  \n\n@method GLOBAL.Data.clearTableData\n@param type {String} the type of data you want to save\n@example\n@return {ScriptDbResult} The object that just has been saved\n**/\nGLOBAL.Data.clearTableData \u003d function(type) {\n  \n  GLOBAL.Util.infoLog(\"Entering clearTableData. type:\" + type);\n  \n  var q \u003d {};\n  q.collection \u003d type;\n  q.data \u003d null;\n  \n  //Since no other information, this action will delete all these type data\n  GLOBAL.Data.update(q);\n\n};\n\n/**\ninitialising data for program.  \n\n@method GLOBAL.Data.initializeData\n@example\n@return {ScriptDbResult} The object that just has been saved\n**/\nGLOBAL.Data.initializeData \u003d function() {\n  \n\n};\n\nGLOBAL.Data.checkRespCode \u003d function (responseCode) {\n  \n  var code \u003d \"\";\n  var message \u003d \"\";\n  // Creating response object\n  switch(responseCode){\n    case 200:\n      code \u003d 0;\n      message \u003d \"OK\";\n      break;\n    case 201:\n      code \u003d 0;\n      message \u003d \"Object created.\";\n      break;\n    case 400:\n      code \u003d -1;\n      message \u003d \"Something wrong in query string or request text.\";\n      break;\n    case 401:\n      code \u003d -1;\n      message \u003d \"No user credentials could be found or the credentials found are not authorized to perform the requested action.\";\n      break;\n    case 403:\n      code \u003d -1;\n      message \u003d \"The server is refusing access to a resource.\";\n      break;\n    case 404:\n      code \u003d -1;\n      message \u003d \"The resource being requested does not exist.\";\n      break;\n    case 405:\n      code \u003d -1;\n      message \u003d \"The HTTP method (e.g. GET or POST) is not supported for the resource being requested.\";\n      break;\n    default:\n      code \u003d -1;\n      message \u003d \"Unknown error.\";\n      break;\n  }\n  \n  return {code:code, message:message};\n  \n}\n"},{"id":"271e5131-0ed5-4432-a02b-664f8c187838","name":"test-DATABASE","type":"server_js","source":"function test_data_saveDataItem() {\n  //Group information\n  var order \u003d {\n    type: \"Order\",\n    branchID: \"1\",\n    placeDate: GLOBAL.Util.getCurrentTime(),\n    preferredDate: GLOBAL.Util.getCurrentTime(),\n    deliveryDate: GLOBAL.Util.getCurrentTime(),\n    placeStaffID: \"2\",\n    purchaseID: -1,\n    statusID: 0\n  }\n  \n  GLOBAL.Data.saveDataItem(\"Order\", order);\n}\n\nfunction test_data_updateDataItem() {\n  //Group information\n  var order \u003d {\n    type: \"OrderTest\",\n    branchID: \"10\",\n    placeDate: GLOBAL.Util.getCurrentTime(),\n    preferredDate: GLOBAL.Util.getCurrentTime(),\n    deliveryDate: GLOBAL.Util.getCurrentTime(),\n    placeStaffID: \"10\",\n    purchaseID: -1,\n    statusID: 0\n  }\n  \n  var res \u003d GLOBAL.Data.saveDataItem(\"OrderTest\", order);\n  GLOBAL.Util.displayObject(res);\n  \n  order.id \u003d res.id;\n  order.branchID \u003d \"12\"\n  GLOBAL.Data.updateDataItem(order);\n}\n\nfunction test_clearTableData() {\n  var testItem1 \u003d {column1:\"0\", column2:1};\n  GLOBAL.Data.saveDataItem(\"testItem\", testItem1);\n  var testItem2 \u003d {column1:\"1\", column2:32};\n  GLOBAL.Data.saveDataItem(\"testItem\", testItem2);\n  \n  GLOBAL.Data.clearTableData(\"testItem\");\n  \n  GLOBAL.Data.getLastError();\n}\n\n\nfunction test_getLatestOrderDetail() {\n  Order.getLatestOrderDetail();\n}\n\nfunction test_getPurchases() {\n  Purchase.getPurchases();\n}\n\n\n//---------------------------------\n// INSERTING TEST DATA \n//---------------------------------\nfunction test_init_all_data() {\n  test_insert_item_data();\n  test_insert_item_supplier_data();\n  test_insert_supplier_data();\n\n  test_insert_branch_data();\n  test_insert_staff_data();\n  test_insert_branch_staff_data();\n}\n\nfunction test_insert_item_data() {\n  \n  var items \u003d new Array();\n  \n  GLOBAL.Data.clearTableData(GLOBAL.Constants.ITEM_TYPE);\n  // 0\u003dframe, 1\u003dplatform\n  items.push({name:\"frame1\", code:\"FRM001\", package:\"13x13 inch\", unit:\"1\", description:\"Frame model 1\", itemType:\"0\", stockPrice:7.85, stockQty:20, safetyQty:10, salePrice:22.33});\n  items.push({name:\"frame2\", code:\"FRM002\", package:\"14x15 inch\", unit:\"1\", description:\"Frame model 2\", itemType:\"0\", stockPrice:18.85, stockQty:20, safetyQty:10, salePrice:22.33});\n  \n  items.push({name:\"platform1\", code:\"PFM001\", package:\"20x25 inch\", unit:\"1\", description:\"Platform P001\", itemType:\"1\", stockPrice:18.85, stockQty:20, safetyQty:10, salePrice:22.33});\n  items.push({name:\"platform2\", code:\"PFM002\", package:\"20x25 inch\", unit:\"1\", description:\"Platform P002\", itemType:\"1\", stockPrice:19.85, stockQty:20, safetyQty:10, salePrice:32.00});\n  \n  items.push({name:\"component1\", code:\"CPN001\", package:\"20x25 inch\", unit:\"1\", description:\"Component C001\", itemType:\"2\", stockPrice:19.85, stockQty:20, safetyQty:10, salePrice:32.00});\n  items.push({name:\"component2\", code:\"CPN002\", package:\"20x25 inch\", unit:\"1\", description:\"Component C002\", itemType:\"2\", stockPrice:19.85, stockQty:20, safetyQty:10, salePrice:32.00});\n  \n  for (var idx\u003d0; idx\u003citems.length; idx++) {\n    GLOBAL.Data.saveDataItem(GLOBAL.Constants.ITEM_TYPE, items[idx]);\n  }\n  \n  //setting the item type\n  GLOBAL.Data.clearTableData(GLOBAL.Constants.ITEMTYPE_TYPE);\n\n  var itemtypes \u003d new Array();\n  itemtypes.push({itemTypeCode:\"0\", itemTypeName:\"frame\"});  \n  itemtypes.push({itemTypeCode:\"1\", itemTypeName:\"platform\"});  \n  itemtypes.push({itemTypeCode:\"2\", itemTypeName:\"component\"});  \n  for (var idx\u003d0; idx\u003citemtypes.length; idx++) {\n    GLOBAL.Data.saveDataItem(GLOBAL.Constants.ITEMTYPE_TYPE, itemtypes[idx]);\n  }\n  \n}\n\nfunction test_insert_branch_data() {\n  \n  var items \u003d new Array();\n  GLOBAL.Data.clearTableData(GLOBAL.Constants.BRANCH_TYPE);\n  \n  items.push({name:\"Birmingham\",  telno:\"03-1234-5678\"});\n  items.push({name:\"Leicester\",  telno:\"03-1234-5678\"});\n  items.push({name:\"Manchester\",  telno:\"03-1234-5678\"});\n  items.push({name:\"Nottingham\",  telno:\"03-1234-5678\"});\n  items.push({name:\"Coventry\",  telno:\"03-1234-5678\"});\n  items.push({name:\"Warehouse\",  telno:\"03-1234-5678\"});\n\n  for (var idx\u003d0; idx\u003citems.length; idx++) {\n    GLOBAL.Data.saveDataItem(GLOBAL.Constants.BRANCH_TYPE, items[idx]);\n  }\n\n}\n\nfunction test_insert_staff_data() {\n  \n  var items \u003d new Array();\n  GLOBAL.Data.clearTableData(GLOBAL.Constants.STAFF_TYPE);\n  \n  items.push({loginName:\"songxin1973@gmail.com\", firstName:\"Xin\", lastName:\"Song\", email:\"songxin1973@gmail.com\",telno:\"03-1234-5678\"});\n  items.push({loginName:\"xin@cloud-i.co.uk\", firstName:\"User\", lastName:\"Admin\", email:\"xin@cloud-i.co.uk\",telno:\"03-1234-5678\"});\n\n  for (var idx\u003d0; idx\u003citems.length; idx++) {\n    GLOBAL.Data.saveDataItem(GLOBAL.Constants.STAFF_TYPE, items[idx]);\n  }\n\n}\n\nfunction test_insert_branch_staff_data() {\n  \n  var items \u003d new Array();\n  GLOBAL.Data.clearTableData(GLOBAL.Constants.BRANCH_STAFF_TYPE);\n  \n  items.push({staffID:0, branchID:0});\n  items.push({staffID:1, branchID:4});\n\n  for (var idx\u003d0; idx\u003citems.length; idx++) {\n    GLOBAL.Data.saveDataItem(GLOBAL.Constants.BRANCH_STAFF_TYPE, items[idx]);\n  }\n\n}\n\nfunction test_insert_item_supplier_data() {\n  \n  var items \u003d new Array();\n  \n  GLOBAL.Data.clearTableData(GLOBAL.Constants.ITEM_SUPPLIER_TYPE);\n  \n  items.push({itemID:0, supplierID:0, guidePrice:18.85, priority:0});\n  items.push({itemID:1, supplierID:0, guidePrice:20.1, priority:0});\n  \n  items.push({itemID:2, supplierID:1, guidePrice:17.96, priority:0});\n  items.push({itemID:3, supplierID:1, guidePrice:5.33, priority:0});\n\n  items.push({itemID:4, supplierID:2, guidePrice:76.48, priority:0});\n  items.push({itemID:5, supplierID:3, guidePrice:72.43, priority:0});\n  \n  for (var idx\u003d0; idx\u003citems.length; idx++) {\n    GLOBAL.Data.saveDataItem(GLOBAL.Constants.ITEM_SUPPLIER_TYPE, items[idx]);\n  }\n\n}\n\nfunction test_insert_supplier_data() {\n  \n  var items \u003d new Array();\n  \n  GLOBAL.Data.clearTableData(GLOBAL.Constants.SUPPLIER_TYPE);\n  \n  items.push({name:\"SupplierA\", address:\"Birmingham New Street\", telno:\"03-1234-5678\", faxno:\"03-1234-5678\", email:\"info@suplliera.com\", contact:\"Mr.Smith\"});\n  items.push({name:\"SupplierB\", address:\"Coventry New Union\", telno:\"024-234-5678\", faxno:\"024-234-5678\", email:\"info@supllierb.com\", contact:\"Mr.Smith\"});\n  items.push({name:\"SupplierC\", address:\"London Euston\", telno:\"05-7777-5454\", faxno:\"05-7777-5454\", email:\"info@supllierc.com\", contact:\"Mr.Smith\"});\n  items.push({name:\"SupplierD\", address:\"Beijing China\", telno:\"06-2222-5566\", faxno:\"06-2222-5566\", email:\"info@supllierd.com\", contact:\"Mr.Smith\"});\n\n  \n  for (var idx\u003d0; idx\u003citems.length; idx++) {\n    GLOBAL.Data.saveDataItem(GLOBAL.Constants.SUPPLIER_TYPE, items[idx]);\n  }\n\n}\n\n\n//\u003d\u003d\u003d\u003d\u003d\u003d\u003d FOR MongoDB \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nfunction testUpdateSingleData() {  //With ID\n  \n  var res;\n  var upd \u003d {};\n  \n  var dataid \u003d 19;\n  \n  upd.collection \u003d \"testItems\";\n  upd.data \u003d {\n    itemID : dataid,\n    name : \"item\" + dataid,\n    description:\"item No.\" + dataid,\n    activeFlg : 0\n  };\n\n  res \u003d GLOBAL.Data.insert(upd);  \n  \n  upd.id \u003d res.id;  //save the _id\n  upd.data.description \u003d \"item No.\" + dataid + \" changed\";\n\n  upd.data.details \u003d {\n    name : \"details\" + dataid,\n    description : \"desc \" + dataid,\n    price : 23.32\n  };\n  \n  res \u003d GLOBAL.Data.update(upd);\n  GLOBAL.Util.displayObject(res);\n\n}\n\nfunction testUpdateSingleData02() { //without id\n  \n  var itemID \u003d 19;\n  var upd \u003d {};\n  upd.type \u003d \"testItems\";\n  upd.name \u003d \"item \" + itemID + \" (changed 3)\";\n  upd.desc \u003d \"desc of item \" + itemID + \" (changed 3)\";\n  var details \u003d new Array();\n  details.push({\n    name : \"details \" + itemID  + \" (changed 3)\",\n    description : \"desc \" + itemID + \" (changed 3)\",\n    price : 23.33\n  });\n  details.push({\n    name : \"details2 \" + itemID  + \" (changed 3)\",\n    description : \"desc2 \" + itemID + \" (changed 3)\",\n    price : 24.33\n  });\n  \n  upd.details \u003d details;\n  var query \u003d {itemID:itemID};\n  \n  var res \u003d GLOBAL.Data.updateDataItem(upd, query);\n  GLOBAL.Util.displayObject(res);\n  \n  //Check the data just updated\n  var condition \u003d {};\n  condition.type \u003d \"testItems\";\n  condition.itemID \u003d itemID;\n  \n  var res2 \u003d GLOBAL.Data.getDataItems(condition);\n  GLOBAL.Util.displayObject(res2[0]);\n  \n}\nfunction testUpdateMultipleData01() {\n  \n  var res;\n  var upd \u003d {};\n  \n  var dataid \u003d \"19\";\n  \n  upd.collection \u003d \"Items\";\n  upd.query \u003d {\"itemID\":dataid}\n  upd.data \u003d {\n    description2 : \"item No.\"+dataid+\" changed again!!\"\n  }\n  \n  res \u003d GLOBAL.Data.update(upd);\n  GLOBAL.Util.displayObject(res);\n\n}\n\nfunction testDeleteData() {\n  \n  var collection \u003d \"Items\";\n  var data \u003d {\n    itemID:\"6\",\n    name:\"item6\",\n    description:\"item No.6\"\n  }\n  \n  var res2 \u003d GLOBAL.Data.updateData({collection:collection, data:data});  \n  \n}\n\nfunction testGetLastError() {\n  \n  GLOBAL.Data.getLastError();  \n  \n}\n\n\nfunction testFind() {\n  var res2 \u003d GLOBAL.Data.find(\"Items\", \"54a57af4e4b09807429a46dd\");  \n  GLOBAL.Util.displayObject(res2.data);  \n}\n\nfunction testRemove() {\n  var res2 \u003d GLOBAL.Data.remove(\"Items\", \"54a57af4e4b09807429a46dd\");  \n  GLOBAL.Util.displayObject(res2);  \n}\n\nfunction testFetchData() {\n  \n  // Invalid parameter\n  var query \u003d null;\n  var res1 \u003d GLOBAL.Data.fetchData(query);\n  GLOBAL.Util.debugLog(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dres1 is as follow:\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n  GLOBAL.Util.displayObject(res1);\n\n  // Whole collection\n  query \u003d {};\n  query.collection \u003d \"Item\";\n  var res2 \u003d GLOBAL.Data.fetchData(query);  \n  //GLOBAL.Util.debugLog(\"The whole res2 contains \" +res2.data.length + \" records!\");\n  GLOBAL.Util.debugLog(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dres2 is as follow:\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n  GLOBAL.Util.displayObject(res2.data[0]);\n  \n  // fetch as condition\n  query \u003d {};\n  query.collection \u003d \"Item\";\n  query.queryString \u003d {\"record_id\":{$in:[5]}};\n  var res3 \u003d GLOBAL.Data.fetchData(query);  \n  //GLOBAL.Util.debugLog(\"The whole res3 contains \" +res3.data.length + \" records!\");\n  GLOBAL.Util.debugLog(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dres3 is as follow:\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n  GLOBAL.Util.displayObject(res3.data);\n   \n}\n\nfunction testGetCount() {\n  \n  var type \u003d \"Supplier\";\n  var res2 \u003d GLOBAL.Data.getCount(type);  \n  GLOBAL.Util.debugLog(\"[testGetCount]:There are \" + res2 + \" records of [\"+type+\"]!\");\n   \n}\n\nfunction testInsertSingleData() {\n  \n  var collection \u003d \"Items\";\n  var data \u003d {\n    itemID:\"1\",\n    name:\"item 1\",\n    description:\"Item No.1\",\n    stock: \"20\",\n    price: \"23.34\"\n  }\n  \n  var res2 \u003d GLOBAL.Data.insert({collection:collection, data:data});  \n  \n}"},{"id":"680fe8a6-e271-4e22-8fb8-d4fc38fdaa7d","name":"global-security","type":"server_js","source":"/**\nName: security\nIn this module, the information of organization including staff and branch, as well as priority will be set.\n*/\n//Constants Relative\nGLOBAL.namespace(\"Security\");\n\n//\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SETTING STAFF \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n//Branch\n//Staff\n\n//\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SETTING MENU \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\n//\u003d\u003d\u003d\u003d DEPRECATED \u003d\u003d\u003d\u003d\nGLOBAL.Security.initViewData \u003d function() {\n  \n  //clearTableData(\"View\");\n  var views \u003d new Array(  //flag: S-single; B-begin(level\u003d0, but no \u003c/li\u003e and one more \u003cui\u003e); I-subitem; E-end(level\u003d1, but one more \u003c/ui\u003e and \u003c/li\u003e) \n    {name:\"Home\", category:0, level:0, flag:\"S\", url:\"index\", para:\"home\", comment:\"\"},\n    \n    {name:\"Order\", category:1, level:0, flag:\"B\", url:\"/?view\u003dorder\", para:\"order\", comment:\"\"},\n    {name:\"Order\u0027s Log\", category:1, level:1, flag:\"E\", url:\"/?view\u003dorderlog\", para:\"orderlog\", comment:\"\"},\n    \n    {name:\"Purchasing\", category:2, level:0, flag:\"B\", url:\"/?view\u003dpurchase\", para:\"purchase\", comment:\"\"},\n    {name:\"Purchasing Log\", category:2, level:1, flag:\"E\", url:\"/?view\u003dpurchaselog\", para:\"purchaselog\", comment:\"\"},\n    \n    {name:\"Stock\", category:3, level:0, flag:\"B\", url:\"/?view\u003dstockList\", para:\"stocklist\", comment:\"\"},\n    {name:\"Stock IN\", category:3, level:1, flag:\"I\", url:\"/?view\u003dstock\u0026direction\u003d0\", para:\"stockin\", comment:\"\"},\n    {name:\"Stock OUT\", category:3, level:1, flag:\"E\", url:\"/?view\u003dstock\u0026direction\u003d1\", para:\"stockout\", comment:\"\"},\n\n    {name:\"Distributing\", category:4, level:0, flag:\"S\", url:\"/?view\u003ddistribute\", para:\"distribute\", comment:\"\"},\n\n    {name:\"Item Management\", category:5,level:0, flag:\"S\", url:\"/?view\u003ditemMgt\", para:\"itemmgr\", comment:\"\"},\n    \n    {name:\"Supplier Management\", category:6,level:0, flag:\"S\", url:\"/?view\u003dsupplierMgt\", para:\"suppmgt\", comment:\"\"},\n\n    {name:\"Admin\", category:7,level:0, flag:\"S\", url:\"/?view\u003dadmin\", para:\"admin\", comment:\"\"}\n  );\n\n  return views;\n}\n\nGLOBAL.Security.createMenuItems \u003d function() {\n  GLOBAL.Util.infoLog(\"Entering GLOBAL.Security.createMenuItems...\");\n  \n  var menuItems \u003d new Array();\n  var menuItem \u003d {};\n  var subMenuItem \u003d {};\n  \n  var rs \u003d GLOBAL.Util.getLocalString();   // resource string\n  //Home\n  menuItem \u003d {name:rs.home.name, category:0, para:\"home\", title:rs.home.formTitle, icon:\"fa-home\", comment:\"\"};\n  menuItems.push(menuItem);\n  \n  //Order\n  menuItem \u003d {name:rs.order.name, category:1, para:\"order\", title:rs.order.formTitle, icon:\"fa-file-text-o\", comment:\"\"};\n  subMenuItem \u003d {name:rs.orderlog.name, category:1, para:\"orderlog\", title:rs.orderlog.formTitle, comment:\"\"};\n  menuItem.subMenu \u003d new Array(subMenuItem);\n  menuItems.push(menuItem);\n  \n  //Purchase\n  menuItem \u003d {name:rs.purchase.name, category:2, para:\"purchase\", title:rs.purchase.formTitle, icon:\"fa-shopping-cart\", comment:\"\"};\n  subMenuItem \u003d {name:rs.purchaselog.name, category:2, para:\"purchaselog\", title:rs.purchaselog.formTitle, comment:\"\"};\n  menuItem.subMenu \u003d new Array(subMenuItem);\n  menuItems.push(menuItem);\n  \n  //Stock\n  menuItem \u003d {name:rs.stock.name, category:3, para:\"stocklist\", title:rs.stock.formTitle, icon:\"fa-inbox\", comment:\"\"};\n  subMenuItem \u003d {name:rs.stockin.name, category:3, para:\"stockin\", title:rs.stockin.formTitle, comment:\"\"};\n  menuItem.subMenu \u003d new Array(subMenuItem);\n  subMenuItem \u003d {name:rs.stockout.name, category:3, para:\"stockout\", title:rs.stockout.formTitle, comment:\"\"};\n  menuItem.subMenu.push(subMenuItem);\n  menuItems.push(menuItem);\n  \n  //Distributing\n  menuItem \u003d {name:rs.distribute.name, category:4, para:\"distribute\", title:rs.distribute.formTitle, icon:\"fa-truck\", comment:\"\"};\n  menuItems.push(menuItem);\n  \n  //Item Management\n  menuItem \u003d {name:rs.itemmgr.name, category:5, para:\"itemmgr\", title:rs.itemmgr.formTitle, icon:\"fa-files-o\", comment:\"\"};\n  menuItems.push(menuItem);\n  \n  //Supplier Management\n  menuItem \u003d {name:rs.suppmgr.name, category:6, para:\"suppmgt\", title:rs.suppmgr.formTitle, icon:\"fa-users\", comment:\"\"};\n  menuItems.push(menuItem);\n  \n  //Admin\n  menuItem \u003d {name:rs.admin.formTitle, category:7, para:\"admin\", title:rs.admin.formTitle, icon:\"fa-cog\", comment:\"\"};\n  menuItems.push(menuItem);\n  \n  return menuItems;\n}\n\n// temporarily for old demo version.\n//\u003d\u003d\u003d\u003d DEPRECATED \u003d\u003d\u003d\u003d\nGLOBAL.Security.createMenu \u003d function() {  \n  GLOBAL.Util.infoLog(\"Entering createMenu...\");\n  \n  var menuitems \u003d new Array();\n  var views \u003d GLOBAL.Security.initViewData();\n  \n  for (var i \u003d 0; i \u003c views.length; i++) {\n    menuitems[menuitems.length] \u003d {name:views[i].name, url:views[i].url, flag:views[i].flag, category:views[i].category, level:views[i].level, para:views[i].para}\n  }\n  \n  GLOBAL.Util.debugLog(\"FINALLY the number of menu is \" + menuitems.length);\n  \n  return menuitems;\n}\n\n/**\nGetting the branch information of current user.  \n\n@method getCurrentBranchByLogin\n@param login {string} usually the email(account) of the login user\n@example\n   1. getCurrentBranchByLogin(login)\n@return {branchInfo} A object that contains information of the branch that the login user belongs to,\n                     particularly the name, the telphone number and branch id of the branch\n */\nGLOBAL.Security.getCurrentBranchByLogin \u003d function(login) {\n  \n  GLOBAL.Util.infoLog(\"Entering getCurrentBranchByLogin...\" + login);\n  \n  var branchInfo \u003d {};\n  // get Staff ID\n  var staffID \u003d GLOBAL.Security.getUserInfoByLogin(login).staffID;\n  GLOBAL.Util.debugLog(\"Current staffID is \" + staffID);\n  \n  // get Branch ID\n  var condition \u003d {};\n  condition.type \u003d GLOBAL.Constants.BRANCH_STAFF_TYPE;\n  condition.staffID \u003d staffID;\n  \n  var results \u003d GLOBAL.Data.getDataItems(condition);\n\n  if (results.length \u003d\u003d 1) { //there should be only one appropriate data\n    var branchID \u003d results[0].branchID;\n    GLOBAL.Util.debugLog(\"Current branchID is \" + branchID);\n    \n    // Get Branch info\n    condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.BRANCH_TYPE;\n    condition.record_id \u003d branchID;\n    \n    var results2 \u003d GLOBAL.Data.getDataItems(condition);;\n    if (results2.length \u003d\u003d 1) { //there should be only one appropriate data\n      var branch \u003d results2[0];\n      GLOBAL.Util.debugLog(\"Current branch name is \" + branch.name);\n      branchInfo \u003d {\n        name : branch.name\n        ,telno : branch.telno\n        ,branchID: branch.record_id\n      };\n    }\n  } else {\n    // Throw some exceptions\n  }\n  \n  return branchInfo;\n}\n\n/**\nGetting the user information of current user.  \n\n@method getUserInfoByLogin\n@param login {string} usually the email(account) of the login user\n@example\n   1. getUserInfoByLogin(login)\n@return {userInfo} A object that contains the staff\u0027s name and staff id\n */\nGLOBAL.Security.getUserInfoByLogin \u003d function(login) {\n  \n  GLOBAL.Util.infoLog(\"Entering getUserInfoByLogin... login is \" + login);\n  var userInfo;\n  \n  var condition \u003d {};\n  condition.type \u003d GLOBAL.Constants.STAFF_TYPE;\n  condition.loginName \u003d login;\n  \n  var results \u003d GLOBAL.Data.getDataItems(condition);\n  \n  // there should be only one appropriate record\n  if (results.length \u003d\u003d 1) {\n    var staff \u003d results[0];\n    userInfo \u003d {\n      name : staff.firstName + \".\" + staff.lastName\n      ,staffID : staff.record_id\n    };\n    GLOBAL.Util.debugLog(\"The user name is \" + userInfo.name + \"  and id is \" + userInfo.staffID);\n  }\n  return userInfo;\n  \n}\n\n/**\nGetting the staff id of the current (active) user.  \n\n@method getCurrentStaffID\n@example\n   1. getCurrentStaffID()\n@return {ScriptDbResult} The object that just has been saved\n */\nGLOBAL.Security.getCurrentStaffID \u003d function() {\n  //TODO:\n  return 1;\n  //return GLOBAL.Security.getUserInfoByLogin(getCurrentUser()).staffID;\n}"},{"id":"d37be41f-6eda-448a-af12-c57bb3606813","name":"model","type":"server_js","source":"/**\nModel module containing all the definition \nand methods that manipulating business data\n\n@class\n@constructor\n\n@author songxin \u003csongxin1973@gmail.com\u003e\n@modified songxin\n@date 2014-02-28\n**/\n\nvar Model \u003d {\n//\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ORDER \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n/**\nCreating an new order .  \n\n@method createOrder\n@param branchID {String} indicating the branch that placed order\n@param deliveryDate {Date} indicating the hope delivery date\n@param placeStaffID {String} indicating the staff who placed the order\n@example\n   1. createOrder(branchID, deliveryDate, placeStaffID)\n@return  {Object} order object\n */  \n  createOrder : function (branchID, deliveryDate, placeStaffID) {\n    GLOBAL.Util.infoLog(\"createOrder:[\" + branchID + \"][\" + deliveryDate + \"][\" + placeStaffID + \"]\");\n    \n    var details \u003d new Array();\n   //Group information\n    var order \u003d {\n      branchID: branchID,\n      placeDate: GLOBAL.Util.getCurrentTime(),\n      preferredDate: GLOBAL.Util.getCurrentTime(),\n      deliveryDate: deliveryDate,\n      placeStaffID: placeStaffID,\n      purchaseID: -1,\n      details: details,\n      statusID: GLOBAL.Constants.STATUS.NEW.value\n    };\n    \n    return GLOBAL.Data.saveDataItem(GLOBAL.Constants.ORDER_TYPE, order);  \n    \n  },\n\n/**\nUpdating an existing order .  \n\n@method updateOrder\n@param branchID {String} indicating the branch that placed order\n@param deliveryDate {Date} indicating the hope delivery date\n@param placeStaffID {String} indicating the staff who placed the order\n@example\n   1. createOrder(branchID, deliveryDate, placeStaffID)\n@return  {Object} order object\n */  \n  updateOrder : function(order) {\n    GLOBAL.Util.infoLog(\"Entering Model#updateOrder...\");\n    GLOBAL.Util.displayObject(order);\n    \n    order.type \u003d GLOBAL.Constants.ORDER_TYPE;   // Use for MongoDB?\n    return GLOBAL.Data.updateDataItem(order);\n  },   \n  \n  getNewOrders : function(sDate, eDate) {\n    GLOBAL.Util.infoLog(\"Entering Model#getNewOrders...\");\n\n    var condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.ORDER_TYPE;\n    condition.purchaseID \u003d -1;\n    condition[\"$and\"] \u003d [{\"placeDate\" : {\"$gte\":sDate}},{\"placeDate\" : {\"$lte\":eDate}}];   // Here is a \"AND\" condition\n\n    var results \u003d GLOBAL.Data.getDataItems(condition);\n    return results;\n  },\n\n  getLatestOrder : function(branchID) {\n    \n    GLOBAL.Util.infoLog(\"Entering Model#getLatestOrder...branch ID is [\"+branchID+\"]\");\n    \n    var condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.ORDER_TYPE;\n    condition.branchID \u003d branchID;\n    \n    condition.sort \u003d {\"record_id\":-1};\n    condition.limit \u003d 1;  // fetch the newest data, so just first one\n    \n    var results \u003d GLOBAL.Data.getDataItems(condition);\n    if (results.length \u003c\u003d 0) {\n      var msg \u003d \"There should be at least one order but nothing!\";\n      GLOBAL.Util.errorLog(msg);\n      throw new BusinessException(msg);\n    }\n    GLOBAL.Util.displayObject(results[0]);\n    return results[0];  // just return the nearest order.\n  },\n\n/**\nRetrieve the order which match the condition\n\n@method getOrderByKey\n@param condition {Object} including the condition used in query \n@return  {Object} order object\n*/\n  getOrdersByKey : function(condition) {\n    \n    //setting the type if there isn\u0027t one\n    if (!condition.hasOwnProperty(\"type\")) {\n      condition.type \u003d GLOBAL.Constants.ORDER_TYPE;\n    }\n    return GLOBAL.Data.getDataItems(condition);\n  },\n\n  \n//\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PURCHASE \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n/**\nSaving Purchase information (not including detail).  \n\n@method createPurchase\n@param aggDateStart {Date} aggregating from ...\n@param aggDateEnd {Date} aggregating to...\n@param purchaseDate {Date} when this purchase info has been created\n@param status {String} wether it is closed\n@param comment {String} other information that needs to be kept\n@example\n   1. createPurchase(aggDateStart, aggDateEnd, purchaseDate, status, comment)\n@return  {NUMBER} purchase id\n */\n  createPurchase : function (aggDateStart, aggDateEnd, purchaseDate, status, comment) {\n    GLOBAL.Util.infoLog(\"Entering Model#createPurchase...\" + aggDateStart + \":\" + aggDateEnd + \":\" + purchaseDate + \":\" + status);\n    \n    var details \u003d new Array();\n    \n    //Group information\n    var pob \u003d {\n      aggDateStart: aggDateStart,\n      aggDateEnd: aggDateEnd,\n      purchaseDate: purchaseDate,\n      statusID: status,\n      purchasedTime: 0,\n      details : details,\n      comment: comment\n    };\n    \n    return GLOBAL.Data.saveDataItem(GLOBAL.Constants.PURCHASE_TYPE, pob);  \n    \n  },\n\n/**\nGet purchase detail information by purchaseID.\n\n@method getPurchase\n@param purchaseID {string} the purchase id \n@example\n   1. getPurchase(purchase id)\n@return {Object} purchase data (master data) should be only one\n */\n  getPurchase : function (purchaseID) {\n    GLOBAL.Util.infoLog(\"Entering Model#getPurchase...\" + purchaseID);\n    \n    var condition \u003d {};\n    condition.record_id \u003d purchaseID;\n    \n    var purchases \u003d this.getPurchases(condition);\n    \n    if (purchases.length !\u003d 1) {\n      var msg \u003d \"There is no or more than one purchase data whose id  is \" + purchaseID;\n      GLOBAL.Util.errorLog(msg);\n      throw new BusinessException(msg);\n    }\n    \n    return purchases[0];\n\n  },\n  \n  \n  getPurchases : function(condition) {\n    GLOBAL.Util.infoLog(\"Entering Model#getPurchases...\" + condition);\n    GLOBAL.Util.showPara({\n      funcName:\"Model#getPurchases\",\n      condition:condition\n    });\n    \n    if (!condition) condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.PURCHASE_TYPE;\n    \n    return GLOBAL.Data.getDataItems(condition);\n  },\n  \n  updatePurchase : function(purchase) {\n    GLOBAL.Util.infoLog(\"Entering Model#updatePurchase...\" + purchase);\n    purchase.type \u003d GLOBAL.Constants.PURCHASE_TYPE;  //Used for MongoDB?\n    return GLOBAL.Data.updateDataItem(purchase);\n  },  \n  \n/**\nGet purchase detail information by purchaseID.\n\n@method getPurchaseDetails\n@param purchaseID {string} the purchase id (master data) that this detail data belongs to\n@example\n   1. getPurchaseDetails(purchase id)\n@return {ScriptDbResult} all purchase details which has this purchase id\n */\n/*  getPurchaseDetails :function (purchaseID){\n    GLOBAL.Util.infoLog(\"Entering Model#getPurchaseDetails()...\" + purchaseID);\n    \n    var condition \u003d {};\n    condition.type \u003d Constants.PD_TYPE;\n    condition.purchaseID \u003d purchaseID;\n    \n    var results \u003d GLOBAL.Data.getDataItems(condition);\n    \n    GLOBAL.Util.debugLog(String.format(\"The number of PurchaseDetail order is {0}\", results.length));\n    \n    return results;\n    \n  }, */\n  \n//\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d STOCK HANDLING \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n//--------------------------------------\n// save the stock (for submit button)\n// [INPUT] direction: 0:STOCK IN      1:STOCK OUT\n//         items: the array of items {itemID, itemQty} that will stored into stock\n//--------------------------------------\n  saveStock : function(direction, stockInPrice, qty, item) {\n    GLOBAL.Util.infoLog(\"Entering Model#saveStock()...\");\n    // Save the stock record\n    \n    var currentTime \u003d GLOBAL.Util.getCurrentTime();\n    var stockObj \u003d {\n      item: item,             //Not a scriptdb struct, just an object holding necessary item info (created in stock.gs)\n      stockInPrice:stockInPrice,  //Only have value when direction is IN. Otherwise, it will be null\n      barcode:\"\",\n      direction:direction,\n      expireDate:\"\",\n      stockDate:currentTime,\n      stockPlaceID:\"\",\n      comment:\"\"\n    };  \n    \n    return GLOBAL.Data.saveDataItem(\"Stock\", stockObj).record_id;  \n  },\n\n//\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d DISTRIBUTE HANDLING \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n//--------------------------------------\n// Save the distribute detail\n// Distribute detail contains two dimensions: items and branches.\n// One distribute detail record consists of one item info and deliver quantity for each branch (stored in an Array object) \n// [INPUT] purchaseID: the purchase ID that this distribute deal with\n//         item: the array of items {itemID, itemQty} that will stored into stock\n//         branchQty: the array of items {brancheID, itemQty} that will stored into stock\n//--------------------------------------\n  saveDistributeDetail : function(purchaseID, item, branchQty) {\n    GLOBAL.Util.infoLog(\"Entering Model#saveDistributeDetail()...\");\n\n    var currentTime \u003d GLOBAL.Util.getCurrentTime();\n    var ddObj \u003d {\n      purchaseID:purchaseID,\n      item: item,             //This item\u0027s information\n      branchQty:branchQty  //Contains deliver quantity and status for each branch.\n    };  \n    \n    return GLOBAL.Data.saveDataItem(GLOBAL.Constants.DISTRIBUTE_TYPE, ddObj).record_id;  \n  },\n  \n//---------------------------------------------------------\n// Save the distribute master information including branches status and comment\n// [INPUT] purchaseID:the purchase ID that this distribute deal with\n//         branchStatus: each branch\u0027s delivery status\n//         branchComments: comment for each branch\n//         status: the status of the whole distribute\n//---------------------------------------------------------\n  saveDistributeMaster : function(purchaseID, branchStatus, branchComments, branchTotalPrice, status) {\n    GLOBAL.Util.infoLog(\"Entering Model#savaDistributeMaster()...\");\n\n    var currentTime \u003d GLOBAL.Util.getCurrentTime();\n    var dmObj \u003d {\n      purchaseID:purchaseID,\n      branchStatus: branchStatus,     \n      branchComments:branchComments,  \n      branchTotalPrice:branchTotalPrice,\n      status:status\n    };  \n    \n    return GLOBAL.Data.saveDataItem(GLOBAL.Constants.DISTRMASTER_TYPE, dmObj).record_id;  \n  },\n  \n  getDistributeMaster : function(purchaseID){\n    GLOBAL.Util.infoLog(\"Entering Model#getDistributeMaster()...\");\n\n    var condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.DISTRMASTER_TYPE;\n    condition.purchaseID \u003d purchaseID;\n    var dists \u003d GLOBAL.Data.getDataItems(condition);\n    \n    /*\n    if (dists.length !\u003d 1) {\n      var msg \u003d String.format(\"There are {0} distribute master records which purchaseID is {1}\", dists.length, purchaseID);\n      GLOBAL.Util.errorLog(msg);\n      throw new BusinessException(msg);\n    }\n    \n    return dists[0];    */\n    return dists;   // return the array. although there should be only one data or none, it is the outside process\u0027s responsibility to check\n    \n  },\n  \n  getDistributeDetails : function(purchaseID){\n    GLOBAL.Util.infoLog(\"Entering Model#getDistributeDetails()...\" + purchaseID);\n\n    // create a db instance\n    var condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.DISTRIBUTE_TYPE;\n    condition.purchaseID \u003d purchaseID;\n    var dists \u003d GLOBAL.Data.getDataItems(condition);\n    \n    if (dists \u003d\u003d null || dists.length \u003d\u003d 0) {\n      var msg \u003d String.format(\"There is no distribute detail for purchaseID {0}\", purchaseID);\n      GLOBAL.Util.errorLog(msg);\n      throw new BusinessException(msg);\n    }\n    \n    GLOBAL.Util.debugLog(\"Distribute (purchase[\"+purchaseID+\"]) has \"+dists.length+\" details\");\n    \n    return dists;\n    \n  },\n  \n  getDistributeDetail : function(purchaseID, itemID) {\n    GLOBAL.Util.infoLog(\"Entering Model#getDistributeDetail()...\" + purchaseID + \"/\" + itemID);\n\n    // create a db instance\n    \n    var condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.DISTRIBUTE_TYPE;\n    condition.purchaseID \u003d purchaseID;\n    condition.item \u003d {itemID:itemID};\n    \n    var dists \u003d GLOBAL.Data.getDataItems(condition);\n    \n    //there are either 1 detail data for each item or none\n    if (dists.length \u003d\u003d 0) {\n      return null;\n    }else if (dists.length \u003d\u003d 1) {\n      return dists[0];\n    }else {\n      var msg \u003d String.format(\"There are {0} distribute detail records purchaseID {1} and itemID {2}\", dists.length, purchaseID, itemID);\n      GLOBAL.Util.errorLog(msg);\n      throw new BusinessException(msg);\n    }\n    \n  },\n  \n  updateDistributeDetail : function(distributeDetail) {\n    GLOBAL.Util.infoLog(\"Entering Model#updateDistributeDetail...\" + distributeDetail);\n    return GLOBAL.Data.updateDataItem(distributeDetail);\n  },\n  \n  updateDistrMaster : function(distrmaster) {\n    GLOBAL.Util.infoLog(\"Entering Model#updateDistrMaster...\");\n    \n    distrmaster.type \u003d GLOBAL.Constants.DISTRMASTER_TYPE;   // Use for MongoDB?\n    return GLOBAL.Data.updateDataItem(distrmaster);\n  },   \n//\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ITEM HANDLING \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n/**\nqeury the item table. \n\n@method queryItem\n@param condition {Object} contains the query condition, as key\u003dvalue\n@example\n1. queryItem({key1:value1, key2:value2})\n@return {ResultSet} contains the query result\n*/\n  queryItem :function (condition){\n    GLOBAL.Util.infoLog(\"Entering Model#queryItem()...\");\n    GLOBAL.Util.showPara({\n      funcName:\"queryItem\",\n      \"condition\":condition\n    });\n\n    condition.type \u003d GLOBAL.Constants.ITEM_TYPE;\n    return GLOBAL.Data.getDataItems(condition);\n    \n  },\n\n/**\nqeury the item table by itemID. \n\n@method getItemByID\n@param itemID {number} record_id of item table\n@example\n1. getItemByID(1)\n@return {Object} contains one particular item information\n*/\n  getItemByID : function (itemID) {\n    GLOBAL.Util.infoLog(\"Entering Model#getItemByID()...itemID(record_id):\" + itemID);\n    \n    var condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.ITEM_TYPE;\n    condition.record_id \u003d itemID;\n    \n    var items \u003d GLOBAL.Data.getDataItems(condition);\n    \n    if (items.length !\u003d 1) {\n      var msg \u003d String.format(\"There are {0} items which itemID is \", items.length, itemID);\n      GLOBAL.Util.errorLog(msg);\n      throw new BusinessException(msg);\n    }\n    \n    return items[0];\n    \n  },\n/**\nRetrieve the items currently stored in stock.\nQueried data is used at Order/Stock management.\nClassified by item type code (NOTE: note by itemType, which is the record_id of table{ItemType}).\n\n@method prepareItems\n@param \n@example\n1. prepareItems()\n@return Object contains pairs of type and array of items which belong to this type\n*/\n  prepareItems : function () {\n    GLOBAL.Util.infoLog(\"Entering Model#prepareItems()...\");\n    var items \u003d new Array(); //will contain the type and all the items of that type and be returned\n    \n    var results \u003d this.getItems();\n    \n    var previousItemType \u003d -1;\n    var currentItemType \u003d -1;\n    var item \u003d {};   // should be {itemtype:Array of items}\n    var itemTypes \u003d new Array();  //used to check, contains itemTypeCode\n    var itemContents \u003d new Array();\n    \n    var current \u003d {};\n    var doneFlag \u003d false;\n\n    for (var idx\u003d0,max\u003dresults.length;idx\u003cmax;idx++) {\n      var result \u003d results[idx];\n      \n      //Mapping the data\n      current \u003d {};\n      current.itemType \u003d result.itemTypeCode;\n      current.record_id \u003d result.record_id;\n      current.itemID \u003d result.itemID;\n      //current.supplier \u003d this.getSupplierInfoByItemID(result.record_id).name;\n      current.supplier \u003d result.supplier;\n      current.name \u003d result.name;\n      current.nameDisp \u003d GLOBAL.Util.trimString(current.name, 16);\n      current.description \u003d result.name + \" \" + result.package;\n      current.descDisp \u003d GLOBAL.Util.trimString(current.description, 16);\n      current.stockQty \u003d result.stockQty;\n      current.safetyQty \u003d result.safetyQty;\n      current.stockPrice \u003d result.stockPrice;\n      current.package \u003d result.package;\n\n      //aggregate items by itemType\n      currentItemType \u003d current.itemType;\n      //GLOBAL.Util.debugLog(String.format(\"Handling previousItemType[{0}] while currentItemType[{1}].\",previousItemType, currentItemType));\n      \n      if (previousItemType !\u003d currentItemType) {\n        //save the current itemtype\n        itemTypes.push(currentItemType);\n        \n        if (previousItemType !\u003d -1) {\n          items.push({\"itemType\": previousItemType, \"content\": itemContents});\n          //GLOBAL.Util.debugLog(\"items pushed! itemType:\" + previousItemType);\n        }\n        previousItemType \u003d currentItemType;\n        itemContents \u003d new Array();\n        itemContents.push(current);\n      } else {\n        itemContents.push(current);\n      }\n      //GLOBAL.Util.debugLog(\"push a current into itemContent! itemType:\" + current.itemType);\n    }\n    \n    //save the last handled item content\n    if (itemTypes.length \u003e items.length) {\n      items.push({\"itemType\": currentItemType, \"content\": itemContents});\n    }\n\n    // Check the items\n    /*for (var i\u003d0;i\u003citems.length;i++) {\n      var content \u003d items[i].content;\n      for (var j\u003d0;j\u003ccontent.length;j++) {\n        GLOBAL.Util.debugLog(items[i].itemType + \":\" + content[j].name);\n      }\n    }*/\n    \n    return items;\n    \n  },\n  \n  getItems : function() {\n    \n    GLOBAL.Util.infoLog(\"Entering Model#getItems()...\");\n\n    var condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.ITEM_TYPE;\n    var results \u003d GLOBAL.Data.getDataItems(condition);\n    \n    results.sort(createComparison(\"itemType\"), true);  //sort by itemType, ascending\n    \n    //GLOBAL.Util.debugLog(results.length + \" items have been retrieved!\");\n    \n    return results;\n    \n  },\n  \n  createItem : function(item) {\n    GLOBAL.Util.infoLog(\"Entering Model#createItem()...\");\n    \n    return GLOBAL.Data.saveDataItem(GLOBAL.Constants.ITEM_TYPE, item);\n  },\n\n  updateItem : function(item) {\n    GLOBAL.Util.infoLog(\"Entering Model#updateItem...\" + item);\n    item.type \u003d GLOBAL.Constants.ITEM_TYPE;\n    return GLOBAL.Data.updateDataItem(item);\n  },  \n  \n/**--------------------------------------------------\n// retrieve types/categories of all the items\n// THESE types will constitute the tabs in order form \n// NOTE: return value is not an array, but an object including id(record_id) and itemTypeName\n*/\n  getItemTypes : function () {\n    GLOBAL.Util.infoLog(\"Entering Model#getItemTypes()...\");\n\n    var itemTypes \u003d {};\n    \n    var condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.ITEMTYPE_TYPE;\n    var results \u003d GLOBAL.Data.getDataItems(condition);\n    \n    for (var idx\u003d0;idx\u003cresults.length;idx++) {\n      var result \u003d results[idx];\n      itemTypes[result.itemTypeCode] \u003d result.itemTypeName;\n    }\n    return itemTypes;\n  },  \n\n//\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d BRANCH HANDLING \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  getBranches : function () {\n    \n    GLOBAL.Util.infoLog(\"Entering Model#getBranches()...\");\n    var branches \u003d new Array();\n    \n    var condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.BRANCH_TYPE;\n    var results \u003d GLOBAL.Data.getDataItems(condition);\n    \n    for(var idx in results) {\n      var branch \u003d results[idx];\n      branches.push({\n        id:branch.record_id,\n        branchID:branch.record_id,\n        name:branch.name,\n        telno:branch.telno\n      });\n    }\n    \n    GLOBAL.Util.debugLog(branches.length + \" branches have been retrieved!\");\n    return branches;\n  },  \n  \n  getBranchByID : function (branchID) {\n    \n    GLOBAL.Util.infoLog(\"Entering Model#getBranchByID()...\" + branchID);\n    var branch \u003d {};\n    \n    var condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.BRANCH_TYPE;\n    condition.record_id \u003d branchID;\n    var results \u003d GLOBAL.Data.getDataItems(condition);\n    \n    for(var idx in results) {\n      var result \u003d results[idx];\n      branch.branchID \u003d result.record_id;\n      branch.name \u003d result.name;\n      branch.telno \u003d result.telno;\n    }\n    \n    if (GLOBAL.Util.isEmpty(branch)) {\n      var msg \u003d \"There is no branch which id is \" + branchID;\n      GLOBAL.Util.errorLog(msg);\n      throw new LogicException(msg);\n    }\n\n    return branch;\n  },  \n\n//\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SUPPLIER HANDLING \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n/**\nqeury the supplier table. \n\n@method querySupplier\n@param condition {Object} contains the query condition, as key\u003dvalue\n@example\n1. querySupplier({key1:value1, key2:value2})\n@return {Object} contains the query result\n*/\n  querySupplier :function (condition){\n    GLOBAL.Util.infoLog(\"Entering Model#querySupplier()...\");\n    GLOBAL.Util.showPara({\n      funcName:\"Model#querySupplier\",\n      \"condition\":condition\n    });\n\n    condition.type \u003d GLOBAL.Constants.SUPPLIER_TYPE;\n    return GLOBAL.Data.getDataItems(condition);\n    \n  },\n\n  //------------------------------------------\n// get the supplier info for specific item\n// NOTE: the parameter \"itemID\" is the \"record_id\" of item table, not the \"itemID\" from upload file\n//------------------------------------------\n  getSupplierInfoByItemID : function (itemID) {\n  \n    GLOBAL.Util.infoLog(\"Entering Model#getSupplierInfoByItemID()...itemID:\" + itemID);\n    \n    var name \u003d \"\";\n    var guidePrice \u003d 0.0;\n    var supplierID \u003d -1;\n    \n    var condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.ITEM_SUPPLIER_TYPE;\n    condition.itemID \u003d itemID;\n    condition.priority \u003d 0;             // Priority is a number!\n    var results \u003d GLOBAL.Data.getDataItems(condition);\n    \n    if (results.length !\u003d 1){\n      var msg \u003d \"There is no (or more than one) item supplier information (priority \u003d 0) for item \" + itemID;\n      GLOBAL.Util.errorLog(msg);\n      throw new BusinessException(msg);\n    }\n\n    var itemSupplier \u003d results[0];\n    guidePrice \u003d itemSupplier.guidePrice;\n    supplierID \u003d itemSupplier.supplierID;   //\u003c\u003dThis was set to record_id of supplier table\n    \n    // Get the name of Supplier\n    condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.SUPPLIER_TYPE;\n    condition.record_id \u003d supplierID;       //pay attention this one. this is NOT supplier id that customer provided\n    results \u003d GLOBAL.Data.getDataItems(condition);\n    \n    if (results.length !\u003d 1){\n      var msg \u003d \"There is no (or more than one) supplier information which has id \" + supplierID;\n      GLOBAL.Util.errorLog(msg);\n      throw new BusinessException(msg);\n    }\n    name \u003d results[0].name;\n    \n    return {id:supplierID,\n            name:name, \n            guidePrice:guidePrice};\n  },\n  \n  //--------------------------------------------------\n  // prepare the supplier id\n  // get supplier name from upload item file\n  // if existed, get the supplierID (from Supplier Table)\n  // if not existed, create a new record and return the supplierID\n  //--------------------------------------------------\n  prepareSupplier:function(supplier) {\n    GLOBAL.Util.infoLog(\"Entering Model.prepareSupplier... \" + supplier);\n    \n    if (!supplier || supplier \u003d\u003d \"\") {\n      return \"\";\n    }\n    \n    var supplierID \u003d \"\";\n    \n    var condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.SUPPLIER_TYPE;\n    condition.name \u003d supplier;\n    \n    var results \u003d GLOBAL.Data.getDataItems(condition);\n    var count \u003d results.length;\n    \n    if (count \u003d\u003d 0) {\n      //create a new Supplier\n      var content \u003d {};\n      content.type \u003d GLOBAL.Constants.SUPPLIER_TYPE;\n      content.name \u003d supplier;\n      var res \u003d GLOBAL.Data.saveDataItem(GLOBAL.Constants.SUPPLIER_TYPE, content);\n      supplierID \u003d res.record_id;\n    }else if (count \u003d\u003d 1) {\n      //get current supplier which name is param\n      supplierID \u003d results[0].record_id;\n    }else{\n      //there are two or more supplier id which has the same name, throw the exception\n      var msg \u003d \"there are two or more suppliers which name is \" + supplier;\n      GLOBAL.Util.errorLog(msg);\n      throw new BusinessException(msg);\n    }\n    \n    return supplierID;\n  },\n  \n  createSupplier : function(supplier) {\n    GLOBAL.Util.infoLog(\"Entering Model#createSupplier()...\");\n    \n    return GLOBAL.Data.saveDataItem(GLOBAL.Constants.SUPPLIER_TYPE, supplier);\n  },\n  //--------------------------------------------------\n  // prepare the item type including code and name\n  // get itemTypeCode(code) and itemType(name) from upload item file\n  // if existed, do nothing\n  // if not existed, create a new record for this code and name\n  // HOWEVER, in system, the record_id should be used as \u0027itemType\u0027.\n  //--------------------------------------------------\n  prepareItemType:function(code, name) {\n    GLOBAL.Util.infoLog(\"Entering Model.prepareItemType... \" + code +\":\"+ name);\n    \n    if (!code || code \u003d\u003d \"\") {\n      return \"\";\n    }\n    if (!name || name \u003d\u003d \"\") {\n      return \"\";\n    }\n    \n    var itemType;\n    \n    var condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.ITEMTYPE_TYPE;\n    condition.itemTypeCode \u003d code;\n    condition.itemTypeName \u003d name;\n    \n    var results \u003d GLOBAL.Data.getDataItems(condition);\n    var count \u003d results.length;\n    \n    if (count \u003d\u003d 0) {\n      //create a new Supplier\n      var content \u003d {};\n      content.itemTypeCode \u003d code;\n      content.itemTypeName \u003d name;\n      var res \u003d GLOBAL.Data.saveDataItem(GLOBAL.Constants.ITEMTYPE_TYPE, content);\n      itemType \u003d res.record_id;\n    }else if (count \u003d\u003d 1) {\n      //get current supplier which name is param\n      itemType \u003d results[0].record_id;\n    }else{\n      //there are two or more supplier id which has the same name, throw the exception\n      var msg \u003d \"there are two or more item type records for [\" + code +\":\"+ name + \" ]\";\n      GLOBAL.Util.errorLog(msg);\n      throw new BusinessException(msg);\n    }\n    \n    return itemType;   // the record_id of this item type (pair of code and type name)\n  },\n  \n  createItemSupplier:function(itemID, supplierID, guidePrice, priority) {\n    GLOBAL.Util.infoLog(\"Entering Model.createItemSupplier... \" + itemID);\n    if (!itemID || !supplierID) {\n      return null;\n    }\n    \n    var content \u003d {};\n    content.itemID \u003d itemID;\n    content.supplierID \u003d supplierID;\n    content.guidePrice \u003d guidePrice;\n    content.priority \u003d priority;\n    \n    return GLOBAL.Data.saveDataItem(GLOBAL.Constants.ITEM_SUPPLIER_TYPE,content);\n    \n  },\n\n//\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Administration HANDLING \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n/**\nretrieve all the users. \n\n@method queryUser\n@example\n1. queryUser()\n@return {Object} contains the query result\n*/\n  queryUser :function (){\n    GLOBAL.Util.infoLog(\"Entering Model#queryUser()...\");\n\n    var condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.STAFF_TYPE;\n    return GLOBAL.Data.getDataItems(condition);\n    \n  },\n  \n/**\nretrieve all the users branch relationship. \n\n@method queryUserBranch\n@example\n1. queryUserBranch()\n@return {Object} contains the query result\n*/\n  queryUserBranch :function (){\n    GLOBAL.Util.infoLog(\"Entering Model#queryUserBranch()...\");\n\n    var condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.BRANCH_STAFF_TYPE;\n    return GLOBAL.Data.getDataItems(condition);\n    \n  },  \n  \n/**\nretrieve all the branches. \n\n@method queryBranch\n@example\n1. queryBranch()\n@return {Object} contains the query result\n*/\n  queryBranch :function (){\n    GLOBAL.Util.infoLog(\"Entering Model#queryBranch()...\");\n\n    var condition \u003d {};\n    condition.type \u003d GLOBAL.Constants.BRANCH_TYPE;\n    return GLOBAL.Data.getDataItems(condition);\n    \n  },\n\n  addUser : function(user){\n    GLOBAL.Util.infoLog(\"Entering Model#addUser()...\");\n    \n    // Add a staff record\n    var uob \u003d {   // user object\n      firstName: user.userfname,\n      lastName: user.userlname,\n      email: user.useremail,\n      telno: user.contacttel,\n      loginName:user.useremail\n    };\n    \n    return GLOBAL.Data.saveDataItem(GLOBAL.Constants.STAFF_TYPE, uob); \n    \n    // Add a staff-branch relation record\n    var bsob \u003d {  //Branch staff object\n    }\n  },\n  \n//\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d COMMON HANDLING \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  \n  deActivateRec : function(recType) {\n    GLOBAL.Util.infoLog(\"Entering Model#deActivateRec()...\" + recType);\n\n    var upd \u003d {};\n    upd.type \u003d recType;\n    upd.activeFlg \u003d GLOBAL.Constants.REC_EXPIRED;\n    \n    //what data should be updated?\n    var query \u003d {\"activeFlg\":GLOBAL.Constants.REC_ACTIVE};\n    \n    GLOBAL.Data.updateDataItem(upd, query);\n    \n  },  \n  \n  end : function() {\n    GLOBAL.Util.infoLog(\"Entering Model#end()...\");\n  }\n  \n  \n}"},{"id":"b09dcd92-dfd5-4c4c-99cf-f86d0cec2ace","name":"common-js","type":"html","source":"  \u003cscript language\u003d\"javascript\" type\u003d\"text/jscript\"\u003e\n  \u003c!--  \n    //-------------------------------------------------------------\n    // check whether input is a positive integer \n    //-------------------------------------------------------------\n    function isPosInteger(input) {\n      return /^[1-9]\\d*$/g.test(input);\n    }\n\n    //-------------------------------------------------------------\n    // check whether input is a non-negative integer \n    //-------------------------------------------------------------\n    function isNonNegInteger(input) {\n      return /^\\d+$/g.test(input);\n    }\n    \n    //-------------------------------------------------------------\n    // check whether input is a positive float (or positive integer) \n    //-------------------------------------------------------------\n    function isPosFloat(input) {\n      //alert(input);\n      // also have to consider the integer\n      if (isPosInteger(input)) {\n        //alert(\"input is an integer\");\n        if (input \u003d\u003d \u00270\u0027) {\n          //alert(\"back false\");\n          return false;\n        }else{\n          //alert(\"back true\");\n          return true;\n        }\n      }\n      \n      //alert(\"input is a float\");\n      // and float check\n      return /^[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*$/g.test(input);\n    }  \n    \n    //-------------------------------------------------------------\n    // check whether input is a valid date \n    //-------------------------------------------------------------\n    function isValidDate(dateString) {\n      // First check for the pattern\n      if(!/^\\d{4}\\/\\d{2}\\/\\d{2}$/.test(dateString))  //YYYY/MM/DD\n        return false;\n\n      // Parse the date parts to integers\n      var parts \u003d dateString.split(\"/\");\n      var day \u003d parseInt(parts[2], 10);\n      var month \u003d parseInt(parts[1], 10);\n      var year \u003d parseInt(parts[0], 10);\n      \n      log(\" day:\" + day + \" month:\" + month + \" year:\" + year);\n\n      // Check the ranges of month and year\n      if(year \u003c 1000 || year \u003e 3000 || month \u003d\u003d 0 || month \u003e 12)\n        return false;\n\n      var monthLength \u003d [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\n\n      // Adjust for leap years\n      if(year % 400 \u003d\u003d 0 || (year % 100 !\u003d 0 \u0026\u0026 year % 4 \u003d\u003d 0))\n        monthLength[1] \u003d 29;\n\n      // Check the range of the day\n      return day \u003e 0 \u0026\u0026 day \u003c\u003d monthLength[month - 1];\n    }\n    \n    //-------------------------------------------------------------\n    // format number as currency\n    // e.g., fmoney(789123.4567, 3) \u003d 789,123.456\n    //-------------------------------------------------------------\n    function fmoney(s, n) { \n      if (isNaN(s)) return s; //if s is a string, return without format\n      \n      n \u003d n \u003e 0 \u0026\u0026 n \u003c\u003d 20 ? n : 2; \n      s \u003d parseFloat((s + \"\").replace(/[^\\d\\.-]/g, \"\")).toFixed(n) + \"\"; \n      var l \u003d s.split(\".\")[0].split(\"\").reverse(), r \u003d s.split(\".\")[1]; \n      var t \u003d \"\"; \n      for (var i \u003d 0; i \u003c l.length; i++) { \n        t +\u003d l[i] + ((i + 1) % 3 \u003d\u003d 0 \u0026\u0026 (i + 1) !\u003d l.length ? \",\" : \"\"); \n      } \n      return t.split(\"\").reverse().join(\"\") + \".\" + r; \n    }   \n    \n    function logShowObject(obj) {\n      log(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d Showing an object \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n      //for (var name in obj) {\n      //  log(\"\u003e\u003e\" + name + \":\" + obj[name]);\n      //}\n      log(JSON.stringify(obj));\n      log(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    }\n    \n    //-------------------------------------------------------------\n    // Check function\n    //-------------------------------------------------------------\n    function checkPersonName(name) {\n      log(\"checkPersonName: [\" + name + \"]\");\n      // should be only A-Z/a-z\n      if (typeof(name) !\u003d\u003d \"string\") return false;\n      var rep \u003d name.replace(/^\\s+|\\s+$/g,\"\");\n      log(\"name:[\" + name + \"] rep:\" + rep);\n      \n\t  return rep\n    }\n    \n    function checkEmail(email) {\n      log(\"checkEmail: [\" + email + \"]\");\n      var reg \u003d /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/g;\n      return reg.test(email);\n    }\n \n  --\u003e\n  \u003c/script\u003e\n"},{"id":"0f06e930-0839-4fcb-a1c3-fe427d67d5c2","name":"purchase","type":"server_js","source":"/**\nPurchase module containing all the definition \nand methods that are used by Purchase module (including purchase log)\n\n@class\n@constructor\n\n@author songxin \u003csongxin1973@gmail.com\u003e\n@modified songxin\n@date 2014-03-10\n**/\n\nvar Purchase \u003d {\n\n/**-----------------------------------------\nPeriodically check\n aggregate the orders during the between the start date and end date\n create **Purchase** record to save one periodically checking activity\n which includes one or more **PurchaseDetail** data to save the detail items\n@method queryPurchase\n@param startDate {Number} the mill sec of start date \n@param endDate {Number} the mill sec of end date \n@return  {Object} created purchase object including detail information\n*/\n  queryPurchase :function (startDate, endDate) {  \n  \n    GLOBAL.Util.infoLog(\"Entering Purchase#queryPurchase()...[\"+startDate+\"][\"+endDate+\"]\");\n    \n    var sDate \u003d new Date(startDate).getTime();\n    var eDate \u003d new Date(endDate).getTime()+86399000;  // set to the latest time of this day(23:59:59)\n    \n    var purchase;\n    \n    GLOBAL.Util.debugLog(String.format(\"startDate:{0}    endDate:{1} \", sDate, eDate));\n    \n    var lock \u003d LockService.getPublicLock(); //LOCK the record\n    lock.waitLock(30000);\n    \n    try {\n      \n      // 2). aggregate all orders in this period and create PurchaseDetail records.\n      var newOrders \u003d Model.getNewOrders(sDate, eDate);\n      //GLOBAL.Util.displayObject(newOrders);\n      GLOBAL.Util.debugLog(\"The number of latest orders:\" + newOrders.length);\n      \n      // 1). create one purchase data cause there is an aggregating activity.\n      if (newOrders.length \u003e 0) {\n        purchase \u003d Model.createPurchase(sDate, eDate, GLOBAL.Util.getCurrentTime(), GLOBAL.Constants.STATUS.NEW.value, \"\"); //the last para is comment\n        GLOBAL.Util.debugLog(\"Created a purchase:\" + purchase.record_id);\n      }else{\n        return null;\n      }\n\n      for (var ido\u003d0,max\u003dnewOrders.length;ido\u003cmax;ido++) {\n        var order \u003d newOrders[ido];\n        \n        GLOBAL.Util.debugLog(String.format(\"Checking Order[{0}]...\", order.record_id));\n        \n        var orderDetails \u003d order.details;\n        \n        if (!orderDetails) continue;\n        \n        for (var idd\u003d0,max1\u003dorderDetails.length;idd\u003cmax1;idd++) {\n          var od \u003d orderDetails[idd];\n          var currentItemID \u003d od.item.record_id;\n          \n          //GLOBAL.Util.debugLog(String.format(\"OrderDetail of order [{0}]\u0027s  itemID is {1} and Qty is {2}\", od.orderID, currentItemID, od.itemQty));\n          \n          if (currentItemID \u003d\u003d null) {\n            GLOBAL.Util.errorLog(String.format(\"There is a order detail [{0}] which has no item information!...\", idd));\n            continue;\n          }\n          \n          //get the item detail\n          var item \u003d Model.getItemByID(currentItemID);\n          \n          //get the supplier\n          var supplier \u003d Model.getSupplierInfoByItemID(currentItemID);\n          \n          //create purchase detail for each item\n          //which means, if two or more order details involve the same item\n          //then they have to be aggregated\n          var pdIndex \u003d this.isContained(purchase.details, item, \"item\", \"record_id\");\n          \n          if (pdIndex \u003d\u003d -1) {  //there has already a purchase detail dealing with this item\n            GLOBAL.Util.debugLog(\"NOT FOUND any aggregated order data (PurchaseDetail) !\");\n            if (!purchase.details) {  //null or undefined\n              purchase.details \u003d new Array();\n            }\n            //new detail\n            var detail \u003d {};\n            //var purchaseQty \u003d 0;\n            var orderQty \u003d parseInt(od.itemQty);\n            var currentStock \u003d parseInt(item.stockQty);\n            var purchaseQty \u003d (orderQty \u003e currentStock) ? (orderQty - currentStock) : 0;\n            \n            detail.item \u003d item;\n            detail.supplier \u003d supplier;\n            detail.orderQty \u003d orderQty;\n            detail.purchaseQty \u003d purchaseQty;\n            detail.guidePrice \u003d parseFloat(od.itemPrice);\n            detail.purchasePrice \u003d parseFloat(od.itemPrice);\n            detail.comment \u003d \"\";\n            detail.stock \u003d currentStock;\n            \n            //store this detail\n            purchase.details.push(detail);\n          }else{\n            GLOBAL.Util.debugLog(\"FOUND the existed aggregated order (PurchaseDetail) !\");\n            var detail \u003d purchase.details[pdIndex];\n            detail.orderQty +\u003d parseInt(od.itemQty);\n            var currentStock \u003d parseInt(item.stockQty);\n            var purchaseQty \u003d (detail.orderQty \u003e currentStock) ? (detail.orderQty - currentStock) : 0;\n            detail.purchaseQty \u003d purchaseQty;\n          }\n        }\n        //update order status\n        order.purchaseID \u003d purchase.record_id;\n        Model.updateOrder(order);\n      }\n      \n      //update purchase\n      Model.updatePurchase(purchase);\n      \n      \n    }finally {\n      lock.releaseLock();\n    }\n\n    return purchase;\n  },\n  \n  //Mapping the query result to output data [Purchase Form]\n  createResults :function (purchase) {\n    \n    GLOBAL.Util.infoLog(\"Entering Purchase#createResults()...\" + purchase);\n    \n    if (!purchase) return null;\n\n    var results \u003d new Array();\n    \n    var purchaseDetails \u003d purchase.details;\n    \n    for (var idx\u003d0,max\u003dpurchaseDetails.length;idx\u003cmax;idx++){\n      var detail \u003d purchaseDetails[idx];\n      \n      GLOBAL.Util.displayObject(detail);\n      \n      var result \u003d {};\n      result.itemID \u003d detail.item.record_id;\n      result.itemCode \u003d detail.item.code;\n      result.itemType \u003d detail.item.itemTypeName;\n      result.itemName \u003d detail.item.name;\n      result.itemDesc \u003d detail.item.name + \" \" + detail.item.package;\n      result.guidedPrice \u003d detail.supplier.guidePrice;\n      result.orderQty \u003d detail.orderQty;\n      result.stockQty \u003d detail.stock;\n\n      result.purchaseQty \u003d detail.purchaseQty;\n      \n      if (result.purchaseQty \u003d\u003d 0) {\n        result.supplier \u003d \"stock\";\n      }else{\n        result.supplier \u003d Model.getSupplierInfoByItemID(result.itemID).name;\n      }\n      \n      results.push(result);\n    }\n    \n    return {purchaseID:purchase.record_id, results:results};\n  },\n  \n  //---------------------------------\n  // List all the purchase list for the Purchase Log\n  //---------------------------------\n  getPurchases : function () {  \n    \n    GLOBAL.Util.infoLog(\"Entering Purchase#getPurchases()...\");\n    \n    var results \u003d new Array();\n  \n    var purchases \u003d Model.getPurchases();  //Get all the purchases, so no condition to set\n    \n    purchases.sort(createComparison(\"purchaseDate\"), false);  //DESC by purchase date\n    \n    GLOBAL.Util.debugLog(String.format(\"The number of Purchase is {0}\", purchases.length));\n    \n    // Mapping the results\n    //while(purchases.hasNext()) {\n    for (var idx\u003d0,max\u003dpurchases.length;idx\u003cmax; idx++){\n      var purchase \u003d purchases[idx];\n      var ob \u003d {};\n\n      var timeFmt \u003d GLOBAL.Constants.TIME_FMT;\n      ob.purchaseId \u003d purchase.record_id;\n      ob.aggTime \u003d GLOBAL.Util.formatDateByTime(purchase.purchaseDate, timeFmt);\n      ob.startTime \u003d GLOBAL.Util.formatDateByTime(purchase.aggDateStart, timeFmt);\n      ob.endTime \u003d GLOBAL.Util.formatDateByTime(purchase.aggDateEnd, timeFmt);\n      ob.purchasedTime \u003d GLOBAL.Util.formatDateByTime(purchase.purchasedTime, timeFmt);\n      ob.statusID \u003d purchase.statusID;\n      ob.status \u003d GLOBAL.Util.getStatusTitleByValue(purchase.statusID);\n      \n      results.push(ob);\n    }\n    \n    return results;\n\n  },\n  \n  //compare two purchase data by purchase date of each data\n/*  purchaseCompare : function(obj1, obj2) {  //DESC\n    if (obj1.purchaseDate \u003e obj2.purchaseDate) {\n      return -1;\n    }else if (obj1.purchaseDate \u003c obj2.purchaseDate) {\n      return 1;\n    }else{\n      return 0;\n    }\n  },*/\n\n  //Mapping the purchase detail [PurchaseLog Form]\n  displayPurchaseDetail : function(purchaseId, statusID) {\n    GLOBAL.Util.infoLog(\"Entering Purchase#displayPurchaseDetail()...\" + purchaseId);\n    \n    var itemTypes \u003d Model.getItemTypes();\n    var purchase \u003d Model.getPurchase(purchaseId);\n\n    GLOBAL.Util.displayObject(purchase);\n    \n    var details \u003d purchase.details;\n    \n    //Mapping the results\n    var results \u003d new Array();\n    \n    //while (pdResults.hasNext()) {\n    for (idx\u003d0,max\u003ddetails.length;idx\u003cmax;idx++) {\n      var pd \u003d details[idx];\n      \n      //GLOBAL.Util.displayObject(pd.item);\n      \n      var ob \u003d {};\n      ob.itemID \u003d pd.item.record_id;\n      ob.itemType \u003d itemTypes[pd.item.itemTypeCode];\n      ob.itemName \u003d pd.item.name;\n      ob.description \u003d pd.item.description;\n      ob.supplier \u003d Model.getSupplierInfoByItemID(pd.item.record_id).name;\n      ob.guidePrice \u003d pd.guidePrice;\n      ob.purchasePrice \u003d pd.purchasePrice;\n      ob.stockQty \u003d pd.item.stockQty;\n      ob.orderQty \u003d pd.orderQty;\n      ob.purchaseQty \u003d pd.purchaseQty;\n      ob.comment \u003d pd.comment;\n      ob.statusID \u003d statusID;\n      ob.status \u003d GLOBAL.Util.getStatusTitleByValue(statusID);\n      \n      results.push(ob);\n    }\n    \n    return {purchaseID:purchaseId, results:results};\n    \n  }  ,\n\n  //Shortcut when all items can be picked from stock, so can set this purchase data\n  //to \"PURCHASED\" directly.\n  setToPurchased : function(purchaseID) {\n    GLOBAL.Util.infoLog(\"Entering Purchase#setToPurchased()...\" + purchaseID);\n    var result \u003d false;\n    var purchase;\n    \n    var lock \u003d LockService.getPublicLock(); //LOCK the record\n    lock.waitLock(30000);\n    \n    try {\n      //get purchase data\n      purchase \u003d Model.getPurchase(purchaseID);\n      \n      //update the status of this purchase data\n      purchase.statusID \u003d GLOBAL.Constants.STATUS.PURCHASED.value;\n      purchase.purchasedTime \u003d GLOBAL.Util.getCurrentTime();\n      \n      //update the purchase data\n      var result \u003d Model.updatePurchase(purchase);\n      \n      GLOBAL.Util.displayObject(result);\n      \n    }finally {\n      lock.releaseLock();\n    }\n    \n    return purchase.record_id;\n    \n  }  ,\n  \n  updatePurchaseDetail : function(purchaseID, params) {\n    GLOBAL.Util.infoLog(\"Entering Purchase#updatePurchaseDetail()...\" + purchaseID);\n    var result \u003d false;\n    \n    //GLOBAL.Util.displayObject(params);\n    \n    var lock \u003d LockService.getPublicLock(); //LOCK the record\n    lock.waitLock(30000);\n    \n    try {\n      //get purchase data\n      var purchase \u003d Model.getPurchase(purchaseID);\n      var pdCount \u003d purchase.details.length;\n      var paraCount \u003d params.length;\n      \n      for (var idx\u003d0;idx\u003cparaCount;idx++){\n\n        //GLOBAL.Util.displayObject(purchase);\n        \n        //update the details\n        var pdIndex \u003d -1;\n        for (var idd\u003d0;idd\u003cpdCount;idd++){\n          \n          if (purchase.details[idd].item.record_id \u003d\u003d params[idx].itemID) {  //find the relative purchase detail by item id\n            pdIndex \u003d idx;\n            //hit the detail so update it\n            purchase.details[idd].purchasePrice \u003d parseFloat(params[idx].purchasePrice);\n            purchase.details[idd].purchaseQty \u003d parseInt(params[idx].purchaseQty);\n            purchase.details[idd].comment \u003d params[idx].comment;\n            break;\n          }\n        }\n        \n        if (pdIndex \u003d\u003d -1) {  //there has already a purchase detail dealing with this item\n          var msg \u003d String.format(\"Unexpected item id [{0}] is found in Purchase [{1}] \", pd.itemID, purchaseID);\n          GLOBAL.Util.errorLog(msg);\n          throw new LogicException(msg);\n        }\n\n      }\n      //update the status of this purchase data\n      purchase.statusID \u003d GLOBAL.Constants.STATUS.PURCHASED.value;\n      purchase.purchasedTime \u003d GLOBAL.Util.getCurrentTime();\n      \n      var result \u003d Model.updatePurchase(purchase);\n      \n      GLOBAL.Util.displayObject(result);\n      \n      return purchase;   //the result contains error code only, so return purchase\n      \n    }finally {\n      lock.releaseLock();\n    }\n    \n  }  ,\n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d  COMMON FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n/**\n* Check whether an object which has the specifized key-value exists in an Array.\n*\n* @param {Object} the array containing multiple objects\n* @param {string} identify which key should be compared\n* @param {string} the value using to compare the key\n* @return {number} if the obj which own the key-value exist in the array, return the index, otherwise -1\n*/\n  isContained :function (objArray, obj, objName, key) {\n    GLOBAL.Util.infoLog(\"Entering Purchase#isContained()...objName: \"+objName+\"  key:\" + key);\n    var result \u003d -1;\n    \n    if (!objArray) return result;\n    \n    for (var idx\u003d0, max\u003dobjArray.length; idx\u003cmax; idx++) {\n      var objResult \u003d objArray[idx];\n      \n      if (objResult.hasOwnProperty(objName)) {\n        if (objResult[objName][key] \u003d\u003d obj[key]) {\n          result \u003d idx;\n          break;\n        }\n      }\n    }\n    \n    return result;\n  },\n   \n  end : function() {\n    GLOBAL.Util.infoLog(\"Entering Purchase#end()...\");\n  }\n\n}\n"},{"id":"cada003f-b478-4642-adc4-07e72193ada7","name":"itemmgr","type":"server_js","source":"/**\nItemmgr module containing all the definition \nand methods that are used by Item Management module\n\n@class\n@constructor\n\n@author songxin \u003csongxin1973@gmail.com\u003e\n@modified songxin\n@date 2014-03-12\n**/\n\nvar Itemmgr \u003d {\n\n  initItemMgr : function() {\n    var result \u003d {};\n    result.items \u003d Model.prepareItems();\n    result.itemTypes \u003d Model.getItemTypes();\n      \n    return result;\n  },\n  \n//--------------------------------------------------\n// receive the upload file and save it to Google drive\n// then transfer it to Google spreadsheet format\n// and retrieve the data from file to save to the database\n// RETURN the successful information\n//--------------------------------------------------\n  uploadItemFile :function (form) {\n    GLOBAL.Util.infoLog(\"Entering uploadItemFile...\");\n    \n    var formBlob \u003d form.itemFile;\n    \n    // Save uploaded Excel as Google Spreadsheet\n    var fileName \u003d \"Item_\" + GLOBAL.Util.formatDateByTime(GLOBAL.Util.getCurrentTime(), \"yyyyMMddhhmmss\");\n    \n    var gsFile \u003d FileHandler.convert(formBlob, fileName);\n    GLOBAL.Util.debugLog(\"Uploaded file\u0027s has been renamed to \" + fileName);\n    \n    //Fetching data from file\n    var ss \u003d SpreadsheetApp.openById(gsFile.getId());\n    var sheet \u003d ss.getSheets()[0];\n    //var itemDataRange \u003d sheet.getRange(\"A3:M800\");\n    var itemDataRange \u003d sheet.getDataRange().offset(2,0); //since getDataRange, data row should be begin from row 3\n    \n    var itemObjects \u003d FileHandler.getRowsData(sheet, itemDataRange, 1);  \n    \n    this.saveItemsToDb(itemObjects);\n    \n    //file.setTrashed(true);\n    //GLOBAL.Util.debugLog(\"Uploaded file\u0027s has been removed!\");\n\n    // backup the converted spreadsheet file\n    //FileHandler.moveFileToFolder(gsFile, \"UploadBackup\");\n    \n    //var backupFolder \u003d DocsList.getFolder(\"UploadBackup\");\n    //gsFile.addToFolder(backupFolder);   //Backup the upload file (converted)\n    \n    //gsFile.removeFromFolder(DocsList.getRootFolder()); \n    \n    //  return \"\";\n    //var key \u003d {\"itemType\":itemType, \"itemName\":itemName};\n    //var itemResults \u003d queryItemsByKeys(QUERY_ALL_TYPES,\"\");\n    \n    // after successfully stored the order, return to index view.\n    //return createItemMgtList(itemResults);\n    \n    //return gsFile.getUrl();\n    \n  },\n  \n  \n\n/*  uploadItemFile_Old : function (form) {\n  \n    GLOBAL.Util.infoLog(\"Entering uploadItemFile ... \" + typeof(form.fileUpload));\n    //displayObject(form.fileUpload);\n    \n    var file \u003d DocsList.createFile(form.fileUpload);\n    debugLogToDb(\"the id of uploaded excel file is \" + file.getId());\n    \n    // Covert Excel to Google Spreadsheet\n    var gsFile \u003d convert(file.getId());\n    // Change the name\n    gsFile.rename(\"Item_\"+formatDateByTime(getCurrentTime(), \"yyyyMMddhhmmss\"));\n    \n    var ss \u003d SpreadsheetApp.openById(gsFile.getId());\n    debugLogToDb(\"the name of spreadsheet is \" + ss.getName());\n    \n    var sheet \u003d ss.getSheets()[0];\n    // Get the range of cells that store employee data.\n    var itemDataRange \u003d sheet.getRange(\"A3:K800\");\n    \n    var itemObjects \u003d getRowsData(sheet, itemDataRange, 1);\n    debugLogToDb(\"the number of data acquired is \" + itemObjects.length);\n    \n    saveItemsFromUpload(itemObjects);\n    debugLogToDb(\"saveItemsFromUpload \");\n    \n    // delete the uploaded file\n    file.setTrashed(true);\n    debugLogToDb(\"setTrashed \");\n    \n    // backup the converted spreadsheet file\n    var backupFolder \u003d DocsList.getFolder(\"UploadBackup\");\n    gsFile.addToFolder(backupFolder);   //Backup the upload file (converted)\n    gsFile.removeFromFolder(DocsList.getRootFolder()); \n    debugLogToDb(\"removeFromFolder \");\n    \n    //  return \"\";\n    //var key \u003d {\"itemType\":itemType, \"itemName\":itemName};\n    var itemResults \u003d queryItemsByKeys(QUERY_ALL_TYPES,\"\");\n    debugLogToDb(\"queryItemsByKeys \");\n    \n    // after successfully stored the order, return to index view.\n    return createItemMgtList(itemResults);\n    \n  },\n\n*/\n//--------------------------------------------------\n// save the items information get from uploaded file\n//--------------------------------------------------\n  saveItemsToDb : function (items) {\n    GLOBAL.Util.infoLog(\"Entering saveItemsToDb...\");\n    \n    // deActivate all the current item data.\n    Model.deActivateRec(GLOBAL.Constants.ITEM_TYPE);\n    Model.deActivateRec(GLOBAL.Constants.ITEM_SUPPLIER_TYPE);\n    Model.deActivateRec(GLOBAL.Constants.ITEMTYPE_TYPE);\n    \n    // reset the ITEM_TYPE\n    \n    var cnt \u003d 0;\n    \n    for (var idx \u003d 0; idx \u003c items.length; idx++) {\n      \n      var itemID \u003d items[idx].itemID;\n      GLOBAL.Util.debugLog(\"Handling item:\" + itemID);\n      \n      if (itemID) {\n\n        GLOBAL.Util.debugLog(\"actually handling item \" + itemID);\n        // (1) extract Item Data\n        var item \u003d items[idx];\n        \n        // (2) setting supplier id for this item\n        var supplierID \u003d Model.prepareSupplier(item.supplier);\n        GLOBAL.Util.debugLog(\"Supplier has been identified... \" + supplierID);\n        \n        // (3) setting ItemType data and update this itemType for the item\n        var itemType \u003d Model.prepareItemType(items[idx].itemTypeCode, items[idx].itemTypeName);  \n        item.itemType \u003d itemType; //record_id of itemType\n        \n        // (4) create the item data\n        item \u003d Model.createItem(item);\n        GLOBAL.Util.debugLog(String.format(\"Item [{0}] has been stored! \",item.record_id));\n        cnt++;\n        \n        // (5) after item and supplier information are stored, \n        //     create a new relationship of Item and Supplier\n        if (supplierID !\u003d \"\") {\n          var res \u003d Model.createItemSupplier(item.record_id, supplierID, item.guidePrice, 0);\n          GLOBAL.Util.debugLog(\"One ItemSupplier data has been created as follows\");\n          GLOBAL.Util.displayObject(res);\n        }\n        \n      }\n    }\n    \n    GLOBAL.Util.debugLog(String.format(\"{0} items have been stored successfully!\", cnt));\n    \n  },\n  \n\n  // itemType includes three attributes:\n  // record_id, unique indentifier used in item as itemType\n  queryItem:function(itemType) {\n    GLOBAL.Util.infoLog(\"Entering ItemMgr#queryItem()...\");\n    GLOBAL.Util.showPara({\n      funcName:\"queryItem\",\n      \"itemType\":itemType\n    });\n    \n    var itemTypes \u003d Model.getItemTypes();\n    var results ;\n    \n    if (!itemType||itemType\u003d\u003d\u0027-1\u0027) {\n      results \u003d Model.queryItem({}); \n    }else{  \n      \n      results \u003d Model.queryItem({itemTypeCode:parseInt(itemType)}); \n    }\n    \n    //add some auxiliary information\n    for (var idx\u003d0,max\u003dresults.length;idx\u003cmax;idx++){\n      results[idx].itemID \u003d results[idx].record_id;\n      var type \u003d results[idx].itemTypeCode;\n      results[idx].itemTypeName \u003d itemTypes[type];\n    }\n    \n    return results;  \n    \n\n  },\n  \n  end: function(){\n   //do nothing\n  }\n}"},{"id":"b626548c-b4a1-4b7b-87e7-1d1928fed797","name":"stock","type":"server_js","source":"/**\nStock module containing all the definition \nand methods that are used by Stock(Inventory) module (including stock in/out)\n\n@class\n@constructor\n\n@author songxin \u003csongxin1973@gmail.com\u003e\n@modified songxin\n@date 2014-03-14\n**/\n\nvar Stock \u003d {\n  \n  initStockList : function(content) {\n    var result \u003d {};\n    result.itemTypes \u003d Model.getItemTypes();\n    return result;\n  },\n  \n  prepareStock : function(content) {\n    var result \u003d {};\n    result.content \u003d content;\n    result.items \u003d Model.prepareItems();\n    result.itemTypes \u003d Model.getItemTypes();\n    result.rs \u003d GLOBAL.Util.getLocalString();\n    \n    return result;\n  },  \n  //-----------------------------------------\n  // Retrieving the current items\n  // sort by itemType\n  //-----------------------------------------\n  queryStock : function (itemTypeCode) {  \n    GLOBAL.Util.infoLog(\"Entering Stock#queryStock()...\" + itemTypeCode);\n    \n    // create a db instance\n    var results;\n    \n    var itemTypes \u003d Model.getItemTypes();\n    \n    // create the query string\n    if (!itemTypeCode || itemTypeCode\u003d\u003d\u0027-1\u0027) {\n      results \u003d Model.queryItem({}); \n    }else{  \n      results \u003d Model.queryItem({itemTypeCode:parseInt(itemTypeCode)}); \n    }\n    \n    //Add some auxiliary information to display\n    for (var idx\u003d0,len\u003dresults.length;idx\u003clen;idx++) {\n      var item  \u003d results[idx];\n      item.itemType \u003d itemTypes[item.itemTypeCode];  //change the code to text\n      item.description \u003d item.name + \" \" + item.package;\n      \n      item.stockPrice \u003d parseFloat(item.stockPrice).toFixed(2);\n      \n      var stockQty \u003d parseInt(item.stockQty);\n      var safetyQty \u003d parseInt(item.safetyQty);\n      \n      if (stockQty \u003c safetyQty) {\n        item.necessaryQty \u003d safetyQty - stockQty;\n      }else{\n        item.necessaryQty \u003d 0;\n      }\n      \n    }\n    \n    return results;  \n    \n  },\n  \n  //--------------------------------------------------\n  // save the item in the StockItems as stock record\n  //--------------------------------------------------\n  saveStock :function (params) {\n  \n    GLOBAL.Util.infoLog(\"Entering Stock#saveStock()...\");\n    GLOBAL.Util.showPara({\n      funcName:\"Stock#saveStock\",\n      params:params\n    });\n    \n    var rs \u003d GLOBAL.Util.getLocalString();\n    \n    var paras \u003d new Array();\n    //var direction \u003d params.directionSaveStock;\n    \n    var lock \u003d LockService.getPublicLock(); //LOCK the record\n    lock.waitLock(30000);\n    \n    try {    \n      //for (var para in params) {\n      for (var idx\u003d0;idx\u003cparams.length;idx++) {\n        var para \u003d params[idx];\n        \n        var item \u003d {};\n        item.record_id \u003d para.itemid;\n        item.itemType \u003d para.type;\n        item.itemID \u003d para.cust_itemid;\n        item.desc \u003d para.desc;\n        \n        var direction \u003d -1;\n/*        for (var i\u003d0; i\u003cGLOBAL.Constants.STOCK_DIRECTION.length;i++){\n          if (para.direction \u003d\u003d GLOBAL.Constants.STOCK_DIRECTION[i]) {\n            direction \u003d i;   //Get the direction code: 0-\u003eIN    1-\u003eOUT\n            break;\n          }\n        }*/\n        \n        if (para.direction \u003d\u003d rs.stockin.name) {\n          direction \u003d GLOBAL.Constants.STOCK_IN; \n        }else{\n          direction \u003d GLOBAL.Constants.STOCK_OUT; \n        }\n        \n        // For each items in StockItemsList, save one stock record\n        Model.saveStock(direction, para.stockinprice, para.qty, item);\n        \n        // Updating the item price as new items stock in.\n        /*if (direction \u003d\u003d GLOBAL.Constants.STOCK_IN) {\n          //item price change only occur when some new items come in\n          this.updateItemPrice(para.itemid, parseInt(para.qty), parseFloat(para.stockinprice));\n        }*/\n        \n        var itemInfo \u003d {};\n        itemInfo.direction \u003d direction;\n        itemInfo.record_id \u003d para.itemid;\n        itemInfo.itemID \u003d para.cust_itemid;\n        itemInfo.qty \u003d parseInt(para.qty);\n        itemInfo.inPrice \u003d parseFloat(para.stockinprice);\n        this.updateItemInfo(itemInfo);\n        \n      }\n    }finally {\n      lock.releaseLock();\n    }    \n    \n    // Send an Email to Stock Manager\n    //this.sendStockEmail();\n    \n    // for all those items that have been stock in/out, return the latest information of them\n    \n    return ;\n  },\n  \n  updateItemInfo : function(itemInfo) {\n    GLOBAL.Util.infoLog(\"Entering Stock#updateItemInfo()...\");\n    GLOBAL.Util.showPara({\n      funcName:\"Stock#updateItemInfo\",\n      params:itemInfo\n    });\n    \n    var direction \u003d itemInfo.direction;\n    //var itemID \u003d itemInfo.itemID;\n    var id \u003d itemInfo.record_id;\n    var qty \u003d itemInfo.qty;\n    var inPrice \u003d itemInfo.inPrice;\n    \n    var lock \u003d LockService.getPublicLock(); //LOCK the record\n    lock.waitLock(30000);\n    \n    try {    \n      var item \u003d Model.getItemByID(id);\n      var stockQty \u003d parseInt(item.stockQty);\n      var stockPrice \u003d parseFloat(item.stockPrice).toFixed(2);\n      \n      if (direction \u003d\u003d GLOBAL.Constants.STOCK_IN) {\n      var newStockPrice \u003d (stockPrice * stockQty + (qty * inPrice)) / (stockQty + qty);\n        item.stockQty \u003d stockQty + qty;\n        item.stockPrice \u003d newStockPrice.toFixed(2);\n      }else{  //When stock out\n        item.stockQty \u003d stockQty - qty;\n        if (item.stockQty \u003c 0) {\n          var msg \u003d \"There is not enough stock quantity of the item:\" + item.name;\n          GLOBAL.Util.errorLog(msg);\n          throw new LogicException(msg);\n        }\n      }\n      \n      Model.updateItem(item);\n      \n    }finally {\n      lock.releaseLock();\n    }\n    \n  },\n  \n  end : function() {\n    GLOBAL.Util.infoLog(\"Entering Stock#end()...\");\n  }\n  \n}"},{"id":"96de31e8-fddd-4806-be0a-cb02fa426329","name":"distribute","type":"server_js","source":"/**\nDistribute module containing all the definition \nand methods that are used by Distribute module\n@class\n@constructor\n\n@author songxin \u003csongxin1973@gmail.com\u003e\n@modified songxin\n@date 2014-04-27\n**/\n\nvar Distribute \u003d {\n  \n  //-------------------------------------------------------\n  // get latest purchase data to identify the distribute\n  //-------------------------------------------------------\n  getList : function () {  \n    \n    GLOBAL.Util.infoLog(\"Entering Distribute#getList()...\");\n    \n    var results \u003d new Array();\n    var timeFmt \u003d \"yyyy/MM/dd\";\n  \n    // create a db instance\n    var purchases \u003d Model.getPurchases();\n    purchases.sort(createComparison(\"purchaseDate\", false));\n    \n    GLOBAL.Util.debugLog(String.format(\"The number of Purchase is {0}\", purchases.length));\n    \n    // Mapping the results\n    for (var idx\u003d0,len\u003dpurchases.length;idx\u003clen;idx++) {\n      var purchase \u003d purchases[idx];\n      var ob \u003d {};\n      ob.id \u003d purchase.record_id;\n      ob.aggTime \u003d GLOBAL.Util.formatDateByTime(purchase.purchaseDate, timeFmt);\n      ob.startTime \u003d GLOBAL.Util.formatDateByTime(purchase.aggDateStart, timeFmt);\n      ob.endTime \u003d GLOBAL.Util.formatDateByTime(purchase.aggDateEnd, timeFmt);\n      ob.purchasedTime \u003d GLOBAL.Util.formatDateByTime(purchase.purchasedTime, timeFmt);\n      ob.statusId \u003d purchase.statusID;\n      ob.status \u003d  GLOBAL.Util.getStatusTitleByValue(purchase.statusID);\n      results.push(ob);\n    }\n    \n    GLOBAL.Util.displayObject(results);\n    \n    \n    return results;\n\n  },\n  \n  //------------------------------------------------------\n  //Name:      queryDistDataByPurchaseID\n  //Input:     purchaseID\n  //Input:     statusID\n  //Output:    if there is no dist data for specified purchaseID,\n  //           then create them. otherwise, return\n  //------------------------------------------------------\n  queryDistDataByPurchaseID : function(purchaseID, statusID) {\n    GLOBAL.Util.infoLog(\"Entering queryDistDataByPurchaseID()...\" + purchaseID);\n    \n    //---------------------------------------\n    // Start the process\n    //---------------------------------------\n    var existed \u003d Model.getDistributeMaster(purchaseID);\n    \n    if (existed.length \u003d\u003d 1) {\n      GLOBAL.Util.debugLog(\"There has already been distribute data for this purchase [\" + purchaseID + \"]\");\n      return this.createDetailResult(purchaseID); //distribute master record id\n    }else if (existed.length \u003e 1){\n      var msg \u003d String.format(\"There are {0} distribute master records which purchaseID is {1}\", existed.length, purchaseID);\n      GLOBAL.Util.errorLog(msg);\n      throw new BusinessException(msg);\n    }\n    \n    var branches \u003d Model.getBranches();  //branches should be an array of objects which contain the branch info respectively\n    \n    var condition \u003d {};\n    condition.purchaseID \u003d purchaseID;\n    var orders \u003d Model.getOrdersByKey(condition);\n    \n    var lock \u003d LockService.getPublicLock(); //LOCK the record\n    lock.waitLock(30000);\n    \n    try {\n      \n      //for distribute master information\n      var branchTotalPrice \u003d {};\n      var branchStatus \u003d {};\n      var branchComment \u003d {};\n      \n      //add properites for each branch to hold the deliver information\n      for (var i\u003d0, max\u003dbranches.length;i\u003cmax;i++) {\n        var brancheName \u003d branches[i].name;\n        branchTotalPrice[brancheName] \u003d 0.0;\n        branchStatus[brancheName] \u003d GLOBAL.Constants.STATUS.NONE;   //Initialize the status\n        branchComment[brancheName] \u003d \"\";  // Initialize the comment\n      }    \n      \n      //while (orders.hasNext()) {\n      for (var idx\u003d0,len\u003dorders.length;idx\u003clen;idx++) {\n        \n        var order \u003d orders[idx];\n        \n        var tmpOrderID \u003d order.record_id;\n        var tmpBranchID \u003d order.branchID;\n        var branch \u003d Model.getBranchByID(tmpBranchID);\n            \n        \n        GLOBAL.Util.debugLog(\"tmpOrderID is \" + tmpOrderID + \" and branche id is \" + tmpBranchID);\n        var orderDetails \u003d order.details;\n        \n        //every order detail of one specific order should be processed\n        for (var idxOd\u003d0;idxOd\u003corderDetails.length;idxOd++) {\n          var tmpOrderDetail \u003d orderDetails[idxOd];\n          //var tmpItemID \u003d tmpOrderDetail.item.itemID;\n          var tmpItemID \u003d tmpOrderDetail.item.record_id;\n          \n          GLOBAL.Util.displayObject(tmpOrderDetail);\n          \n          GLOBAL.Util.debugLog(String.format(\"Hit one orderDetail[{0}] of Order[{1}]!\", tmpOrderDetail.detailID, tmpOrderID));\n          \n          // get the description and stock of item\n          var tmpItemName \u003d \"\";\n          var tmpItemDesc \u003d \"\";\n          var tmpItemStock \u003d 0;\n          \n          var tmpItem \u003d Model.getItemByID(tmpItemID);\n          tmpItemName \u003d tmpItem.name;\n          tmpItemDesc \u003d tmpItem.description;\n          tmpItemStock \u003d tmpItem.stockQty;\n          \n          GLOBAL.Util.debugLog(String.format(\"Current Item name is [{0}]!\", tmpItemName));\n          // get guide price of item\n          var tmpItemPrice \u003d Model.getSupplierInfoByItemID(tmpItemID).guidePrice;\n          GLOBAL.Util.debugLog(String.format(\"Current Item guide price is [{0}]!\", tmpItemPrice));\n          \n          // check if this itemID existed\n          var dd \u003d Model.getDistributeDetail(purchaseID, tmpItemID);\n          if (dd \u003d\u003d null) {\n            //if there is no existed detail, create a new one\n            GLOBAL.Util.debugLog(\"No existed Distribute detail is found! Prepare to create an new one!\");\n            var branchQty \u003d {};  //{key:branchName, value:qty}\n            \n            branchQty[branch.name] \u003d tmpOrderDetail.itemQty;  //branchQty should be {brancheID : the item quantity that should be delivered to this branch}\n\n            //Master information\n            branchTotalPrice[branch.name] +\u003d parseFloat(tmpItemPrice) * parseFloat(tmpOrderDetail.itemQty);\n            branchStatus[branch.name] \u003d GLOBAL.Constants.STATUS.NEW.value;  // new one\n            \n            //Prepare the data of one distribute detail\n            var item \u003d {\n              itemID:tmpItemID,\n              itemName:tmpItemName,\n              itemDesc:tmpItemDesc,\n              stockQty:tmpItemStock,\n              guidePrice:tmpItemPrice\n            };\n\n            Model.saveDistributeDetail(purchaseID, item, branchQty);\n            \n          } else {\n            //if the distribute detail data is already existed, update the quantity of the item\n            \n            dd.branchQty[branch.name] +\u003d tmpOrderDetail.itemQty;\n            Model.updateDistributeDetail(dd);\n          }\n        }\n      }  // while (orderResults.hasNext())\n      \n      // create the master record of this distribute\n      Model.saveDistributeMaster(purchaseID, branchStatus, branchComment, branchTotalPrice, GLOBAL.Constants.STATUS.NEW.value);\n      \n      return this.createDetailResult(purchaseID); //distribute master record id\n      \n    }finally{\n      lock.releaseLock();\n    }\n    \n  },\n  \n  //get the distribute master and detail information by purchaseID\n  //2 kinds of data: one or more details and one master data\n  createDetailResult : function(purchaseID) {\n    \n    GLOBAL.Util.infoLog(\"Entering createDetailResult()...\" + purchaseID);\n    \n    var result \u003d {};   // contains all item records and distribute master information.\n    var itemRecords \u003d new Array();    // collection of item record (including each branch quantity);\n    \n    //set purchaseID\n    result.purchaseID \u003d purchaseID;\n    \n    //--------------------------------------------------------\n    //prepare detail\n    //--------------------------------------------------------\n    var details \u003d Model.getDistributeDetails(purchaseID);\n    var branches \u003d Model.getBranches();\n    \n    GLOBAL.Util.debugLog(\"[BEFORE]There are detail \"+details.length+\" records of purchase[\"+purchaseID+\"]\");\n    //Mapping the detail information\n    for (var idx\u003d0;idx\u003cdetails.length;idx++) {\n      GLOBAL.Util.debugLog(\"[IN]INDEX: \"+idx);\n      var detail \u003d details[idx];\n      var record \u003d {};\n      record.itemID \u003d detail.item.itemID;\n      record.itemName \u003d detail.item.itemName;\n      record.salePrice \u003d detail.item.guidePrice;\n      \n      var branchQty \u003d detail.branchQty;\n      for (var i\u003d0; i\u003cbranches.length; i++) {\n        var branchName \u003d branches[i].name;\n        if (branchQty.hasOwnProperty(branchName)) {\n          record[branchName] \u003d branchQty[branchName];\n        }else{\n          record[branchName] \u003d 0;\n        }\n      }\n      //GLOBAL.Util.displayObject(record);\n      itemRecords.push(record);\n    }\n    result.itemRecords \u003d itemRecords;\n    \n    //--------------------------------------------------------\n    //prepare master\n    //--------------------------------------------------------\n    var master \u003d Model.getDistributeMaster(purchaseID);\n    // the result should be only one\n    if (master.length !\u003d 1) {\n      var msg \u003d String.format(\"There are {0} distribute master records which purchaseID is {1}\", dists.length, purchaseID);\n      GLOBAL.Util.errorLog(msg);\n      throw new BusinessException(msg);\n    }\n    \n    result.master \u003d master[0];\n    \n    GLOBAL.Util.debugLog(\"[AFTER]There are detail \"+itemRecords.length+\" records of purchase[\"+result.purchaseID+\"]\");\n    return result;\n  },\n  \n  //Update distribute data those connecting particular purchase (by purchaseID)\n  //Updating each branch\u0027s status and comment, so only distribute master will be updated\n  //if all branch\u0027s status become \"delivered\", then the whole distribute (also in distribute master)\n  //will also become delivered as well as relative purchase\u0027s status.\n  confirmDistribute : function(purchaseID, status, comment) {\n    GLOBAL.Util.infoLog(\"Entering confirmDistribute()...\" + purchaseID);\n    var branches \u003d Model.getBranches();\n    \n    var masters \u003d Model.getDistributeMaster(purchaseID);\n    var purchase;\n    var delivered \u003d true;\n    \n    GLOBAL.Util.displayObject(status);\n    GLOBAL.Util.debugLog(\"There are \" + masters.length + \" record(s) of distribute master data\");\n    \n    if (masters.length !\u003d 1) {   //There is only one master data\n      var msg \u003d String.format(\"There are {0} distribute master records which purchaseID is {1}\", masters.length, purchaseID);\n      GLOBAL.Util.errorLog(msg);\n      throw new BusinessException(msg);\n    }      \n    \n    var master \u003d masters[0];\n    for (var idx\u003d0,max\u003dbranches.length; idx\u003cmax; idx++) {\n      var branchName \u003d branches[idx].name;\n      if (status.hasOwnProperty(branchName)) {\n        GLOBAL.Util.debugLog(\"setting status for \" + branchName + \u0027 which status is \u0027 + status[branchName]);\n        master.branchStatus[branchName] \u003d status[branchName];\n      }\n      if (comment.hasOwnProperty(branchName)){\n        master.branchComments[branchName] \u003d comment[branchName];\n      }\n    }\n    \n    //if all branch status are \u0027Delivered\u0027, update the master and purchase data\n    for (var s in master.branchStatus) {\n      //\n      if (master.branchStatus[s] \u003d\u003d GLOBAL.Constants.STATUS.NEW.value ) {\n        GLOBAL.Util.debugLog(s + \u0027 status is \u0027 + master.branchStatus[s]);\n        delivered \u003d false;\n        break;\n      }\n    }\n    \n    if (delivered) {\n      GLOBAL.Util.debugLog(\"So all branches have been delivered!...\");\n      //set the master to delivered\n      master.statusID \u003d GLOBAL.Constants.STATUS.DELIVERED.value;\n      master.statusText \u003d GLOBAL.Util.getStatusTitleByValue(master.statusID);\n      \n      //update the relative purchase to delivered.\n      purchase \u003d Model.getPurchase(purchaseID);\n      purchase.statusID \u003d GLOBAL.Constants.STATUS.DELIVERED.value;\n      \n      Model.updatePurchase(purchase);\n      GLOBAL.Util.debugLog(\"Purchase data [\" + purchaseID + \"] has been updated!\");\n    }\n    \n    Model.updateDistrMaster(master);\n    GLOBAL.Util.debugLog(\"Distribute master data has been updated!\");\n    \n    return purchaseID;\n  },\n\n  end : function() {\n    GLOBAL.Util.infoLog(\"Entering Purchase#end()...\");\n  }\n\n}\n"},{"id":"a775efc9-97bb-4f22-9ddd-71f31db6edc3","name":"stock-ui-js","type":"html","source":"  \u003cscript language\u003d\"javascript\" type\u003d\"text/jscript\"\u003e\n  \u003c!-- \n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EVENT FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  //----------------- Stock Event -------------------------------------------------------------------\n  function queryStock() {\n    //getting item type\n    var itemType \u003d $(\"#stock-item-type\").find(\"option:selected\").val();\n    //alert(itemType);\n    google.script.run.withSuccessHandler(onSuccessQeuryStock).processQueryStock(itemType);\n    \n  }\n  \n  function addStockInItem() {\n    log(\"Entering addStockInItem...\");\n\n    //collecting the inputed items and quantity\n    $(\"#stock-tabs div.item-select-cell\").each(function() {\n      var $currentItemCell \u003d $(this);   //div\n      var $stockQty \u003d $currentItemCell.find(\"input[name\u003d\u0027stockInQty\u0027]\").first();\n      var $stockPrice \u003d $currentItemCell.find(\"input[name\u003d\u0027stockInPrice\u0027]\").first();\n      \n      if ($stockQty.val() !\u003d \"\" || $stockPrice.val() !\u003d \"\") {\n\n        //get itemType;\n        var itemType \u003d $currentItemCell.find(\"input[name\u003d\u0027itemType\u0027]\").first().val();\n        var itemName \u003d $currentItemCell.find(\"td[name\u003d\u0027itemName\u0027]\").first().text();\n        var currentPrice \u003d $currentItemCell.find(\"input[name\u003d\u0027currentPrice\u0027]\").first().val();\n        var currentQty \u003d $currentItemCell.find(\"input[name\u003d\u0027currentQty\u0027]\").first().val();\n        var description \u003d itemName + \" \" + $currentItemCell.find(\"td[name\u003d\u0027package\u0027]\").first().text();\n        var supplier \u003d $currentItemCell.find(\"input[name\u003d\u0027supplier\u0027]\").first().val();\n        var itemId \u003d $currentItemCell.find(\"input[name\u003d\u0027itemId\u0027]\").first().val();    // record_id\n        var cust_itemId \u003d $currentItemCell.find(\"input[name\u003d\u0027cus_itemId\u0027]\").first().val(); //itemID\n        \n        log(\"check the item-select-cell...\" + $stockQty.val() + \" @ \" +  $stockPrice.val());\n        // if there is already an existed, add the quantity up\n        var hit \u003d false;\n        $(\"#stock-item-list tbody tr\").each(function () {\n          var $fields \u003d $(this).children(); // All \u0027td\u0027\n          log(\"The fields html content is:\" + $(this).html());\n          \n          var currentItemId \u003d $fields.eq(0).text();  //record_id\n          log(\"currentItemId:\" + currentItemId + \" itemId:\" + itemId);\n          \n          if (currentItemId \u003d\u003d itemId) {\n            //sum up the quantity of the same item\n            var addedPrice \u003d parseFloat($fields.eq(5).children().first().val());\n            var addedVal \u003d parseInt($fields.eq(6).children().first().val());\n\n            var newVal \u003d parseInt($stockQty.val()) + addedVal;\n            var newPrice \u003d (parseFloat($stockPrice.val()) * parseInt($stockQty.val()) + addedPrice * addedVal) / newVal; \n            log(\"The new value is \" +  newVal);\n            \n            if (isNaN(newVal) || isNaN(newPrice)) {\n              alert(\"Please input a number in \u003c\u003c\" + itemName + \"\u003e\u003e\");\n              throw new Error(\"INPUT ERROR\");\n            }\n            //Set new stock in qty\n            $fields.eq(6).children().first().val(newVal);  // select the input value\n            \n            //Set new stock price\n            $fields.eq(5).children().first().val(newPrice.toFixed(2));  // renew the input value\n            \n            hit \u003d true;\n          }\n        });\n        \n        // if there is no hit\n        if (hit \u003d\u003d false) {\n          \n          //set stock in price as current stock price if there is no input\n          var inPrice \u003d $stockPrice.val();\n          var stockInPrice \u003d (inPrice \u003d\u003d \"\") ? currentPrice : inPrice;\n          \n          var oTable \u003d $(\"#stock-item-list\").dataTable();\n          oTable.fnAddData([\n            itemId,               //record_id\n            itemType,             //type\n            cust_itemId,          //itemID\n            description,          //description\n            MESSAGETXT.stockin.name,\n            \"\u003cinput type\u003d\u0027text\u0027 style\u003d\u0027width:35px;\u0027 name\u003d\u0027stock-in-price\u0027 value\u003d\u0027\"+ stockInPrice +\"\u0027 /\u003e\",  //qty\n            \"\u003cinput type\u003d\u0027text\u0027 style\u003d\u0027width:35px;\u0027 name\u003d\u0027stock-in-qty\u0027 value\u003d\u0027\"+ $stockQty.val() +\"\u0027 /\u003e\",  //qty\n            currentQty,\n            supplier,             //supplier\n            \"\u003cspan name\u003d\u0027stock-item-delete\u0027\u003e\u003ci class\u003d\u0027fa fa-times fa-lg m5\u0027\u003e\u003c/span\u003e\"         //delete\n          ]);       \n\n          //Add delete event\n          bindDeleteEvent(oTable, \u0027stock-item-delete\u0027);\n        }\n        \n\n        //clear this input\n        $stockPrice.val(\"\");\n        $stockQty.val(\"\");\n      }\n    });\n    \n  }\n  \n  function addStockOutItem() {\n    log(\"Entering addStockOutItem...\");\n\n    //collecting the inputed items and quantity\n    $(\"#stock-tabs div.item-select-cell\").each(function() {\n      var $currentItemCell \u003d $(this);   //div\n      var $stockQty \u003d $currentItemCell.find(\"input[name\u003d\u0027stockOutQty\u0027]\").first();\n      //displayAll(\"stockQty\", $stockQty);\n      //log(\"currentItemCell:\" + $currentItemCell.html());\n      \n      if ($stockQty.val() !\u003d \"\") {\n\n        log(\"check the item-select-cell...\" + $stockQty.val());\n        //get itemType;\n        var itemType \u003d $currentItemCell.find(\"input[name\u003d\u0027itemType\u0027]\").first().val();\n        var itemName \u003d $currentItemCell.find(\"td[name\u003d\u0027itemName\u0027]\").first().text();\n        var currentQty \u003d $currentItemCell.find(\"input[name\u003d\u0027currentQty\u0027]\").first().val();\n        var description \u003d itemName + \"\" + $currentItemCell.find(\"td[name\u003d\u0027package\u0027]\").first().text();\n        var supplier \u003d $currentItemCell.find(\"input[name\u003d\u0027supplier\u0027]\").first().val();\n        var itemId \u003d $currentItemCell.find(\"input[name\u003d\u0027itemId\u0027]\").first().val();   //record_id\n        var cust_itemId \u003d $currentItemCell.find(\"input[name\u003d\u0027cus_itemId\u0027]\").first().val();  //itemID\n        \n        // if there is already an existed, add the quantity up\n        var hit \u003d false;\n        $(\"#stock-item-list tbody tr\").each(function () {\n          var $fields \u003d $(this).children(); // All \u0027td\u0027\n          log(\"The fields html content is:\" + $(this).html());\n          \n          var currentItemId \u003d $fields.eq(0).text();\n          log(\"currentItemId:\" + currentItemId + \" itemId:\" + itemId);\n          \n          if (currentItemId \u003d\u003d itemId) {\n            //sum up the quantity of the same item\n            var newVal \u003d parseInt($stockQty.val()) + parseInt($fields.eq(5).children().first().val());\n            log(\"The new value is \" +  newVal);\n            \n            if (isNaN(newVal)) {\n              alert(\"Please input a number in \u003c\u003c\" + itemName + \"\u003e\u003e\");\n              throw new Error(\"INPUT ERROR\");\n            }\n            //Set new stock in qty\n            $fields.eq(5).children().first().val(newVal);  // select the input value\n            \n            hit \u003d true;\n          }\n        });\n        \n        // if there is no hit\n        if (hit \u003d\u003d false) {\n          var oTable \u003d $(\"#stock-item-list\").dataTable();\n          oTable.fnAddData([\n            itemId,             //record_id\n            itemType,           //type\n            cust_itemId,        //itemID\n            description,        //description\n            MESSAGETXT.stockout.name,\n            \"0\",\n            \"\u003cinput type\u003d\u0027text\u0027 style\u003d\u0027width:35px;\u0027 name\u003d\u0027stock-out-qty\u0027 value\u003d\u0027\"+ $stockQty.val() +\"\u0027 /\u003e\",  //qty\n            currentQty,\n            supplier,             //supplier\n            \"\u003cspan name\u003d\u0027stock-item-delete\u0027\u003e\u003ci class\u003d\u0027fa fa-times fa-lg m5\u0027\u003e\u003c/span\u003e\"         //delete\n          ]);      \n          oTable.fnSetColumnVis(5, false);\n          \n          //Add delete event\n          bindDeleteEvent(oTable, \u0027stock-item-delete\u0027);\n        }\n        \n        //clear this input\n        $stockQty.val(\"\");\n      }\n    });\n    \n  }\n  \n  function bindDeleteEvent(oTable, spanName) {\n    \n    //Initialize Delete Button\n    $(\"span[name\u003d\u0027\"+spanName+\"\u0027]\").unbind(\"click\").bind(\"click\", function(event){\n      var target_row \u003d $(this).closest(\"tr\").get(0);\n      log(\"target_row\u003d \" + target_row);\n      var aPos \u003d oTable.fnGetPosition(target_row); \n      log(\"delete stock list, aPos\u003d\" + aPos);\n      oTable.fnDeleteRow(aPos);\n    }); \n  }\n  \n  function submitSaveStock() {\n    log(\"Entering submitSaveStock...\" + MESSAGETXT);\n    \n    //collect all the Stock Items\n    var paras \u003d new Array();\n    $(\"#stock-item-list tbody tr\").each(function(){  // for each ROW(\u003ctr\u003e) of sbitem\n      var idx \u003d 0;\n      var para \u003d {};\n      $(this).children().each(function() {\n        if (idx \u003d\u003d 0) {para.itemid \u003d $(this).text();}\n        if (idx \u003d\u003d 1) {para.type \u003d $(this).text();}\n        if (idx \u003d\u003d 2) {para.cust_itemid \u003d $(this).text();}\n        if (idx \u003d\u003d 3) {para.desc \u003d $(this).text();}\n        if (idx \u003d\u003d 4) {para.direction \u003d $(this).text();}\n\n        //Stock in has one more column [stock in price] than stock out view.\n        if (para.direction \u003d\u003d MESSAGETXT.stockin.name) {\n          if (idx \u003d\u003d 5) {\n            para.stockinprice \u003d $(this).children().first().val();\n          }\n          if (idx \u003d\u003d 6) {\n            para.qty \u003d $(this).children().first().val();\n          }\n          if (idx \u003d\u003d 7) {\n            para.currentStock \u003d $(this).text();\n          }\n          if (idx \u003d\u003d 8) {\n            para.supplier \u003d $(this).text();\n          }\n        }else{ //When stock out\n          para.stockinprice \u003d 0;\n          if (idx \u003d\u003d 5) {\n            para.qty \u003d $(this).children().first().val();\n          }\n          if (idx \u003d\u003d 6) {\n            para.currentStock \u003d $(this).text();\n          }\n          if (idx \u003d\u003d 7) {\n            para.supplier \u003d $(this).text();\n          }\n        }\n        idx++;\n      });\n      paras.push(para);\n    });\n\n    //check all input\n    if (!checkStockInput(paras)) return false;\n    \n    //save the stock\n    google.script.run.withSuccessHandler(onSuccessSaveStock).processSaveStock(paras);    \n  \n  }\n  \n\n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CALL BACK FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  function onSuccessStockList(res) {\n    log(\"Entering onSuccessStockList...\");\n    logShowObject(res.itemTypes);\n    \n    showInfoDialog(\"\", false);\n\n    var selItemTypes \u003d $(\"#stock-item-type\");\n    selItemTypes.empty();\n    // set the initial value\n    selItemTypes.append(\n      $(\"\u003coption /\u003e\", {\n        \"value\"   : -1,\n        \"text\"    : \"\"\n      }));    \n    for (var itemType in res.itemTypes){\n      $(\"\u003coption /\u003e\", {\n      \"value\"   : itemType,\n      \"text\"    : res.itemTypes[itemType]\n      }).appendTo(selItemTypes);\n    }\n  }\n  \n  function onSuccessPrepareStock(res) {\n    log(\"Entering onSuccessPrepareStock...\");\n    \n    showInfoDialog(\"\", false);\n\n    //Check if there already has some items put into/take out of stock (but not confirm)\n    var oTable \u003d $(\"#stock-item-list\").dataTable();\n    var nNodes \u003d oTable.fnGetNodes( );\n    \n    log(\"There have been \"+nNodes.length+\" rows in the table:\");\n    \n    if (nNodes.length \u003e 0) {\n      var msg \u003d res.stock.info01;\n      confirmDialog(msg)   //if Cancel, then return, otherwise continue\n      .done(function(){\n        changeStockMenu(res.content);\n        //after stock in or out, has to display the latest status of item in Order/Stock item cells\n        //refreshStockItems();\n      })\n      .fail(function(){   \n        return;\n      });\n    } else {\n      //Timing: the first time entering the screen, or delete all the items in the list\n      prepareStockItemCells(res)\n      changeStockMenu(res);\n    }\n    \n    //log(\"Re-rendering the stock tabs...\");\n    //$(\u0027#stock-tabs\u0027).tabs();\n  }  \n  \n  function onSuccessQeuryStock(results){\n    log(\"Entering onSuccessQeuryStock...\");\n\n    var oTable \u003d $(\"#stock-list\").dataTable();\n    oTable.fnClearTable();\n    // result is an array of queried items\n    for (var i \u003d 0; i \u003c results.length; i++) {\n      var item \u003d results[i];\n      oTable.fnAddData([\n        item.itemType,    \n        item.description, \n        fmoney(item.stockPrice,2),       \n        item.stockQty,\n        item.safetyQty,            \n        item.necessaryQty\n      ]);       \n    }\n  }\n  \n  function onSuccessSaveStock(results) {\n    log(\"Entering onSuccessSaveStock...\");\n    \n    //clear sb item list\n    $(\"#stock-item-list\").dataTable().fnClearTable();\n    \n    //return to home screen\n    var msg \u003d \"Stock information has been saved successfully\";\n    displayHomePage(msg);\n    \n  }\n  \n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d OTHER HANDLING FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  function prepareStockItemCells(res) {\n    log(\"Entering prepareStockItemCells...\");\n    var itemTypes \u003d res.itemTypes;\n    var items \u003d res.items;\n    var stockTabs \u003d $(\u0027#stock-tabs\u0027);\n    \n    // reset the stock tabs to reflect the newest item information\n    if ($(\"#stock-tabs\u003eul\").length \u003e\u003d 1) {\n      stockTabs.tabs(\u0027destroy\u0027);\n      stockTabs.empty();\n    }\n    log(\"Clear the stock tab...:\" + stockTabs.html());\n    \n    // setting menu tabs\n    var menuList \u003d $(\"\u003cul\u003e\u003c/ul\u003e\");\n    menuList.empty();\n    for (var i \u003d 0; i \u003c items.length; i++) {\n      var itemType \u003d items[i].itemType;\n      menuList.append(\"\u003cli\u003e\u003ca href\u003d\u0027#stock-tabs-\" + itemType + \"\u0027\u003e\"+ itemTypes[itemType] +\"\u003c/a\u003e\u003c/li\u003e\");\n    }\n    menuList.appendTo(stockTabs);\n    log(\"finish creating menuList in stock form...\");\n    \n    // setting select area\n    for (var i\u003d0;i\u003citems.length;i++){\n      var itemType \u003d items[i].itemType;\n      // create a div for each item type\n      var itDiv \u003d $(\"\u003cdiv style\u003d\u0027overflow:hidden\u0027\u003e\u003c/div\u003e\");\n      itDiv.attr(\"id\", \"stock-tabs-\"+itemType+\"\");  // set unique id by using itemType\n      itDiv.appendTo(stockTabs);\n      \n      var content \u003d items[i].content;\n      for (var j\u003d0;j\u003ccontent.length;j++){\n        var imDiv \u003d $(\"\u003cdiv\u003e\u003c/div\u003e\");   // div for each item\n        imDiv.addClass(\"fl m5 item-select-cell\");\n        imDiv.appendTo(itDiv);\n        //log(\"imDiv has been appended...\");\n        \n        //set display content of each select cell\n         var cellTable \u003d $(\"\u003ctable\u003e\u003c/table\u003e\");\n         \n         // the first row \u003d\u003d\u003e item name and quantity\n         var tr1 \u003d $(\"\u003ctr style\u003d\u0027height:32px\u0027\u003e\u003c/tr\u003e\");\n         var td11 \u003d $(\"\u003ctd name\u003d\u0027itemName\u0027 class\u003d\u0027cell-td-1\u0027 title\u003d\u0027\"+content[j].name+\"\u0027\u003e\"+content[j].nameDisp+\"\u003c/td\u003e\");\n         td11.appendTo(tr1);\n         var td12 \u003d $(\"\u003ctd  class\u003d\u0027cell-td-2\u0027\u003eStock\u003cbr /\u003e\"+content[j].stockQty+\"/\"+content[j].safetyQty+\"\u003c/td\u003e\");\n           // create hidden variables\n           var hidden1 \u003d $(\"\u003cinput type\u003d\u0027hidden\u0027 name\u003d\u0027itemType\u0027 value\u003d\u0027\"+itemTypes[itemType]+\"\u0027 /\u003e\");\n           hidden1.appendTo(td12);\n           var hidden2 \u003d $(\"\u003cinput type\u003d\u0027hidden\u0027 name\u003d\u0027itemId\u0027 value\u003d\u0027\"+content[j].record_id+\"\u0027 /\u003e\");\n           hidden2.appendTo(td12);\n           var hidden3 \u003d $(\"\u003cinput type\u003d\u0027hidden\u0027 name\u003d\u0027cus_itemId\u0027 value\u003d\u0027\"+content[j].itemID+\"\u0027 /\u003e\");\n           hidden3.appendTo(td12);\n           var hidden4 \u003d $(\"\u003cinput type\u003d\u0027hidden\u0027 name\u003d\u0027currentPrice\u0027 value\u003d\u0027\"+content[j].stockPrice+\"\u0027 /\u003e\");\n           hidden4.appendTo(td12);\n           var hidden5 \u003d $(\"\u003cinput type\u003d\u0027hidden\u0027 name\u003d\u0027currentQty\u0027 value\u003d\u0027\"+content[j].stockQty+\"\u0027 /\u003e\");\n           hidden5.appendTo(td12);\n           var hidden6 \u003d $(\"\u003cinput type\u003d\u0027hidden\u0027 name\u003d\u0027supplier\u0027 value\u003d\u0027\"+content[j].supplier+\"\u0027 /\u003e\");\n           hidden6.appendTo(td12);\n         td12.appendTo(tr1);\n         tr1.appendTo(cellTable);\n         \n         // the second row \u003d\u003d\u003e stockin quantity (only for stock in)\n         var tr2 \u003d $(\"\u003ctr name\u003d\u0027tr-stock-in-item\u0027 style\u003d\u0027height:32px\u0027\u003e\u003c/tr\u003e\");\n         var td21 \u003d $(\"\u003ctd name\u003d\u0027package\u0027 class\u003d\u0027cell-td-1\u0027\u003e\"+content[j].package+\"\u003c/td\u003e\");\n         td21.appendTo(tr2);\n         var td22 \u003d $(\"\u003ctd class\u003d\u0027cell-td-2\u0027\u003eQty\u003cbr /\u003e\u003cinput name\u003d\u0027stockInQty\u0027 type\u003d\u0027text\u0027 style\u003d\u0027width:35px\u0027 /\u003e\u003c/td\u003e\");\n         td22.appendTo(tr2);\n         tr2.appendTo(cellTable);\n         \n         // the third row \u003d\u003d\u003e stockout quantity (only for stock in)\n         var tr3 \u003d $(\"\u003ctr name\u003d\u0027tr-stock-in-item\u0027 style\u003d\u0027height:32px\u0027\u003e\u003c/tr\u003e\");\n         var td31 \u003d $(\"\u003ctd name\u003d\u0027stockPrice\u0027 class\u003d\u0027cell-td-1\u0027\u003estock price\u003cbr /\u003e£\"+content[j].stockPrice+\"\u003c/td\u003e\");\n         td31.appendTo(tr3);\n         var td32 \u003d $(\"\u003ctd class\u003d\u0027cell-td-2\u0027\u003ein price\u003cbr /\u003e\u003cinput name\u003d\u0027stockInPrice\u0027 type\u003d\u0027text\u0027 style\u003d\u0027width:35px\u0027 /\u003e\u003c/td\u003e\");\n         td32.appendTo(tr3);\n         tr3.appendTo(cellTable);\n         \n         // the second (displayed as the second row when stock out is chosen) row \n         // \u003d\u003d\u003e stockout quantity (only for stock out)\n         var tr4 \u003d $(\"\u003ctr name\u003d\u0027tr-stock-out-item\u0027 style\u003d\u0027height:32px\u0027\u003e\u003c/tr\u003e\");\n         var td41 \u003d $(\"\u003ctd name\u003d\u0027package\u0027 class\u003d\u0027cell-td-1\u0027\u003e\"+content[j].package+\"\u003c/td\u003e\");\n         td41.appendTo(tr4);\n         var td42 \u003d $(\"\u003ctd class\u003d\u0027cell-td-2\u0027\u003eQty\u003cbr /\u003e\u003cinput name\u003d\u0027stockOutQty\u0027 type\u003d\u0027text\u0027 style\u003d\u0027width:35px\u0027 /\u003e\u003c/td\u003e\");\n         td42.appendTo(tr4);\n         tr4.appendTo(cellTable);\n         \n         cellTable.appendTo(imDiv);\n      }\n    }   \n    stockTabs.append(\"\u003cdiv style\u003d\u0027display: block;height: 0px;clear: both;visibility: hidden;\u0027\u003e\u003c/div\u003e\"); // \u003c!-- hack for IE6 --\u003e\n    log(\"re-rendering the stock tab...\");\n    stockTabs.tabs();\n  }\n  \n  function changeStockMenu(res) {\n    log(\"Entering changeStockMenu...:\" + res.content);\n    \n    var oTable \u003d $(\"#stock-item-list\").dataTable();\n    //OK button is pressed, so\n    oTable.fnClearTable();\n    \n    //Setting different routes\n    var titleHtml;\n    var $stockInItem \u003d $(\"tr[name\u003d\u0027tr-stock-in-item\u0027]\");\n    var $stockOutItem \u003d $(\"tr[name\u003d\u0027tr-stock-out-item\u0027]\");\n    var $btnStockIn \u003d $(\"#stock-in-item\");\n    var $btnStockOut \u003d $(\"#stock-out-item\");\n    var $stockMessage \u003d $(\"#stock-message\");\n    var iCol \u003d 5; // the index of StockInPrice column\n\n\n    if (res.content \u003d\u003d \"#stockin\") {\n      titleHtml \u003d \"\u003ch2\u003e\"+res.rs.stockin.formTitle+\"\u003c/h2\u003e\";\n      $stockInItem.removeClass(\"none\");\n      $stockOutItem.addClass(\"none\");\n      $btnStockIn.removeClass(\"none\");\n      $btnStockOut.addClass(\"none\");\n      $stockMessage.text(res.rs.stockin.info01);\n      //reconfigure the item list table\n      oTable.fnSetColumnVis(iCol, true);\n    }else{\n      titleHtml \u003d \"\u003ch2\u003e\"+res.rs.stockout.formTitle+\"\u003c/h2\u003e\";\n      $stockInItem.addClass(\"none\");\n      $stockOutItem.removeClass(\"none\");\n      $btnStockIn.addClass(\"none\");\n      $btnStockOut.removeClass(\"none\");\n      $stockMessage.text(res.rs.stockout.info01);\n      oTable.fnSetColumnVis(iCol, false);\n    }\n    $(\"#stock-form-title\").html(titleHtml);  \n    \n    //$(\u0027#stock-tabs\u0027).tabs();\n  }\n  \n  function refreshStockItems() {\n    log(\"Now preparing to refresh the stock items (stock price and quantity)...\");\n    //FIXME: \n    //google.script.run.withSuccessHandler(onSuccessRefreshStockItems).processRefreshStockItems();\n  }\n  \n  //Input Check\n  function checkStockInput(paras) {\n  \n    log(\"Entering checkStockInput...\");\n    logShowObject(paras);\n    \n    var errmsg \u003d \"\";\n    for (var idx\u003d0;idx\u003cparas.length;idx++) {\n      var para \u003d paras[idx];\n      //Check price\n      if (isNaN(para.stockinprice)) errmsg +\u003d \"The price of item [\"+para.itemid+\"] should be a number but it is [\" +para.stockinprice+ \"]\u003cbr /\u003e\";\n      //Check quantity\n      if (isNaN(para.qty)) errmsg +\u003d \"The quantity of item [\"+para.itemid+\"] should be a number but it is [\" +para.qty+ \"]\u003cbr /\u003e\";\n      \n      if (!isNaN(para.qty)) {\n      \n        //Check whether there is sufficient stock\n        if (para.direction \u003d\u003d \"OUT\") {\n          if (parseInt(para.qty) \u003e parseInt(para.currentStock))\n            errmsg +\u003d \"There is not enough stock of item [\"+para.itemID+\"] \u003cbr /\u003e\";\n        }\n      }\n    }\n    \n    if (errmsg !\u003d \"\") {\n      log(errmsg);\n      showErrorDialog(errmsg);\n      return false;\n    }\n    \n    return true;\n  }\n  //\n/*  function onSuccessRefreshStockItems(results) {\n    log(\"Entering onSuccessSaveStock...\");\n  }*/\n  --\u003e\n  \u003c/script\u003e\n"},{"id":"ac20408c-980c-44c7-a8c5-a55b8372a213","name":"order-ui-js","type":"html","source":"\u003c!-- Part of main-page.html --\u003e\n  \u003cscript language\u003d\"javascript\" type\u003d\"text/jscript\"\u003e\n  \u003c!-- \n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EVENT FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  //-----------------Order Event ---------------\n  function addOrderSBItems() {\n    log(\"Entering addOrderSBItems...\");\n\n    //collecting the inputed items and quantity\n    var sbitems \u003d new Array();\n    var oTable \u003d $(\"#order-sbitem-list\").dataTable();\n\n     $(\"#order-tabs div.item-select-cell\").each(function() {\n      var $currentItemCell \u003d $(this);   //div\n      var $orderQty \u003d $currentItemCell.find(\"input[name\u003d\u0027orderQty\u0027]\").first();\n      log(\"orderQty...\" + $orderQty.val());\n      \n      if ($orderQty.val() !\u003d \"\") {\n      \n\n        //get item information;\n        var itemType \u003d $currentItemCell.find(\"input[name\u003d\u0027itemType\u0027]\").first().val();\n        var itemName \u003d $currentItemCell.find(\"td[name\u003d\u0027itemName\u0027]\").first().text();\n        //var description \u003d $currentItemCell.find(\"td[name\u003d\u0027description\u0027]\").first().text();\n        var description \u003d $currentItemCell.find(\"td[name\u003d\u0027description\u0027]\").first().attr(\"title\");\n        var supplier \u003d $currentItemCell.find(\"input[name\u003d\u0027supplier\u0027]\").first().val();\n        var itemId \u003d $currentItemCell.find(\"input[name\u003d\u0027itemId\u0027]\").first().val();  //should be record_id\n        var cus_itemId \u003d $currentItemCell.find(\"input[name\u003d\u0027cus_itemId\u0027]\").first().val();  //should be itemID\n\n        log(\"check the item-select-cell...\" + $orderQty.val());\n        if (isNaN($orderQty.val())) {\n          showErrorDialog(String.format(MESSAGETXT.errormsg.msg01,itemName));\n          throw new Error(\"[ERROR][Order]-The input value of \" + itemName + \" should be number, but is \" + $orderQty.val());\n        }\n\n        log(\"[Order]input data are:[\" + itemType + \"][\" + itemName + \"][\" + description + \"][record_id:\" + itemId + \"]\" );\n        \n        // if there is already an existed, add the quantity up\n        var hit \u003d false;\n        $(\"#order-sbitem-list tbody tr\").each(function () {\n          var $fields \u003d $(this).children(); // All \u0027td\u0027\n          log(\"[Order]fields:[\" + $fields.html() + \"]\" );\n\n          var currentItemId \u003d $fields.eq(1).text();    // 0\u003ditemType, 1\u003ditemId(record_id), 2\u003dcust_itemId(from upload file), etc.,\n          log(\"[Order]currentItemId:[\" + currentItemId + \"] and itemId:[\" + itemId + \"]\" );\n\n          if (currentItemId \u003d\u003d itemId) {\n            //sum up the quantity of the same item\n            //var newVal \u003d parseInt($orderQty.val()) + parseInt($fields.eq(3).children().first().val()); \n            var newVal \u003d parseInt($orderQty.val()) + parseInt($fields.eq(4).children().first().val()); //3-\u003e4, for adding ID\n            log(\"[Order]the input value is \" + newVal + \" while item name is \"+ itemName);\n\n            if (isNaN(newVal)) {\n              showErrorDialog(\"Please input a number in \u0027\" + itemName + \"\u0027 quantity\");\n              throw new Error(\"[ERROR][Order]-The input value of \" + itemName + \" should be number, but is \" + newVal);\n            }\n            //$fields.eq(3).children().first().val(newVal);  // select the input value\n            $fields.eq(4).children().first().val(newVal);  // 3-\u003e4 for the same reason\n            hit \u003d true;\n          }\n        });\n        \n        // if there is no hit\n        if (hit \u003d\u003d false) {\n          oTable.fnAddData([\n            itemType,          //type\n            itemId,            //record_id\n            cus_itemId,        //item id (not shown)\n            description,          //description\n            \"\u003cinput type\u003d\u0027text\u0027 style\u003d\u0027width:35px;\u0027 name\u003d\u0027sbitem-qty\u0027 value\u003d\u0027\"+ $orderQty.val() +\"\u0027 /\u003e\",  //qty\n            supplier,             //supplier\n            \"\u003cspan name\u003d\u0027order-sbitem-delete\u0027\u003e\u003ci class\u003d\u0027fa fa-times fa-lg m5\u0027\u003e\u003c/i\u003e\u003c/span\u003e\"         //delete\n          ]);       \n        }\n        \n        //Initialize Delete Button\n        $(\"span[name\u003d\u0027order-sbitem-delete\u0027]\").unbind(\"click\").bind(\"click\", function(event){\n          //displayAll(\u0027event\u0027,event);\n          var target_row \u003d $(this).closest(\"tr\").get(0);\n          log(\"target_row\u003d \" + target_row);\n          var aPos \u003d oTable.fnGetPosition(target_row); \n          log(\"delete sb list, aPos\u003d \" + aPos);\n          oTable.fnDeleteRow(aPos);\n        }); \n    \n        //clear this input\n        $orderQty.val(\"\");\n      }\n    });\n    \n    //display the submit button\n    $(\"#order-submit\").removeClass(\"none\");\n\n  }\n  \n  function submitSaveOrder() {\n    log(\"Entering submitSaveOrder...\");\n    //check all input\n    //if (!checkAllInput()) return false;\n    \n    //collect all the SBItems\n    var para \u003d new Array();\n    var idx;\n    \n    $(\"#order-sbitem-list tbody tr\").each(function(){  // for each ROW(\u003ctr\u003e) of sbitem\n      \n      idx \u003d 0;\n      var item \u003d {};\n      \n      $(this).children().each(function() {\n        //TYPE,ITEMID,DESCRIPTION,QTY,SUPPLIER,DELETE  // has already add 1 for adding ID\n        if (idx \u003d\u003d 0) {item.type \u003d $(this).text();}\n        if (idx \u003d\u003d 1) {item.id \u003d $(this).text();}\n        if (idx \u003d\u003d 2) {item.itemID \u003d $(this).text();}\n        if (idx \u003d\u003d 3) {item.name \u003d $(this).text();}\n        \n        if (idx \u003d\u003d 4) {\n          item.qty \u003d $(this).children().first().val();\n        }\n        if (idx \u003d\u003d 5) {item.supplier \u003d $(this).text();}\n        idx++;\n      });\n      \n      log(\"check the item.qty:\" + item.qty);\n      if (item.qty \u003d\u003d \"\" || isNaN(item.qty)) {\n        showErrorDialog(String.format(MESSAGETXT.errormsg.msg01,itemName));\n        throw new Error(\"[ERROR][Order]-The input value of \" + item.name + \" should be number, but is \" + item.qty);\n      }\n      \n      para.push(item);\n      log(\"idx:\" + idx);  //When no data, idx should be 1?\n      \n    });\n\n    if (idx \u003d\u003d1 \u0026\u0026 para.length \u003d\u003d 1) {\n      showErrorDialog(MESSAGETXT.errormsg.msg02);  //Only that row: \u0027No data available in table\u0027\n    }else{\n      google.script.run.withSuccessHandler(onSuccessPlaceOrder).processPlaceOrder(para);\n    }\n  \n  }\n  \n  function submitSaveOrderLog() {\n    log(\"Entering submitSaveOrderLog...\");\n    \n    var details \u003d new Array();\n    var hit \u003d false;\n    \n    //Collect the order id\n    var orderID \u003d $(\"#orderlog-order-id\").text();\n    \n    $(\"#order-log-list tbody tr\").each(function(){  // for each ROW(\u003ctr\u003e) of sbitem\n    //check all input\n      //log(\"this html is:\" + $(this).find(\"input[name\u003d\u0027od-item-qty\u0027]\"));\n      \n      var itemID \u003d $(this).find(\"input[name\u003d\u0027od-item-id\u0027]\").first().val();\n      var qty \u003d $(this).find(\"input[name\u003d\u0027od-item-qty\u0027]\").first().val();\n      log(\u0027OrderLog#qty:\u0027 + qty);\n      \n      if (qty \u003d\u003d undefined) return; // {NOT *continue*} //No data or order is delivered, so no input text thus \u0027undefined\u0027. \n      \n      hit \u003d true;  //At least one detail left\n      \n      if (qty \u003d\u003d \"\" || isNaN(qty)) {\n        showErrorDialog(\"Please input a number in item\u0027s quantity\");\n        throw new Error(\"[ERROR][Order]-The input value of item should be number, but is \" + qty);\n      }\n      \n      log(\"detail[\"+ itemID +\"]\u0027s qty is:\" + qty);\n      \n      var detail \u003d {itemID:itemID, itemQty:qty};\n      details.push(detail);\n      \n    });\n    \n   log(\"OrderLog#hit:\" + hit);\n    \n   if (!hit) {\n      var result \u003d confirmDialog(function() {\n        log(\"Will continue to next step!\");\n      },\n      \"This order will be deleted. \");  //Only that row: \u0027No data available in table\u0027\n      log(\"result:\"+result);\n    }else{\n      log(\"Going to call processUpdateOrder:\" + orderID + \":\" + details);\n      google.script.run.withSuccessHandler(onSuccessUpdateOrder).processUpdateOrder(orderID, details);\n    } \n   \n  }\n  \n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CALL BACK FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  function onSuccessPrepareOrder(res) {\n    log(\"Entering onSuccessPrepareOrder...\");\n\n    showInfoDialog(\"\", false);\n\n    $(\"#order-sbitem-list\").dataTable().fnClearTable();\n    $(\"#order-submit\").addClass(\"none\");\n    \n    var itemTypes \u003d res.itemTypes;\n    var items \u003d res.items;\n    var orderTabs \u003d $(\u0027#order-tabs\u0027);\n    \n    // reset the tabs\n    if ($(\"#order-tabs\u003eul\").length \u003e\u003d 1) {\n       orderTabs.tabs(\u0027destroy\u0027);\n       orderTabs.empty();\n    }\n    log(\"Clear the order tab...:\" + orderTabs.html());\n    \n    // setting tabs\n    var menuList \u003d $(\"\u003cul\u003e\u003c/ul\u003e\");\n    for (var i \u003d 0; i \u003c items.length; i++) {\n      var itemType \u003d items[i].itemType;\n      menuList.append(\"\u003cli\u003e\u003ca href\u003d\u0027#order-tabs-\" + itemType + \"\u0027\u003e\"+ itemTypes[itemType] +\"\u003c/a\u003e\u003c/li\u003e\");\n    }\n    menuList.appendTo(orderTabs);\n    log(\"finish creating menuList in order form...\");\n    \n    // setting select area\n    for (var i\u003d0;i\u003citems.length;i++){\n      \n      var itemType \u003d items[i].itemType;\n      //var itemTypeCode \u003d items[i].itemTypeCode;  \u003c\u003d\u003d seems no use\n      \n      // create a div for each item type\n      var itDiv \u003d $(\"\u003cdiv style\u003d\u0027overflow:hidden\u0027\u003e\u003c/div\u003e\");\n      itDiv.attr(\"id\", \"order-tabs-\"+itemType+\"\");  // set unique id by using itemType\n      itDiv.appendTo(orderTabs);\n\n      var content \u003d items[i].content;\n      // create a select cell for each item and put it in item type div\n      for (var j\u003d0;j\u003ccontent.length;j++){\n        var imDiv \u003d $(\"\u003cdiv\u003e\u003c/div\u003e\");\n        imDiv.addClass(\"fl m5 item-select-cell\");\n        imDiv.appendTo(itDiv);\n        //log(\"imDiv has been appended...\");\n        \n        //set display content of each select cell\n         var cellTable \u003d $(\"\u003ctable\u003e\u003c/table\u003e\");\n         \n         // the first row\n         var tr1 \u003d $(\"\u003ctr style\u003d\u0027height:32px\u0027\u003e\u003c/tr\u003e\");\n         var td11 \u003d $(\"\u003ctd name\u003d\u0027itemName\u0027 class\u003d\u0027cell-td-1\u0027 title\u003d\u0027\"+content[j].name+\"\u0027\u003e\"+content[j].nameDisp+\"\u003c/td\u003e\");\n         td11.appendTo(tr1);\n         var td12 \u003d $(\"\u003ctd class\u003d\u0027cell-td-2\u0027\u003eQty\u003c/td\u003e\");\n           // create hidden variables\n           var hidden1 \u003d $(\"\u003cinput type\u003d\u0027hidden\u0027 name\u003d\u0027itemType\u0027 value\u003d\u0027\"+itemTypes[itemType]+\"\u0027 /\u003e\");\n           hidden1.appendTo(td12);\n           var hidden2 \u003d $(\"\u003cinput type\u003d\u0027hidden\u0027 name\u003d\u0027itemId\u0027 value\u003d\u0027\"+content[j].record_id+\"\u0027 /\u003e\");\n           hidden2.appendTo(td12);\n           var hidden3 \u003d $(\"\u003cinput type\u003d\u0027hidden\u0027 name\u003d\u0027cus_itemId\u0027 value\u003d\u0027\"+content[j].itemID+\"\u0027 /\u003e\");\n           hidden3.appendTo(td12);\n           var hidden4 \u003d $(\"\u003cinput type\u003d\u0027hidden\u0027 name\u003d\u0027supplier\u0027 value\u003d\u0027\"+content[j].supplier+\"\u0027 /\u003e\");\n           hidden4.appendTo(td12);\n         td12.appendTo(tr1);\n         tr1.appendTo(cellTable);\n         \n         // the second row\n         var tr2 \u003d $(\"\u003ctr style\u003d\u0027height:32px\u0027\u003e\u003c/tr\u003e\");\n         var td21 \u003d $(\"\u003ctd name\u003d\u0027description\u0027 class\u003d\u0027cell-td-1\u0027 title\u003d\u0027\"+content[j].description+\"\u0027\u003e\"+content[j].package+\"\u003c/td\u003e\");\n         td21.appendTo(tr2);\n         var td22 \u003d $(\"\u003ctd class\u003d\u0027cell-td-2\u0027\u003e\u003cinput name\u003d\u0027orderQty\u0027 type\u003d\u0027text\u0027 style\u003d\u0027width:35px\u0027 /\u003e\u003c/td\u003e\");\n         td22.appendTo(tr2);\n         tr2.appendTo(cellTable);\n         \n         cellTable.appendTo(imDiv);\n      }\n    }\n    orderTabs.append(\"\u003cdiv style\u003d\u0027display: block;height: 0px;clear: both;visibility: hidden;\u0027\u003e\u003c/div\u003e\"); // \u003c!-- hack for IE6 --\u003e\n\n    log(\"\u003d\u003d refresh the order tab...:\" + $(\"#order\").html());\n\n    orderTabs.tabs();  // set the style of order tabs\n\n  }\n  function onSuccessOrderLog(order) {\n    log(\"Entering onSuccessOrderLog...\");\n    var oTable \u003d $(\"#order-log-list\").dataTable();\n    oTable.fnClearTable();\n    \n    //Setting order information\n    $(\"#orderlog-order-id\").text(order.record_id);\n    $(\"#orderlog-order-branch\").text(order.branchName);\n    $(\"#orderlog-order-placedate\").text(order.placeDate);\n    $(\"#orderlog-order-status\").text(order.statusText);\n\n    //Setting order detail information\n    var details \u003d order.details;\n    // result is an array of queried items\n    for (var i \u003d 0; i \u003c details.length; i++) {\n      var detail \u003d details[i];\n      \n      console.log(\"detail [\"+i+\"]\u0027s type is [\"+detail.itemType+\"]\");\n      if (!detail.valid) continue;  //Only display those not deleted\n      \n      var itemQtyText, deleteText;\n      \n      if (order.statusID \u003d\u003d STATUS.DELIVERED.value) {\n        itemQtyText \u003d detail.itemQty;\n        deleteText \u003d \"\";\n      }else{\n        itemQtyText \u003d \"\u003cinput type\u003d\u0027hidden\u0027 name\u003d\u0027od-item-id\u0027 value\u003d\u0027\"+detail.item.record_id+\"\u0027\u003e\u003cinput type\u003d\u0027text\u0027 style\u003d\u0027width:40px;\u0027 name\u003d\u0027od-item-qty\u0027 value\u003d\u0027\"+ detail.itemQty +\"\u0027 /\u003e\";\n        deleteText \u003d \"\u003cspan name\u003d\u0027od-item-delete\u0027\u003e\u003ci class\u003d\u0027fa fa-times fa-lg m5\u0027\u003e\u003c/i\u003e\u003c/span\u003e\";\n      }\n      \n      oTable.fnAddData([\n        detail.itemType,    \n        detail.description, \n        itemQtyText,  //qty\n        fmoney(detail.itemPrice,2),\n        detail.supplier,            \n        deleteText\n      ]);         \n    }\n    \n    // Initialize Delete Button\n    $(\"span[name\u003d\u0027od-item-delete\u0027]\").bind(\"click\", function(event){\n        //displayAll(\u0027event\u0027,event);\n        var target_row \u003d $(this).closest(\"tr\").get(0);\n        var aPos \u003d oTable.fnGetPosition(target_row); \n        log(\"delete order detail list, aPos\u003d\" + aPos);\n\n        oTable.fnDeleteRow(aPos);\n    }); \n    \n    //close the info dialog\n    showInfoDialog(\"\", false);\n\n  }\n  \n  function onSuccessPlaceOrder(order){\n    log(\"Entering onSuccessPlaceOrder...\");\n    \n    //clear sb item list\n    $(\"#order-sbitem-list\").dataTable().fnClearTable();\n    \n    //return to home screen\n    var msg \u003d \"Order [\" + order.record_id + \"] has been created successfully. An email will be sent to your address\";\n    displayHomePage(msg);\n  }\n  \n  function onSuccessUpdateOrder(order){\n    log(\"Entering onSuccessUpdateOrder...\");\n    \n    //clear order log list\n    $(\"#order-log-list\").dataTable().fnClearTable();\n    \n    //return to home screen\n    var msg \u003d \"Order [\" + order.record_id + \"] has been updated successfully. An email will be sent to your address\";\n    displayHomePage(msg);\n  }  \n  --\u003e\n  \u003c/script\u003e\n"},{"id":"eda6f699-93b9-494d-83e5-5515c3c55620","name":"purchase-ui-js","type":"html","source":"  \u003cscript language\u003d\"javascript\" type\u003d\"text/jscript\"\u003e\n  \u003c!-- \n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EVENT FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  function queryPurchase() {\n    log(\"Entering queryPurchase...\");\n\n    //getting two date\n    var start \u003d $(\"#purchase-query-from\").val();\n    var end \u003d $(\"#purchase-query-to\").val();\n    \n    log(\"start:\" + start + \"  end:\" + end);\n    \n    if (!isValidDate(start)||!isValidDate(end)) {\n      showErrorDialog(\"Please input a valid date in START and END date\");\n      return;\n    }\n    //check the date input\n    if (start \u003e end) {\n      showErrorDialog(\"The END date should be behind START date.\");\n      return;\n    }    \n    \n    showInfoDialog(MESSAGETXT.common.querymsg001, true);\n\n    google.script.run.withSuccessHandler(onSuccessQeuryPurchase).processQueryPurchase(start, end);\n    \n  }\n  \n  function clearQueryPurchase() {\n    log(\"Entering clearQueryPurchase...\");\n\n    $(\"#purchase-query-from\").val(\"\");\n    $(\"#purchase-query-to\").val(\"\");\n  }\n  \n  function setToPurchased() {\n    log(\"Entering setToPurchased...\");\n    var purchaseID \u003d $(\"#purchase-purchaseid\").val();\n    log(\"purchaseID is \" + purchaseID);\n    google.script.run.withSuccessHandler(onSuccessSetToPurchased).processSetToPurchased(purchaseID);\n    \n  }\n  \n  function displayPurchaseDetail(purchaseID, statusID, form){\n    \n    log(\"Entering displayPurchaseDetail... \" + purchaseID + \":\" + statusID);\n    showInfoDialog(MESSAGETXT.common.querymsg001, true);\n    //log(\"[displayPurchaseDetail]this is:\" + $(form).parent().html());\n    $(form).parent().addClass(\"selected-row\");\n\n    google.script.run.withSuccessHandler(onSuccessDisplayPurchaseDetail).processDisplayPurchaseDetail(purchaseID, statusID);\n    \n  }\n  \n  function updatePurchaseDetail() {\n    log(\"Entering updatePurchaseDetail...\");\n    var purchaseID \u003d $(\"#purchase-log-id\").val();\n\n    log(\"purchaseID is \" + purchaseID);\n    //collect all the SBItems\n    var para \u003d new Array();\n    var idx;\n    \n    $(\"#purchase-detail-list tbody tr\").each(function(){  // for each ROW(\u003ctr\u003e) of sbitem\n      \n      idx \u003d 0;\n      var detail \u003d {};\n      \n      $(this).children().each(function() {\n\n//TYPE NAME SUPPLIER GUIDEDPRICE PURCHASEPRICE STOCKQTY ORDERQTY PURCHASEQTY COMMENT\n        if (idx \u003d\u003d 1) {detail.name \u003d $(this).text();}\n        if (idx \u003d\u003d 4) {detail.purchasePrice \u003d $(this).children().first().val();}\n        if (idx \u003d\u003d 7) { //There are two info here: itemID and purchase quantity\n          detail.itemID \u003d $(this).children().first().val();\n          detail.purchaseQty \u003d $(this).children().eq(1).val();\n        }\n        if (idx \u003d\u003d 8) {detail.comment \u003d $(this).children().first().val();}\n        idx++;\n      });\n      \n      log(\"check the detail.purchasePrice:\" + detail.purchasePrice);\n      if (detail.purchasePrice \u003d\u003d \"\" || isNaN(detail.purchasePrice)) {\n        showErrorDialog(\"Please input a number in \u0027\" + detail.name + \"\u0027 purchase price\");\n        throw new Error(\"[ERROR][Purchase]-The input value of \" + detail.name + \" should be number, but is \" + detail.purchasePrice);\n      }\n      log(\"check the detail.purchaseQty:\" + detail.purchaseQty);\n      if (detail.purchaseQty \u003d\u003d \"\" || isNaN(detail.purchaseQty)) {\n        showErrorDialog(\"Please input a number in \u0027\" + detail.name + \"\u0027 quantity\");\n        throw new Error(\"[ERROR][Purchase]-The input value of \" + detail.name + \" should be number, but is \" + detail.purchaseQty);\n      }\n      \n      para.push(detail);\n      log(\"idx:\" + idx);  //When no data, idx should be 1 (only one row show no data...)\n      \n    });\n\n    if (idx \u003d\u003d1 \u0026\u0026 para.length \u003d\u003d 1) {\n      showOKDialog(\"There is no purhcase detail data to be placed.\");  //Only that row: \u0027No data available in table\u0027\n    }else{\n      google.script.run.withSuccessHandler(onSuccessUpdatePurchaseDetail).processUpdatePurchaseDetail(purchaseID, para);\n    }\n  \n    \n  }\n    \n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CALL BACK FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  //------------------ For Purchase ------------------------------------------------\n  function onSuccessQeuryPurchase(res){\n    log(\"Entering onSuccessQeuryPurchase...\");\n    \n    showInfoDialog(\"\", false);\n\n    var oTable \u003d $(\"#purchase-list\").dataTable();\n    oTable.fnClearTable();\n\n    //prepare purchase details information\n    if (!res || res.results.length \u003d\u003d 0) {\n      showOKDialog(\"There is no order during the period.\");\n      return;\n    }\n    \n    var results \u003d res.results;\n    var purchaseID \u003d res.purchaseID;\n    \n    //set purchase id\n    $(\"#purchase-purchaseid\").val(purchaseID);\n    \n    var hit \u003d false;   // using for check whether all items can be get from stock\n    for (var i \u003d 0; i \u003c results.length; i++) {\n      var result \u003d results[i];\n      log(\"handling result \" + i);\n      \n      oTable.fnAddData([\n        result.itemCode,    \n        result.itemDesc, \n        fmoney(result.guidedPrice,2), \n        result.orderQty,       \n        result.stockQty,\n        result.purchaseQty,            \n        result.supplier\n      ]);       \n      \n      if (result.purchaseQty \u003e 0) {  // if one of items need to be purchased outside\n        hit \u003d true;\n      }\n    }  \n    \n    log(\"purchase list data has been set!\");\n    \n    if (!hit) { //no item needs to be purchased outside\n      $(\"#all-in-stock-msg\").removeClass(\"none\");\n      $(\"#set-to-purchased\").removeClass(\"none\");\n    }\n  }\n  \n  \n  function onSuccessSetToPurchased(res) {\n    log(\"Entering onSuccessSetToPurchased...:\" + res);\n    \n    //clear sb item list\n    $(\"#purchase-list\").dataTable().fnClearTable();\n    \n    //return to home screen\n    var msg \u003d \"Purchase [\" + res + \"] has been updated to [PURCHASED] successfully. Please check \u0027Purchase Log\u0027\";\n    displayHomePage(msg);  \n  }\n\n\n  function onSuccessUpdatePurchaseDetail(res) {\n    log(\"Entering onSuccessUpdatePurchaseDetail...:\");\n    \n    logShowObject(res);\n    \n    //clear all tables\n    $(\"#purchase-log-list\").dataTable().fnClearTable();\n    $(\"#purchase-detail-list\").dataTable().fnClearTable();\n    \n    //return to home screen\n    var msg \u003d \"Purchase [\" + res.record_id + \"] has been updated to [PURCHASED] successfully. Please check \u0027Purchase Log\u0027\";\n    displayHomePage(msg);  \n  }\n  \n  \n  function onSuccessPurchaseLog(results) {\n    log(\"Entering onSuccessPurchaseLog...\");\n\n    var STATUS \u003d JSON.parse($(\"input[name\u003d\u0027status\u0027]\").first().val());\n\n    var oTable \u003d $(\"#purchase-log-list\").dataTable();\n    oTable.fnClearTable();\n    \n    // result is an array of queried items\n    for (var i \u003d 0; i \u003c results.length; i++) {\n      var result \u003d results[i];\n      \n      //var operation \u003d (result.statusID \u003d\u003d STATUS.NEW.value) ? \"Add detail\" : \"Show detail\";\n      var operation \u003d (result.statusID \u003d\u003d STATUS.NEW.value) ? \n          \"\u003ci class\u003d\u0027fa fa-pencil-square-o fa-lg m5\u0027\u003e\u003c/i\u003e\" : \n          \"\u003ci class\u003d\u0027fa fa-search-plus fa-lg m5\u0027\u003e\u003c/i\u003e\";\n      \n      oTable.fnAddData([\n        result.aggTime,    \n        result.startTime, \n        result.endTime,       \n        result.purchasedTime,\n        result.status,\n     //   \"\u003cbutton class\u003d\u0027table-button\u0027 onclick\u003d\u0027displayPurchaseDetail(\"+result.purchaseId+\",\"+result.statusID+\",this.parentNode)\u0027\u003e\"+operation+\"\u003c/button\u003e\"\n        \"\u003cspan onclick\u003d\u0027displayPurchaseDetail(\"+result.purchaseId+\",\"+result.statusID+\",this.parentNode)\u0027\u003e\"+operation+\"\u003c/span\u003e\"\n      ]);         \n    }\n    \n    //rendering the button\n    $(\".table-button\")\n      .button()\n      .click(function( event ) {\n        event.preventDefault();\n      });\n    \n    \n    //close info window\n    showInfoDialog(\"\", false);\n\n  }\n  \n  function onSuccessDisplayPurchaseDetail(res) {\n    console.log(\"Entering onSuccessDisplayPurchaseDetail... \" + res);\n\n    var oTable \u003d $(\"#purchase-detail-list\").dataTable();\n    oTable.fnClearTable();\n    \n    var purchaseID \u003d res.purchaseID;\n    //save purchase id in the page\n    $(\"#purchase-log-id\").val(purchaseID);\n    \n    var details \u003d res.results;\n    \n    // result is an array of queried items\n    for (var i \u003d 0; i \u003c details.length; i++) {\n      var detail \u003d details[i];\n      \n      logShowObject(detail);\n      \n      var pPrice, pQty, comment;\n      \n      if (detail.status \u003d\u003d STATUS.NEW.title ) {\n        pPrice \u003d \"\u003cinput type\u003d\u0027text\u0027 name\u003d\u0027purchase-detail-purchase-price\u0027 class\u003d\u0027table-input input-price\u0027 value\u003d\u0027\"+detail.purchasePrice+\"\u0027 \u003e\";\n        pQty \u003d \"\u003cinput type\u003d\u0027hidden\u0027 name\u003d\u0027od-item-id\u0027 value\u003d\u0027\"+detail.itemID+\"\u0027\u003e\u003cinput type\u003d\u0027text\u0027 name\u003d\u0027purchase-detail-purchase-qty\u0027 class\u003d\u0027table-input input-qty\u0027 value\u003d\u0027\"+detail.purchaseQty+\"\u0027 \u003e\";\n        comment \u003d \"\u003cinput type\u003d\u0027text\u0027 name\u003d\u0027purchase-detail-purchase-comment\u0027 class\u003d\u0027table-input\u0027 value\u003d\u0027\"+detail.comment+\"\u0027 \u003e\";\n        $(\"#update-purchased\").removeClass(\"none\");\n\n      } else {\n        pPrice \u003d detail.purchasePrice;\n        pQty \u003d detail.purchaseQty;\n        comment \u003d detail.comment;\n      }\n      //console.log(\"Purchase Price is: \" + pPrice);\n      \n      oTable.fnAddData([\n        detail.itemType,    \n        detail.itemName, \n        detail.supplier,       \n        fmoney(detail.guidePrice,2),\n        fmoney(pPrice,2),\n        detail.stockQty,\n        detail.orderQty,\n        pQty,\n        comment\n      ]);         \n    }\n    \n    //close info window\n    showInfoDialog(\"\", false);\n\n  }\n  \n  --\u003e\n  \u003c/script\u003e\n"},{"id":"478dfa3c-5f41-469c-9286-aa7422d95d04","name":"management-ui-js","type":"html","source":"  \u003cscript language\u003d\"javascript\" type\u003d\"text/jscript\"\u003e\n  \u003c!-- \n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EVENT FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  //----------------- Item Management Event -----------------------------------\n  function submitQueryItems() {\n    //getting item type\n    var itemType \u003d $(\"#select-item-type\").find(\"option:selected\").val();\n    log(itemType + \" is selected...\");\n    \n    google.script.run.withSuccessHandler(onSuccessQeuryItem).processQueryItem(itemType);\n    \n  }\n\n  function clearQueryItems() {\n    log(\"Entering clearQueryItems...\");\n\n    $(\"#select-item-type\").val(\"\");\n\n    var oTable \u003d $(\"#emmgr-item-list\").dataTable();\n    oTable.fnClearTable();\n\n  }\n  \n  //----------------- Supplier Management Event -----------------------------------\n  function submitQuerySuppliers() {\n    // get the input conditions\n    var params \u003d {};\n    \n    params.suppname \u003d $(\"#suppname\").val();\n    params.suppemail \u003d $(\"#suppemail\").val();\n    params.supptel \u003d $(\"#supptel\").val();\n    params.suppfax \u003d $(\"#suppfax\").val();\n    \n    log(JSON.stringify(params));\n    \n    google.script.run.withSuccessHandler(onSuccessQeurySupplier).processQuerySupplier(params);\n    \n  }\n  \n  function clearQuerySuppliers() {\n    log(\"Entering clearQuerySuppliers...\");\n\n    $(\"#suppname\").val(\"\");\n    $(\"#suppemail\").val(\"\");\n    $(\"#supptel\").val(\"\");\n    $(\"#suppfax\").val(\"\");\n\n    var oTable \u003d $(\"#suppmgr-supplier-list\").dataTable();\n    oTable.fnClearTable();\n\n  }\n  \n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CALL BACK FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  //------------------ For Item Management -------------------------------------\n  function onSuccessItemMgr(res) {\n    log(\"Entering onSuccessItemMgr...\");\n    logShowObject(res.itemTypes);\n    \n    showInfoDialog(\"\", false);\n\n    var selItemTypes \u003d $(\"#select-item-type\");\n    selItemTypes.empty();\n    // set the initial value\n    selItemTypes.append(\n      $(\"\u003coption /\u003e\", {\n        \"value\"   : -1,\n        \"text\"    : \"\"\n      }));\n    // set the current values  \n    for (var itemType in res.itemTypes){\n      $(\"\u003coption /\u003e\", {\n      \"value\"   : itemType,\n      \"text\"    : res.itemTypes[itemType]\n      }).appendTo(selItemTypes);\n    }\n  }\n  \n  function onSuccessItemFile(url) {\n    log(\"Entering onSuccessItemFile...\");\n    $(\"#upload-status\").text(\"File has been uploaded successfully. url:\" + url);\n  }\n  \n  function onSuccessQeuryItem(results){\n    log(\"Entering onSuccessQeuryItem...\");\n\n    logShowObject(results);\n\n    var oTable \u003d $(\"#itemmgr-item-list\").dataTable();\n    oTable.fnClearTable();\n\n    // result is an array of queried items\n    for (var i \u003d 0; i \u003c results.length; i++) {\n      var item \u003d results[i];\n      oTable.fnAddData([\n        item.itemTypeName,    \n        item.code,    \n        item.name,    \n        item.package,    \n        fmoney(item.stockPrice, 2),       \n        item.stockQty,\n        item.safetyQty,            \n        item.stockPlace,            \n        item.supplier        \n      ]);       \n    }\n  } \n  \n  //------------------ For Supplier Management -------------------------------------\n  function onSuccessSupplierFile(url) {\n    log(\"Entering onSuccessSupplierFile...\");\n    $(\"#upload-supplier-status\").text(\"File has been uploaded successfully. url:\" + url);\n  }\n\n  function onSuccessQeurySupplier(results){\n    log(\"Entering onSuccessQeurySupplier...\");\n\n    var oTable \u003d $(\"#suppmgr-supplier-list\").dataTable();\n    oTable.fnClearTable();\n\n    // result is an array of queried items\n    for (var i \u003d 0; i \u003c results.length; i++) {\n      var item \u003d results[i];\n      oTable.fnAddData([\n        item.name,    \n        item.email ? item.email : \"\",    \n        item.address ? item.address : \"\",    \n        item.telno ? item.telno : \"\",    \n        item.faxno ? item.faxno : \"\"        \n      ]);       \n    }\n  }  \n  \n  \n  --\u003e\n  \u003c/script\u003e\n"},{"id":"f386422d-19e8-4c1a-9871-455fbc54fb5a","name":"filehandler","type":"server_js","source":"/**\nModel module containing all the definition \nand methods that manipulating business data\n\n@class\n@constructor\n\n@author songxin \u003csongxin1973@gmail.com\u003e\n@modified songxin\n@date 2014-02-28\n**/\n\nvar FileHandler \u003d {\n\n  // getRowsData iterates row by row in the input range and returns an array of objects.\n  // Each object contains all the data for a given row, indexed by its normalized column name.\n  // Arguments:\n  //   - sheet: the sheet object that contains the data to be processed\n  //   - range: the exact range of cells where the data is stored\n  //   - columnHeadersRowIndex: specifies the row number where the column names are stored.\n  //       This argument is optional and it defaults to the row immediately above range;\n  // Returns an Array of objects.\n  getRowsData : function (sheet, range, columnHeadersRowIndex) {\n    columnHeadersRowIndex \u003d columnHeadersRowIndex || range.getRowIndex() - 1;\n    var numColumns \u003d range.getLastColumn() - range.getColumn() + 1;\n    var headersRange \u003d sheet.getRange(columnHeadersRowIndex, range.getColumn(), 1, numColumns);\n    var headers \u003d headersRange.getValues()[0];\n    //return getObjects(range.getValues(), normalizeHeaders(headers));\n    return this.getObjects(range.getValues(), headers);\n  },  \n  \n  \n  // For every row of data in data, generates an object that contains the data. Names of\n  // object fields are defined in keys.\n  // Arguments:\n  //   - data: JavaScript 2d array\n  //   - keys: Array of Strings that define the property names for the objects to create\n  getObjects :function (data, keys) {\n    var objects \u003d [];\n    for (var i \u003d 0; i \u003c data.length; ++i) {\n      var object \u003d {};\n      var hasData \u003d false;\n      for (var j \u003d 0; j \u003c data[i].length; ++j) {\n        var cellData \u003d data[i][j];\n        if (this.isCellEmpty(cellData)) {\n          object[keys[j]] \u003d \"\";   // to keep the column exist\n          continue;\n        }\n        object[keys[j]] \u003d cellData;\n        hasData \u003d true;\n      }\n      if (hasData) {\n        objects.push(object);\n      }\n    }\n    return objects;\n  },\n  \n  // Returns an Array of normalized Strings.\n  // Arguments:\n  //   - headers: Array of Strings to normalize\n  normalizeHeaders:function(headers) {\n    var keys \u003d [];\n    for (var i \u003d 0; i \u003c headers.length; ++i) {\n      var key \u003d this.normalizeHeader(headers[i]);\n      if (key.length \u003e 0) {\n        keys.push(key);\n      }\n    }\n    return keys;\n  },\n  \n  // Normalizes a string, by removing all alphanumeric characters and using mixed case\n  // to separate words. The output will always start with a lower case letter.\n  // This function is designed to produce JavaScript object property names.\n  // Arguments:\n  //   - header: string to normalize\n  // Examples:\n  //   \"First Name\" -\u003e \"firstName\"\n  //   \"Market Cap (millions) -\u003e \"marketCapMillions\n  //   \"1 number at the beginning is ignored\" -\u003e \"numberAtTheBeginningIsIgnored\"\n  normalizeHeader:function(header) {\n    var key \u003d \"\";\n    var upperCase \u003d false;\n    for (var i \u003d 0; i \u003c header.length; ++i) {\n      var letter \u003d header[i];\n      if (letter \u003d\u003d \" \" \u0026\u0026 key.length \u003e 0) {\n        upperCase \u003d true;\n        continue;\n      }\n      if (!isAlnum(letter)) {\n        continue;\n      }\n      if (key.length \u003d\u003d 0 \u0026\u0026 isDigit(letter)) {\n        continue; // first character must be a letter\n      }\n      if (upperCase) {\n        upperCase \u003d false;\n        key +\u003d letter.toUpperCase();\n      } else {\n        key +\u003d letter.toLowerCase();\n      }\n    }\n    return key;\n  },\n  \n  // Returns true if the cell where cellData was read from is empty.\n  // Arguments:\n  //   - cellData: string\n  isCellEmpty:function(cellData) {\n    return typeof(cellData) \u003d\u003d \"string\" \u0026\u0026 cellData \u003d\u003d \"\";\n  },\n  \n  // Returns true if the character char is alphabetical, false otherwise.\n  isAlnum:function(char) {\n    return char \u003e\u003d \u0027A\u0027 \u0026\u0026 char \u003c\u003d \u0027Z\u0027 ||\n      char \u003e\u003d \u0027a\u0027 \u0026\u0026 char \u003c\u003d \u0027z\u0027 ||\n        this.isDigit(char);\n  },\n\n// Returns true if the character char is a digit, false otherwise.\n  isDigit:function(char) {\n    return char \u003e\u003d \u00270\u0027 \u0026\u0026 char \u003c\u003d \u00279\u0027;\n  },\n\n// Given a JavaScript 2d Array, this function returns the transposed table.\n// Arguments:\n//   - data: JavaScript 2d Array\n// Returns a JavaScript 2d Array\n// Example: arrayTranspose([[1,2,3],[4,5,6]]) returns [[1,4],[2,5],[3,6]].\n  arrayTranspose:function(data) {\n    if (data.length \u003d\u003d 0 || data[0].length \u003d\u003d 0) {\n      return null;\n    }\n    \n    var ret \u003d [];\n    for (var i \u003d 0; i \u003c data[0].length; ++i) {\n      ret.push([]);\n    }\n    \n    for (var i \u003d 0; i \u003c data.length; ++i) {\n      for (var j \u003d 0; j \u003c data[i].length; ++j) {\n        ret[j][i] \u003d data[i][j];\n      }\n    }\n    \n    return ret;\n  }  ,\n  \n  //----------------------------------------------------\n  // Convert the file into corresponding google doc type\n  //----------------------------------------------------\n  convert : function (fileBlob, convertedFileName) {\n    \n    var file \u003d {\n      title: convertedFileName\n      //mimeType: \u0027application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\u0027\n    };\n\n    file \u003d Drive.Files.insert(file, fileBlob,{\n      convert: true\n    });\n    \n    GLOBAL.Util.debugLog(String.format(\u0027ID: {0}, and size is {1}\u0027, file.id, file.fileSize));\n    \n    return file;\n  },  \n  \n  moveFileToFolder:function(file, folderName) {  //used for those files that created in root folder\n    //var newfile\u003dfile.makeCopy(\u0027copy of \u0027+file.getName());// here you can define the copy name the way you want...\n    var folders \u003d DriveApp.getFoldersByName(folderName);\n    var folder;\n    while(folders.hasNext()) {\n      folder \u003d folders.next();\n    }\n    \n    if (folder) {\n      file.addToFolder(folder);//  add the copy to the folder\n    }\n    \n    file.removeFromFolder(DriveApp.getRootFolder());// and remove it from your root folder\n    \n  },\n  end : function() {\n    GLOBAL.Util.infoLog(\"Entering Model#end()...\");\n  }\n  \n}"},{"id":"8a7ba788-6bd7-419f-89ad-3ee49dbdb01a","name":"resource","type":"server_js","source":"var MESSAGETXT_EN \u003d {\n  \n  home : {\n    name : \"Home\"\n    ,formTitle : \"Cloud Logistics Management\"\n  },\n\n  order : {\n    name : \"Order\"\n    ,formTitle : \"Order Form\"\n    ,inputTitle: \"Selecting Items\"\n    ,addSBItemTitle: \"Add Items\"\n    ,outputTitle: \"Selected Items List\"\n    ,placeOrderTitle: \"Place Order\"\n    ,info01: \"Please double check the information before you submit these orders\"\n  },\n  \n  orderlog : {\n    name : \"Order Log\"\n    ,formTitle : \"Order Log Form\"\n    ,inputTitle: \"Summary of Order\"\n    ,outputTitle: \"Current Order Details\"\n    ,updateOrderTitle: \"Update Order\"\n  },\n\n  purchase : {\n    name : \"Purchase\"\n    ,formTitle : \"Purchase Form\"\n    ,inputTitle: \"Aggregating Purchases\"\n    ,outputTitle: \"Aggregated Items List\"\n    ,info01: \"All Items can be delivered from stock directly. Click \u003cem\u003e\u0027Set to Purhcased\u0027\u003c/em\u003e button to set all purchase detail into \u003cem\u003e\u0027Purchased\u0027\u003c/em\u003e.\"\n    ,setPurchasedTitle:\"Set to Purchased\"\n  },\n\n  purchaselog : {\n    name       : \"Purchasing Log\"\n    ,formTitle : \"Purchasing Log Form\"\n    ,inputTitle: \"Latest Purhcasing List\"\n    ,outputTitle: \"Purchase Detail List\"\n    ,purchaseAllTitle: \"Purchase All\"\n  },\n\n  stock : {\n    name         : \"Stock\"\n    ,formTitle   : \"Stock Form\"\n    ,inputTitle  : \"Query Stocking Items\"\n    ,outputTitle : \"Current Stocking Items\"\n    ,queryTitle  : \"Query\"\n    ,info01      : \"There are still some data have not been handled. Do you want to continue anyway?\"\n  },\n\n  stockin : {\n    name         : \"Stock IN\"\n    ,formTitle   : \"Stock IN Form\"\n    ,inputTitle  : \"Selecting Items\"\n    ,outputTitle : \"Selected Items List\"\n    ,btnTitle    : \"Put into stock\"\n    ,info01      : \"Following items will be PUT INTO stock.\"\n    ,confBtnTitle: \"Confirm\"\n  },\n\n  stockout : {\n    name       : \"Stock OUT\"\n    ,formTitle : \"Stock OUT Form\"\n    ,btnTitle  : \"Take out from stock\"\n    ,info01      : \"Following items will be TAKEN OUT FROM stock.\"\n  },\n\n  distribute : {\n    name : \"Distributing\"\n    ,formTitle : \"Distributing Form\"\n    ,inputTitle  : \"Distributing List\"\n    ,outputTitle : \"Distributing Detail List for purchase \"\n    ,info01 : \"After press \u0027Confirm Delivery\u0027, all relevant order details\u0027 status will be updated to \u0027Delivered\u003c/span\u003e\u0027.\"\n    ,confBtnTitle : \"Confirm Delivery\"\n  },\n  \n  itemmgr : {\n    name : \"Item Management\"\n    ,formTitle : \"Item Management\"\n    ,tabTitle1    : \"Query the current items\"\n    ,tabTitle2    : \"Upload new items\"\n    ,inputTitle1  : \"Query Current Items\"\n    ,inputTitle2  : \"Upload the Item file\"\n    ,outputTitle  : \"Updated Items List\"\n    ,info01       : \"Please select the item data file and upload it.\"\n  },\n  \n  suppmgr : {\n    name : \"Supplier Management\"\n    ,formTitle : \"Supplier Management\"\n    ,tabTitle1    : \"Query the current suppliers\"\n    ,tabTitle2    : \"Upload new suppliers\"\n    ,inputTitle1  : \"Supplier Information\"\n    ,inputTitle2  : \"Upload the Suppliers file\"\n    ,outputTitle  : \"Updated Suppliers List\"\n    ,info01       : \"Please select the supplier data file and upload it.\"\n    ,suppname     : \"Name\"\n  },\n  \n  admin : {\n    name : \"Admin\"\n    ,formTitle : \"Admin\"\n    ,tabTitle1 : \"User\"\n    ,tabTitle2 : \"Branch\"\n    ,inputTitle1  : \"User Information\"\n    ,outputTitle1 : \"User List\"\n    ,inputTitle2  : \"Branch Information\"\n    ,outputTitle2 : \"Branch List\"\n    ,username     : \"Name\"\n    ,branchname     : \"Branch\"\n  },\n  \n  //\u003d\u003d\u003d\u003d For business use \u003d\u003d\u003d\u003d\n  business : {\n    Type : \"Type\"\n    ,ID : \"ID\"\n    ,ItemID : \"ItemID\"\n    ,ItemName : \"Name\"\n    ,Qty : \"Qty\"\n    ,Supplier : \"Supplier\"\n    ,Delete : \"Delete\"\n    ,Description : \"Description\"\n    ,Price : \"Price\"\n    ,ItemCode : \"Item Code\"\n    ,GuidedPrice : \"Guided Price\"\n    ,OrderQty : \"Order Qty\"\n    ,StockQty : \"Stock Qty\"\n    ,PurchaseQty : \"Purchase Qty\"\n    ,PurchasePrice : \"Purchase Price\"\n    ,AggregateTime : \"Aggregate Time\"\n    ,From : \"From\"\n    ,To : \"To\"\n    ,PurchasedTime : \"Purchased Time\"\n    ,Status : \"Status\"\n    ,EditShow : \"Edit/Show\"\n    ,Comment : \"Comment\"\n    ,StockPrice : \"Stock Price\"\n    ,CurrentStock : \"Current Stock\"\n    ,SafetyStock : \"Safety Stock\"\n    ,NecessaryQTY : \"Necessary QTY\"\n    ,Direction : \"Direction\"\n    ,StockInPrice : \"Stock In Price\"\n    ,SalePrice : \"Sale Price\"\n    ,TotalQty  : \"Total Qty\"\n    ,Package   : \"Package\"\n    ,StockPlace : \"Stock Place\"\n    ,Branch : \"Branch\"\n    ,User : \"User\"\n    ,PlacedDate:\"Placed Date\"\n    ,StartDate:\"Start Date\"\n    ,EndDate:\"End Date\"\n    ,ItemType: \"Item Type\"\n    ,PersonLName  : \"Last Name\"\n    ,PersonFName  : \"First Name\"\n    ,Email       : \"Email\"\n    ,TelNo       : \"Tel No\"\n    ,FaxNo       : \"Fax No\"\n    ,Address     : \"Address\"\n    ,Contact     : \"Contact\"\n  },\n  \n  //\u003d\u003d\u003d\u003d For Common Use \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  common: {\n    sysTitle:\"Cloud Logistics Manager\"\n    ,querymsg001 : \"Data is being retrieved...\"\n    ,querymsg002 : \"Leave blank if want to query all types of item.\"\n    ,errdiagTitle : \"Sorry, there is an error:\"\n    ,confirmDialogTitle : \"Confirmation\"\n    ,infoDialogTitle : \"Information\"\n    ,queryBtnTitle : \"Query\"\n    ,addBtnTitle : \"Add\"\n    ,uploadBtnTitle : \"Upload\"\n    ,clearBtnTitle: \"Clear\"\n    ,updateBtnTitle: \"Update\"\n    ,Operation : \"Operation\"\n  },\n  \n  errormsg: {\n    msg01:\"Please input a number in {0} quantity\" \n    ,msg02:\"There is no order to place\" \n    ,msg03:\"Please check the input in {0}\" \n  }\n\n};\n\n\nvar MESSAGETXT_CN \u003d {\n  \n  home : {\n    name       : \"首页\"\n    ,formTitle : \"云端物流管理系统\"\n  },\n\n  order : {\n    name            : \"订单\"\n    ,formTitle      : \"订单处理\"\n    ,inputTitle     : \"货品选择\"\n    ,outputTitle    : \"已添加货品\"\n    ,addSBItemTitle : \"添加货品\"\n    ,placeOrderTitle: \"提交订单\"\n    ,info01         : \"请在提交订单前再次确认\"\n  },\n  \n  orderlog : {\n    name              : \"订单记录\"\n    ,formTitle        : \"订单记录\"\n    ,inputTitle       : \"订单概要\"\n    ,outputTitle      : \"当前订单详细内容\"\n    ,updateOrderTitle : \"更新订单\"\n  },\n\n  purchase : {\n    name               : \"采购\"\n    ,formTitle         : \"采购处理\"\n    ,inputTitle        : \"订单集计\"\n    ,outputTitle       : \"货品统计一览\"\n    ,info01            : \"全部所选货品可以直接从仓库发货。点击\u003cem\u003e“设置为已采购”\u003c/em\u003e按钮可将所有订单状态更新为\u003cem\u003e“已采购”\u003c/em\u003e。\"\n    ,setPurchasedTitle : \"设置为已采购\"\n  },\n\n  purchaselog : {\n    name               : \"采购记录\"\n    ,formTitle         : \"采购记录\"\n    ,inputTitle        : \"最近采购一览\"\n    ,outputTitle       : \"采购单详细内容\"\n    ,purchaseAllTitle  : \"采购\"\n  },\n\n  stock : {\n    name         : \"库存\"\n    ,formTitle   : \"库存处理\"\n    ,inputTitle  : \"查询库存货品\"\n    ,outputTitle : \"查询结果一览\"\n    ,queryTitle  : \"查询\"\n    ,info01      : \"部分数据尚未处理。仍然要继续吗？\"\n  },\n\n  stockin : {\n    name         : \"入库\"\n    ,formTitle   : \"入库处理\"\n    ,inputTitle  : \"货品选择\"\n    ,outputTitle : \"已添加货品\"\n    ,btnTitle    : \"入库\"\n    ,info01      : \"下列货品将入库\"\n    ,confBtnTitle: \"确认\"\n  },\n\n  stockout : {\n    name       : \"出库\"\n    ,formTitle : \"出库处理\"\n    ,btnTitle  : \"出库\"\n    ,info01    : \"下列货品将出库\"\n  },\n\n  distribute : {\n    name          : \"配送\"\n    ,formTitle    : \"配送处理\"\n    ,inputTitle   : \"配送一览\"\n    ,outputTitle  : \"配送任务详细 - 采购 \"\n    ,info01       : \"执行“确认配送”后，所有相关订单状态将被更新为“已配送（Delivered）”\"\n    ,confBtnTitle : \"确认配送\"\n  },\n  \n  itemmgr : {\n    name : \"货品管理\"\n    ,formTitle    : \"货品管理\"\n    ,tabTitle1    : \"查询现有货品\"\n    ,tabTitle2    : \"上传货品数据\"\n    ,inputTitle1  : \"查询现有货品\"\n    ,inputTitle2  : \"选择需上传的货品数据文件\"\n    ,outputTitle  : \"查询/上传结果一览\"\n    ,info01       : \"请选择需要上传的货品数据文件\"\n  },\n  \n  suppmgr : {\n    name : \"供应商管理\"\n    ,formTitle : \"供应商管理\"\n    ,tabTitle1    : \"查询现有供应商\"\n    ,tabTitle2    : \"上传新供应商数据\"\n    ,inputTitle1  : \"供应商信息\"\n    ,inputTitle2  : \"选择需上传的供应商数据文件\"\n    ,outputTitle  : \"查询/上传结果一览\"\n    ,info01       : \"请选择需要上传的供应商数据文件\"\n    ,suppname     : \"供应商名称\"\n  },\n  \n  admin : {\n    name : \"系统管理\"\n    ,formTitle : \"系统管理\"\n    ,tabTitle1 : \"用户\"\n    ,tabTitle2 : \"分店\"\n    ,inputTitle1  : \"用户信息\"\n    ,outputTitle1 : \"用户列表\"\n    ,inputTitle2  : \"分店信息\"\n    ,outputTitle2 : \"分店列表\"\n    ,username     : \"用户姓名\"\n  },  \n\n  //\u003d\u003d\u003d\u003d For business use \u003d\u003d\u003d\u003d\n  business : {\n    Type : \"分类\"\n    ,ID : \"ID\"\n    ,ItemID : \"货品ID\"\n    ,ItemName : \"货品名称\"\n    ,ItemCode : \"货品编号\"\n    ,ItemType: \"货品分类\"\n    ,Qty : \"数量\"\n    ,Supplier : \"供应商\"\n    ,Delete : \"删除\"\n    ,Description : \"说明\"\n    ,Price : \"价格\"\n    ,GuidedPrice : \"指导价格\"\n    ,OrderQty : \"订购数量\"\n    ,StockQty : \"库存数量\"\n    ,PurchaseQty : \"采购数量\"\n    ,PurchasePrice : \"采购价格\"\n    ,AggregateTime : \"集计日期\"\n    ,From : \"开始日\"\n    ,To : \"截止日\"\n    ,PurchasedTime : \"采购日期\"\n    ,Status : \"状态\"\n    ,EditShow : \"编辑/显示\"\n    ,Comment : \"备注\"\n    ,StockPrice : \"库存价格\"\n    ,CurrentStock : \"当前库存\"\n    ,SafetyStock : \"安全库存\"\n    ,NecessaryQTY : \"需采购数量\"\n    ,Direction : \"出库/入库\"\n    ,StockInPrice : \"入库价格\"\n    ,SalePrice : \"销售价格\"\n    ,TotalQty  : \"总数量\"\n    ,Package   : \"包装\"\n    ,StockPlace : \"库存所在地\"\n    ,Branch : \"分店\"\n    ,User : \"用户\"\n    ,PlacedDate:\"下单日期\"\n    ,StartDate:\"开始日\"\n    ,EndDate:\"截止日\"\n    ,PersonLName  : \"姓\"\n    ,PersonFName  : \"名\"\n    ,Email       : \"Email\"\n    ,TelNo       : \"电话号码\"\n    ,FaxNo       : \"传真号码\"\n    ,Address     : \"地址\"\n    ,Contact     : \"联系人\"\n  },\n\n  //\u003d\u003d\u003d\u003d For common use\n  common: {\n    sysTitle:\"Cloud Logistics Manager\"\n    ,querymsg001 : \"查询数据中...\"\n    ,querymsg002 : \"查询全部货品请选择空白\"\n    ,errdiagTitle : \"出错啦\"\n    ,confirmDialogTitle : \"确认\"\n    ,infoDialogTitle : \"提示\"\n    ,queryBtnTitle   : \"查询\"\n    ,addBtnTitle : \"添加\"\n    ,uploadBtnTitle : \"上传\"\n    ,clearBtnTitle: \"重置\"\n    ,updateBtnTitle: \"更新\"\n    ,Operation : \"操作\"\n  },\n  \n  errormsg: {\n    msg01:\"请在 {0} 数量栏中输入数字\" \n    ,msg02:\"未指定货品，无法下单\" \n    ,msg03:\"请检查 {0} 的输入值\" \n  }\n\n};\n\nvar MESSAGETXT_JP \u003d {\n  \n  //\u003d\u003d\u003d\u003d For Order\n  order : {\n    name : \"オーダー\"\n  },\n  \n  //\u003d\u003d\u003d\u003d For common use\n  common: {\n    querymsg001 : \"データを検索中。。。\"\n  }\n\n};\n\n//var MESSAGETXT \u003d MESSAGETXT_CN;"},{"id":"edeebd33-476d-48d7-a762-a0391b70c454","name":"DAL-mongodb","type":"server_js","source":"/**\nData module containing all the constant definition \nand methods that manipulating data via MangoDb (by URL Fetch Service)\n\n@class\n@constructor\n\n@author songxin \u003csongxin1973@gmail.com\u003e\n@modified songxin\n@date 2014-10-03\n**/\n\n// some id\nGLOBAL.Data.apiKey \u003d \"\";\nGLOBAL.Data.baseUrl \u003d \"\";\nGLOBAL.Data.db \u003d \"\";\n\n\n// id: the object id of specified document\n/**\nfind one data by id.  \n\n@method GLOBAL.Data.find\n@param table {string} the object id of specified document\n@param id {string} the object id of specified document\n@example\n@return Map the item that just be updated\n**/\nGLOBAL.Data.find \u003d function(table, id) {\n  GLOBAL.Util.infoLog(\"[find]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");  \n  var res \u003d {};\n  if (!GLOBAL.Util.isValidString(table) || !GLOBAL.Util.isValidString(id)) {\n    res.code \u003d -1;\n    res.message \u003d \"id or table is invalid\";\n    return res;\n  }\n\n  var url \u003d GLOBAL.Data.getBaseUrl(table, id);\n  var option \u003d {};\n  option.method \u003d \"GET\";\n  option.contentType \u003d \"application/json\";\n  option.muteHttpExceptions \u003d true;\n  var oDataObject \u003d UrlFetchApp.fetch(url); \n  var retData \u003d JSON.parse(oDataObject.getContentText());\n  \n  var checkRes \u003d GLOBAL.Data.checkRespCode(oDataObject.getResponseCode());\n  res.code \u003d checkRes.code;\n  res.message \u003d checkRes.message;\n  \n  if (res.code \u003d\u003d GLOBAL.Constants.RET_OK) {\n    res.data \u003d retData;\n  }\n  return res;  \n}\n\n/**\ndelete one data by id.  \n\n@method GLOBAL.Data.remove\n@param table {string} the object id of specified document\n@param id {string} the object id of specified document\n@example\n@return Map the item that just be updated\n**/\nGLOBAL.Data.remove \u003d function(table, id) {\n  var res \u003d {};\n  GLOBAL.Util.debugLog(\"[remove]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");  \n  \n  if (!GLOBAL.Util.isValidString(table) || !GLOBAL.Util.isValidString(id)) {\n    res.code \u003d GLOBAL.Constants.RET_ERR;\n    res.message \u003d \"id or table is invalid\";\n    return res;\n  }\n\n  var url \u003d GLOBAL.Data.getBaseUrl(table, id);\n  //var q \u003d encodeURIComponent(JSON.stringify({\"_id\":ObjectId(id)}));\n  var option \u003d {};\n  option.method \u003d \"DELETE\";\n  option.contentType \u003d \"application/json\";\n  option.payload \u003d \"\";\n  option.muteHttpExceptions \u003d true;\n\n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FOR DEBUG \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n   var result \u003d UrlFetchApp.getRequest(url,option);\n   for(i in result) {\n     GLOBAL.Util.debugLog(i + \": \" + result[i]);\n   }\n     \n   GLOBAL.Util.debugLog(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d HEADER \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n  \n   for(j in result.headers) {\n     GLOBAL.Util.debugLog(j + \": \" + result.headers[j]);\n   }\n    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  \n  var oDataObject \u003d UrlFetchApp.fetch(url, option); \n  var retData \u003d JSON.parse(oDataObject.getContentText());\n  \n  var checkRes \u003d GLOBAL.Data.checkRespCode(oDataObject.getResponseCode());\n  //GLOBAL.Util.debugLog(\"[remove] response code:\" + oDataObject.getResponseCode());  \n  //GLOBAL.Util.debugLog(oDataObject.getAllHeaders().toSource());  \n  \n  res.code \u003d checkRes.code;\n  res.message \u003d checkRes.message;\n  \n  if (res.code \u003d\u003d GLOBAL.Constants.RET_OK) {\n    res.data \u003d retData;\n  }\n  return res;  \n}\n\n// query:   an object contains following\n//           \u003d\u003d\u003e collection:   a string indicating the type of data that want to fetech\n//           \u003d\u003d\u003e queryString:  an object containing the query conditions\n// sort:    an object contains the sort conditions\n// limit:   a number showing how many records should be retrieved\n// return an object including at least code {0:OK, otherwise:failure} and message\nGLOBAL.Data.fetchData \u003d function (query, sort, limit) {\n\n  var res \u003d {};\n  GLOBAL.Util.debugLog(\"[fetchData]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");  \n  \n  if (GLOBAL.Util.isEmpty(query)) {\n    res.code \u003d GLOBAL.Constants.RET_ERR;\n    res.message \u003d \"query is invalid\";\n    return res;\n  }\n  \n  GLOBAL.Util.debugLog(\"[fetchData] we are looking for data in \" + query.collection);\n  \n  var url \u003d GLOBAL.Data.getBaseUrl(query.collection, null);\n  if (query.queryString) {\n    GLOBAL.Util.debugLog(\"[fetchData] the QueryString is \" + JSON.stringify(query.queryString));\n    var queryString \u003d encodeURIComponent(JSON.stringify(query.queryString));\n    url +\u003d \"\u0026q\u003d\" + queryString;\n  }\n  \n  if (sort) {\n    GLOBAL.Util.debugLog(\"[fetchData] the sort is \" + JSON.stringify(sort));\n    var sortString \u003d encodeURIComponent(JSON.stringify(sort));\n    url +\u003d \"\u0026s\u003d\" + sortString;\n  }\n  \n  if (limit \u003e 0) {\n    GLOBAL.Util.debugLog(\"[fetchData] the limit is \" + limit);\n    url +\u003d \"\u0026l\u003d\" + limit;\n  }\n\n  var option \u003d {};\n  option.method \u003d \"GET\";\n  option.contentType \u003d \"application/json\";\n  //option.payload \u003d JSON.stringify([]);\n  option.muteHttpExceptions \u003d true;\n  \n  // Get the data\n  var oDataObject \u003d UrlFetchApp.fetch(url, option); \n  var retData \u003d JSON.parse(oDataObject.getContentText());\n  \n  var checkRes \u003d GLOBAL.Data.checkRespCode(oDataObject.getResponseCode());\n  res.code \u003d checkRes.code;\n  res.message \u003d checkRes.message;\n  \n  if (res.code \u003d\u003d GLOBAL.Constants.RET_OK) {\n    res.data \u003d retData;\n  }\n\n  return res;\n  \n};\n\n// Get the count of this type of data (collection)\n// return the count of specified type of records. \n// IF there are something wrong or nothing exist, 0 will be returned.\nGLOBAL.Data.getCount \u003d function(type) {\n  \n  var res \u003d 0;\n  \n  if (!GLOBAL.Util.isValidString(type)) {\n    return res;\n  }\n  \n  var url \u003d GLOBAL.Data.getBaseUrl(type, null) + \"\u0026c\u003dtrue\";\n  \n  // Get the data\n  var oDataObject \u003d UrlFetchApp.fetch(url); \n  res \u003d JSON.parse(oDataObject.getContentText());\n  return res;\n   \n}\n\n\n// parameter data should contain two fields: \"collection\" for the table name and \"data\" for the content\n// return an object including at least code {0:OK, otherwise:failure} and message\nGLOBAL.Data.insert \u003d function (data) {\n  \n  /*data: JSON.stringify( { \"x\" : 1 } ),\n\t\t  type: \"POST\",\n\t\t  contentType: \"application/json\" } );*/\n  var res \u003d {};\n  GLOBAL.Util.debugLog(\"[insert]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");  \n  \n  if (!data) {\n    res.code \u003d -1;\n    res.message \u003d \"parameter is not set.\";\n    return res;\n  }\n  \n  var option \u003d {};\n  option.method \u003d \"POST\";\n  option.contentType \u003d \"application/json\";\n  \n  option.payload \u003d JSON.stringify(data.data);\n  option.muteHttpExceptions \u003d true;\n  \n  var url \u003d GLOBAL.Data.getBaseUrl(data.collection);\n  var oDataObject \u003d UrlFetchApp.fetch(url, option); //.getContentText(); \n  \n  if (!oDataObject)\n  {\n    res.code \u003d GLOBAL.Constant.RET_ERR;\n    res.message \u003d \"Data inserted failure.\";\n    return res;\n  }\n  \n  res.code \u003d GLOBAL.Constants.RET_OK;\n  res.message \u003d \"OK\";\n  var retData \u003d JSON.parse(oDataObject.getContentText());\n  GLOBAL.Util.debugLog(\"[insert]\" + oDataObject.getContentText());\n  \n  res.id \u003d retData._id.$oid;\n  res.data \u003d data.data;  \n  \n  GLOBAL.Util.debugLog(\"[insert] data has been inserted sucessfully. the object id is \" + res.id);  \n  return res;\n}\n\n\n\n// As parameter, obj must have:\n// 1. collection: a string that is the table name\n// 2. id(OPTION): a string that is the (o)id of document that will be updated\n// 3. data: an object containing the fields that will be modified\n// 4. query(OPTION): if want to update/delete multiple records, here is the query string\n// NOTE: if data is empty, which means this record/document will be deleted\n// NOTE: if both id and query have value simultaneously, id has the higher priority (query will be ignored).\n// return an object containing return code and error message if there is an error\nGLOBAL.Data.update \u003d function (obj) {\n  \n  var res \u003d {}\n  GLOBAL.Util.infoLog(\"[update]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");  \n  GLOBAL.Util.displayObject(obj);\n  \n  if (!obj) {\n    res.code \u003d -1;\n    res.message \u003d \"parameter is not set correctly.\";\n    return res;\n  }\n  \n  var option \u003d {};\n  option.method \u003d \"put\";\n  option.contentType \u003d \"application/json\";\n  option.payload \u003d \"\";    //Must be a string\n  \n  // using \"$set\" : { \"x\" : 3 }\n  var updateset \u003d {};\n  if (!GLOBAL.Util.isEmpty(obj.data)) {\n    updateset \u003d {\"$set\":obj.data};\n    option.payload \u003d JSON.stringify(updateset);\n    GLOBAL.Util.debugLog(\"[update]payload is ***\"+option.payload+\"***\");\n  }else{\n    option.payload \u003d JSON.stringify([]);               // \u003c----- This is the point!  (Just \"\" will not work).\n  }\n  \n  option.muteHttpExceptions \u003d true;\n  \n  var url \u003d \"\";\n  \n  if (GLOBAL.Util.isValidString(obj.id)) {\n    url \u003d GLOBAL.Data.getBaseUrl(obj.collection, obj.id);   // update one document\n  } else {\n    url \u003d GLOBAL.Data.getBaseUrl(obj.collection, null);\n    if (obj.query) {\n      GLOBAL.Util.debugLog(\"[update]query is ***\"+JSON.stringify(obj.query)+\"***\");\n      url +\u003d \"\u0026q\u003d\" + encodeURIComponent(JSON.stringify(obj.query)) + \"\u0026m\u003dtrue\";  //update multiple records\n    }\n  }\n  GLOBAL.Util.debugLog(\"[update]created url is: \" + url);  \n\n  var oDataObject \u003d UrlFetchApp.fetch(url, option); \n  var retData \u003d JSON.parse(oDataObject.getContentText());\n  \n  var checkRes \u003d GLOBAL.Data.checkRespCode(oDataObject.getResponseCode());\n  res.code \u003d checkRes.code;\n  res.message \u003d checkRes.message;\n  \n  if (res.code \u003d\u003d GLOBAL.Constants.RET_OK) {\n    res.data \u003d retData;\n  }\n  \n  return res;\n  \n};\n\nGLOBAL.Data.getLastError \u003d function () {\n  \n  var res \u003d {}\n  GLOBAL.Util.debugLog(\"[getLastError]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");  \n\n  var option \u003d {};\n  option.method \u003d \"POST\";\n  option.contentType \u003d \"application/json\";\n  \n  var data \u003d {\"getLastError\":\"1\"};\n  option.payload \u003d JSON.stringify(data);\n  option.muteHttpExceptions \u003d true;\n  \n  var url \u003d GLOBAL.Data.getDBBaseUrl() + \"/runCommand\" + GLOBAL.Data.getAPIParameter();\n  GLOBAL.Util.debugLog(\"[getLastError]created url is: \" + url);  \n\n  var oDataObject \u003d UrlFetchApp.fetch(url, option); \n  var retData \u003d JSON.parse(oDataObject.getContentText());\n  GLOBAL.Util.displayObject(retData);\n  \n  var checkRes \u003d GLOBAL.Data.checkRespCode(oDataObject.getResponseCode());\n  res.code \u003d checkRes.code;\n  res.message \u003d checkRes.message;\n  \n  if (res.code \u003d\u003d 0) {\n    res.data \u003d retData;\n  }\n  return res;\n  \n};\n\n\n\n//NOTE: only when updating/deleting one document/record, id must not be empty.\nGLOBAL.Data.getBaseUrl \u003d function(table, id) {\n  \n  GLOBAL.Util.infoLog(\"Entering getBaseUrl... [\"+table+\"][\"+id+\"]\");  \n  \n  var url \u003d GLOBAL.Data.getDBBaseUrl();\n  var api \u003d GLOBAL.Data.getAPIParameter();\n  if (!GLOBAL.Util.isValidString(id)) \n  {\n    url \u003d url + \"/collections/\" + table + api;\n  }else{\n    url \u003d url + \"/collections/\" + table + \"/\" + id + api;\n  }\n  GLOBAL.Util.debugLog(\"[getBaseUrl] created url is: \" + url);  \n\n  return url;\n}\n\nGLOBAL.Data.getDBBaseUrl \u003d function() {\n  if (GLOBAL.Data.baseUrl \u003d\u003d \"\") GLOBAL.Data.initEnv();\n  return GLOBAL.Data.baseUrl + \"/databases/\" + GLOBAL.Data.db;\n}\n\nGLOBAL.Data.getAPIParameter \u003d function() {\n  if (GLOBAL.Data.apiKey \u003d\u003d \"\") GLOBAL.Data.initEnv();\n  return \"?apiKey\u003d\" + GLOBAL.Data.apiKey;\n}\n\nGLOBAL.Data.initEnv \u003d function() {\n  \n  var pt \u003d PropertiesService.getScriptProperties();\n  GLOBAL.Data.apiKey \u003d pt.getProperty(\"mongodb_api_key\");\n  GLOBAL.Data.baseUrl \u003d pt.getProperty(\"mongodb_api_baseurl\");\n  GLOBAL.Data.db \u003d pt.getProperty(\"mongodb_db_name\");\n}\n"},{"id":"6a7327c7-7462-454b-98ff-3174f379070d","name":"global-data-bak","type":"server_js","source":"/**\nData module containing all the constant definition \nand methods that manipulating data via Scriptdb\n\n@class\n@constructor\n\n@author songxin \u003csongxin1973@gmail.com\u003e\n@modified songxin\n@date 2014-02-03\n**/\nGLOBAL.namespace(\"DataBak\");\n\n/**\ndescription.  \n\n@method GLOBAL.Data.getDb\n@return {ScriptDbInstance.} Db instance that just get\n**/\nGLOBAL.DataBak.getDb \u003d function() {\n  return ScriptDb.getMyDb();\n};\n\n/**\ndelete the whole database. maybe time-consuming if there are \nmany data existed\n\n@method GLOBAL.Data.deleteAll\n@return {null}\n**/\nGLOBAL.DataBak.deleteAll \u003d function() {\n  var db \u003d GLOBAL.Data.getDb();\n  \n  while (true) {\n    var result \u003d db.query({});\n    if (result.getSize() \u003d\u003d 0) {\n      break;\n    }\n    while (result.hasNext()) {\n      db.remove(result.next());\n    }\n  }\n};\n\n/**\nsave item into database.  \n\n@method GLOBAL.Data.saveDataItem\n@param type {String} the type of data you want to save\n@param [content] {Object} A map containing the content that you want to save\n@example\n   1. create an object that contains the contents;\n   2. GLOBAL.Data.saveDataItem(\"data type\", contents)\n@return {Object} The object that just has been saved\n**/\nGLOBAL.DataBak.saveDataItem \u003d function(type, content) {\n  \n  GLOBAL.Util.infoLog(\"Entering saveDataItem. type:\" + type);\n  var ob \u003d new Object();\n  var db \u003d GLOBAL.Data.getDb();\n  \n  //two common items, type and record_id\n  ob.type \u003d type;\n  \n  //get the next record_id\n  ob.record_id \u003d db.query({type:type}).getSize() + 1;\n  \n  // content should be an object\n  for (item in content) {\n    ob[item] \u003d content[item];\n  }\n  // add activeFlg\n  ob.activeFlg \u003d GLOBAL.Constants.REC_ACTIVE;\n  \n  // add the modified person and modified night\n  // save the data\n  ob.modifiedPerson \u003d GLOBAL.Util.getCurrentUser();\n  ob.modifiedDate \u003d GLOBAL.Util.getCurrentTime();\n  \n  // save the data\n  var re \u003d db.save(ob);\n  \n  //return ob.record_id;  \n  return re;\n};\n\n/**\nupdate item into database.  \n\n@method GLOBAL.Data.updateDataItem\n@param obj {Object} the object that want to be updated\n@example\n@return Map the item that just be updated\n**/\nGLOBAL.DataBak.updateDataItem \u003d function(obj) {\n  GLOBAL.Util.infoLog(\"Entering updateDataItem:\" + obj);\n  var db \u003d GLOBAL.Data.getDb();\n  return db.save(obj);  \n}\n\n/**\nretrieve data from database by condition.  \n\n@method GLOBAL.Data.getDataItems\n@param [condition] {Object} A map containing the content that you want to save\n@example\n@return [results] {Array} An array the item depend on the condition\n**/\nGLOBAL.DataBak.getDataItems \u003d function(condition) {\n  GLOBAL.Util.infoLog(\"Entering GLOBAL.Data.getDataItems:\" + condition);\n  \n  //add ACTIVE flag\n  condition.activeFlg \u003d GLOBAL.Constants.REC_ACTIVE;\n  \n  return GLOBAL.Data.getAllDataItems(condition);  \n}\n\nGLOBAL.DataBak.getAllDataItems \u003d function(condition) {\n  GLOBAL.Util.infoLog(\"Entering GLOBAL.Data.getAllDataItems:\" + condition);\n  \n  var results \u003d new Array()\n  var db \u003d GLOBAL.Data.getDb();\n  var records \u003d db.query(condition);\n \n  while(records.hasNext()) {\n    results.push(records.next());\n  }\n  \n  \n  \n  GLOBAL.Util.debugLog(String.format(\"{0} items of [{1}] have been found!\", results.length, condition.type));\n  \n  return results;  \n}\n\n\n\n/**\nclear the data that is in the table (type is appointed).  \n\n@method GLOBAL.Data.clearTableData\n@param type {String} the type of data you want to save\n@example\n@return {ScriptDbResult} The object that just has been saved\n**/\nGLOBAL.DataBak.clearTableData \u003d function(type) {\n  \n  GLOBAL.Util.infoLog(\"Entering clearTableData. type:\" + type);\n  var db \u003d GLOBAL.Data.getDb();\n  \n  // try bulk operation\n  while (true) {\n    var results \u003d db.query({type:type});\n    if (results.getSize() \u003d\u003d 0) {\n      break;\n    }\n    var ids \u003d new Array();\n    while (results.hasNext()) {\n      ids.push(results.next().getId());\n    }\n    db.removeByIdBatch(ids, false);\n  }\n\n};\n\n/**\ninitialising data for program.  \n\n@method GLOBAL.Data.initializeData\n@example\n@return {ScriptDbResult} The object that just has been saved\n**/\nGLOBAL.DataBak.initializeData \u003d function() {\n  \n\n};"},{"id":"e128e7f6-b5e4-4ba3-af76-ca153ca22c8f","name":"suppmgr","type":"server_js","source":"/**\nSuppmgr module containing all the definition \nand methods that are used by Supplier Management module\n\n@class\n@constructor\n\n@author songxin \u003csongxin1973@gmail.com\u003e\n@modified songxin\n@date 2015-03-12\n**/\n\nvar Suppmgr \u003d {\n\n//\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Front End Code \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d//\n//--------------------------------------------------\n// receive the upload file and save it to Google drive\n// then transfer it to Google spreadsheet format\n// and retrieve the data from file to save to the database\n// RETURN the successful information\n//--------------------------------------------------\n  uploadSupplierFile :function (form) {\n    GLOBAL.Util.infoLog(\"Entering uploadSupplierFile...\");\n    \n    var formBlob \u003d form.supplierFile;\n    //TODO:\n    \n    // Save uploaded Excel as Google Spreadsheet\n    var fileName \u003d \"Supplier_\" + GLOBAL.Util.formatDateByTime(GLOBAL.Util.getCurrentTime(), \"yyyyMMddhhmmss\");\n    \n    var gsFile \u003d FileHandler.convert(formBlob, fileName);\n    GLOBAL.Util.debugLog(\"Uploaded file\u0027s has been renamed to \" + fileName);\n    \n    //Fetching data from file\n    var ss \u003d SpreadsheetApp.openById(gsFile.getId());\n    var sheet \u003d ss.getSheets()[0];\n    var dataRange \u003d sheet.getRange(\"A3:M800\");\n    \n    var dataObjects \u003d FileHandler.getRowsData(sheet, dataRange, 1);\n    \n    this.saveSupplierToDb(dataObjects);\n    \n  },\n  \n\n//--------------------------------------------------\n// save the supplier information get from uploaded file\n//--------------------------------------------------\n  saveSupplierToDb : function (suppliers) {\n    GLOBAL.Util.infoLog(\"Entering saveUploadDataToDb...\");\n    \n    // deActivate all the current item data.\n    Model.deActivateRec(GLOBAL.Constants.SUPPLIER_TYPE);\n    \n    var cnt \u003d 0;\n    \n    for (var idx \u003d 0; idx \u003c suppliers.length; idx++) {\n      \n      var supplierID \u003d suppliers[idx].supplierID;\n      \n      if (supplierID) {\n\n        GLOBAL.Util.debugLog(\"actually handling supplier \" + supplierID);\n        // (1) prepare supplier Data\n        var supplier \u003d suppliers[idx];\n        \n        // (2) create the item data\n        item \u003d Model.createSupplier(supplier);\n        GLOBAL.Util.debugLog(String.format(\"Supplier [{0}] has been stored! \",supplier.record_id));\n        cnt++;\n        \n      }\n    }\n    \n    GLOBAL.Util.debugLog(String.format(\"{0} items have been stored successfully!\", cnt));\n    \n  },\n  \n  querySupplier:function(params) {\n    GLOBAL.Util.infoLog(\"Entering Suppmgr#querySupplier()...\");\n    GLOBAL.Util.showPara({\n      funcName:\"querySupplier\",\n      \"params\":params\n    });\n    \n    var condition \u003d {};\n    if (params.suppname) condition.name \u003d {\"$regex\":params.suppname, \"$options\" : \"ig\"};\n    if (params.suppemail) condition.email \u003d {\"$regex\":params.suppemail, \"$options\" : \"ig\"};\n    if (params.supptel) condition.telno \u003d {\"$regex\":params.supptel, \"$options\" : \"ig\"};\n    if (params.suppfax) condition.faxno \u003d {\"$regex\":params.suppfax, \"$options\" : \"ig\"};\n    \n    var results \u003d Model.querySupplier(condition);\n    \n    GLOBAL.Util.displayObject(results);\n    \n    return results;  \n  },\n  \n  end: function(){\n   //do nothing\n  }\n}"},{"id":"38baaf46-84ff-4ef7-a843-0e539d23b112","name":"distribute-ui-js","type":"html","source":"  \u003cscript language\u003d\"javascript\" type\u003d\"text/jscript\"\u003e\n  \u003c!--  \n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EVENT FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  function displayDistributeDetail(purchaseId, statusId) {\n    log(\"Entering displayDistributeDetail...:[\" + purchaseId + \"][\" + statusId + \"]\");\n    google.script.run.withSuccessHandler(onSuccessDistributeDetail).processDistributeDetail(purchaseId, statusId);\n  }\n\n  function submitConfirmDistribute() {\n    log(\"Entering submitConfirmDistribute...\");\n    \n    //get the purchaseID (which is used to update distribute detail and master as a key)\n    //distribute-purchase-id\n    var purchaseID \u003d parseInt($(\"#distribute-purchase-id\").text());\n    \n    //collect all the distribute Items \u003cstatus and comment\u003e\n    var status \u003d {};\n    var comment \u003d{};\n    \n    //set the status information\n    $(\"#distribute-detail tbody tr select\").each(function(){  // for each ROW(\u003ctr\u003e) of sbitem\n      //get branch name from the name of select\n      var selectName \u003d $(this).attr(\"name\");\n      var branchName \u003d selectName.split(\u0027-\u0027)[0];   \n      //log(branchName);\n      //log($(this).val());\n      status[branchName] \u003d $(this).val();\n    });\n    \n    //set the comment information\n    $(\"#distribute-detail tbody tr input\").each(function(){  // for each ROW(\u003ctr\u003e) of sbitem\n      //get branch name from the name of select\n      var inputName \u003d $(this).attr(\"name\");\n      var branchName \u003d inputName.split(\u0027-\u0027)[0];   \n      comment[branchName] \u003d $(this).val();\n      //log(comment[branchName]);\n    });\n    \n    google.script.run.withSuccessHandler(onSuccessConfirmDistribute).processConfirmDistribute(purchaseID, status, comment);\n  }\n  \n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CALL BACK FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  \n  function onSuccessDistributeList(results) {\n    log(\"Entering onSuccessDistributeList...\");\n    logShowObject(results[0]);\n    \n    var oTable \u003d $(\"#distribute-list\").dataTable();\n    oTable.fnClearTable();\n\n    // result is an array of queried items\n    for (var i \u003d 0; i \u003c results.length; i++) {\n      var result \u003d results[i];\n      \n      //var operation \u003d (result.statusId \u003d\u003d STATUS.DELIVERED.value) ? \"Show detail\" : \"Delivery\";\n      var operation \u003d (result.statusId \u003d\u003d STATUS.DELIVERED.value) ? \n          \"\u003ci class\u003d\u0027fa fa-search-plus fa-lg m5\u0027\u003e\u003c/i\u003e\" : \n          \"\u003ci class\u003d\u0027fa fa-truck fa-lg m5\u0027\u003e\u003c/i\u003e\";               \n      \n      oTable.fnAddData([\n        result.id,\n        result.aggTime,    \n        result.startTime, \n        result.endTime,       \n        result.purchasedTime,\n        result.status,\n        //\"\u003cbutton class\u003d\u0027table-button\u0027 onclick\u003d\u0027displayDistributeDetail(\"+result.id+\",\"+result.statusId+\",this.parentNode)\u0027\u003e\"+operation+\"\u003c/button\u003e\"\n        \"\u003cspan onclick\u003d\u0027displayDistributeDetail(\"+result.id+\",\"+result.statusId+\",this.parentNode)\u0027\u003e\"+operation+\"\u003c/span\u003e\"\n      ]);         \n    }\n    \n    //fa fa-truck\n    \n    //close info window\n    showInfoDialog(\"\", false);\n    \n  } \n  \n  function onSuccessDistributeDetail(results) {\n    log(\"Entering onSuccessDistributeDetail...\");\n    log(\"\u003d\u003d display the number of detail data \u003d\u003d\");\n    //logShowObject(results.itemRecords.length);\n    \n    //set the purchase ID\n    $(\"#distribute-purchase-id\").text(results.purchaseID);\n    \n    var oTable \u003d $(\"#distribute-detail\").dataTable();\n    var branches01 \u003d JSON.parse($(\"input[name\u003d\u0027branches\u0027]\").first().val());\n    //(\"STATUS\", STATUS);\n    \n    var itemRecords \u003d results.itemRecords;\n    log(\"There are detail \"+itemRecords.length+\" records of purchase[\"+results.purchaseID+\"]\");\n    var showContent;\n    \n    oTable.fnClearTable();\n\n\n    //log(\"\u003d\u003d\u003d\u003d\u003d Setting each item \u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    // set the item information (distribute detail)\n    for (var idx\u003d0, max\u003ditemRecords.length; idx\u003cmax; idx++) {\n      var item \u003d itemRecords[idx];\n      \n      logShowObject(item);\n\n      showContent \u003d new Array();\n      showContent.push(item.itemName);\n      showContent.push(item.salePrice.toFixed(2));\n      showContent.push(0);   //totalQty : index \u003d 2;\n\n      for (var i\u003d0; i\u003cbranches01.length;i++) {\n        var branchName \u003d branches01[i].name;\n        if (item.hasOwnProperty(branchName)) {\n          showContent.push(item[branchName]);\n          showContent[2] +\u003d parseInt(item[branchName]);  //update total quantity\n        }else{\n          showContent.push(0);\n        }\n      }\n      oTable.fnAddData(showContent);         \n      log(\"One item has been added!\" + item.itemName);\n    }\n\n    log(\"\u003d\u003d\u003d\u003d\u003d Setting the final master rows! \u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    // set the master content\n    var masterContent \u003d \n      [{title:\"Total Price:\", value:results.master.branchTotalPrice},\n       {title:\"Status:\", value:results.master.branchStatus},\n       {title:\"Comment:\" , value:results.master.branchComments}];\n    \n    var currentBranchStatus \u003d {};\n      \n    for (var idx\u003d0, max\u003dmasterContent.length;idx\u003cmax;idx++) {\n      var item \u003d masterContent[idx];\n      log(\"Add item!\");\n      logShowObject(item);\n      \n      showContent \u003d new Array();\n      showContent.push(\"\");\n      showContent.push(\"\");\n      showContent.push(item.title);   \n      for (var i\u003d0, max1\u003dbranches01.length; i\u003cmax1;i++) {\n        var branchName \u003d branches01[i].name;\n          //TotalPrice is text, Status is combo box, and comment is input text\n          switch (idx) {\n            case 0:  //TotalPrice\n              showContent.push(item.value[branchName].toFixed(2));\n              break;\n            case 1:  //Status\n              var str \u003d \"\";\n              if (item.value[branchName] \u003d\u003d STATUS.NEW.value) {  //Value is status id\n                str +\u003d \"\u003cselect name\u003d\u0027\"+branchName+\"-status\u0027 class\u003d\u0027table-input\u0027\u003e\";   // record the No. of branches\n                str +\u003d \"\u003coption value\u003d\" + STATUS.NEW.value + \"\u003e\"+STATUS.NEW.title+\"\u003c/option\u003e\";\n                str +\u003d \"\u003coption value\u003d\" + STATUS.DELIVERED.value + \"\u003e\"+STATUS.DELIVERED.title+\"\u003c/option\u003e\";\n                str +\u003d \"\u003c/select\u003e\";              \n                currentBranchStatus[branchName] \u003d item.value[branchName];\n              }else if (item.value[branchName] \u003d\u003d STATUS.DELIVERED.value) {\n                str \u003d STATUS.DELIVERED.title;\n                currentBranchStatus[branchName] \u003d item.value[branchName];\n              }else {\n                currentBranchStatus[branchName] \u003d STATUS.NONE.value;\n              }\n              log(\"Status:\" + currentBranchStatus[branchName]);\n              showContent.push(str);\n              break;\n            case 2:  //Comment\n              log(\"Comment:\" + currentBranchStatus[branchName]);\n              if (currentBranchStatus[branchName] \u003d\u003d STATUS.NEW.value) {  //Value is status id\n                showContent.push(\"\u003cinput type\u003d\u0027text\u0027 name\u003d\u0027\"+branchName+\"-comment\u0027 class\u003d\u0027table-input\u0027 value\u003d\u0027\"+item.value[branchName]+\"\u0027 \u003e\");\n              }else {\n                showContent.push(item.value[branchName]);\n              }\n              break;\n            default:\n              showContent.push(\"\");\n          }\n      }\n      oTable.fnAddData(showContent);         \n    }\n    \n    //set the \u0027Confirm Delivery\u0027 button\n    if (results.master.status !\u003d STATUS.DELIVERED.value) {\n      $(\"#distribute-submit\").css(\"display\",\"block\");\n    }else{\n      $(\"#distribute-submit\").css(\"display\",\"none\");\n    }\n  }  \n  \n  \n  function onSuccessConfirmDistribute(result) {\n    log(\"Entering onSuccessConfirmDistribute...\");\n  \n    //clear sb item list\n    $(\"#distribute-detail\").dataTable().fnClearTable();\n  \n    //return to home screen\n    var msg \u003d \"Purchase [\" + result + \"] has been updated successfully. An email will be sent to your email\";\n    displayHomePage(msg);\n  \n  }\n  --\u003e\n  \u003c/script\u003e\n"},{"id":"d5048932-d928-4a04-8b86-16811ed63220","name":"admin","type":"server_js","source":"/**\nAdmin module containing all the definition \nand methods that are used by Administration module\n\n@class\n@constructor\n\n@author songxin \u003csongxin1973@gmail.com\u003e\n@modified songxin\n@date 2015-07-12\n**/\n\nvar Admin \u003d {\n  \n  initializeAdminList:function() {\n    GLOBAL.Util.infoLog(\"Entering Admin#initializeAdminList()...\");\n    \n    var result \u003d {};\n    \n    result.users \u003d Model.queryUser();\n    result.userbranch \u003d Model.queryUserBranch();\n    result.branches \u003d Model.queryBranch();\n    \n    //setting some additive information\n    this.setUser(result);  //adding branch name\n    \n    this.setBranch(result); //adding contact\n    \n    \n    return result;  \n  },\n  \n  //Setting the users by adding branch info\n  setUser:function(result) {\n    GLOBAL.Util.infoLog(\"Entering Admin#setUser()...\");\n    if (!result.users) return;\n    \n    for (var uidx \u003d 0; uidx \u003c result.users.length; uidx++) {\n      var user \u003d result.users[uidx];\n      user.branch \u003d \"\";\n      \n      for (var ubidx \u003d 0; ubidx \u003c result.userbranch.length; ubidx++) {\n        var ub \u003d result.userbranch[ubidx];\n        if (user.record_id \u003d\u003d ub.staffID) {  \n          var branchID \u003d ub.branchID;\n          \n          for (var bidx \u003d 0; bidx \u003c result.branches.length; bidx++) {\n            var branch \u003d result.branches[bidx];\n            if (branchID \u003d\u003d branch.record_id) {\n              //Add branch name into user info\n              GLOBAL.Util.debugLog(\"Hit! userID: \"+user.record_id+\" branchID:\" + branchID + \" name:\" + branch.name );\n              user.branch \u003d branch.name;\n              break;\n            }\n          }\n          break;\n        }\n      }\n    }\n  },\n  \n  setBranch:function(result) {\n    GLOBAL.Util.infoLog(\"Entering Admin#setBranch()...\");\n    if (!result.branches) return;\n    \n    for (var bidx \u003d 0; bidx \u003c result.branches.length; bidx++) {\n      var branch \u003d result.branches[bidx];\n      branch.contact \u003d \"\";\n      \n      for (var ubidx \u003d 0; ubidx \u003c result.userbranch.length; ubidx++) {\n        var ub \u003d result.userbranch[ubidx];\n        \n        if (branch.record_id \u003d\u003d ub.branchID \u0026\u0026 ub.position \u003d\u003d 0) {  \n          var userID \u003d ub.userID;\n          \n          for (var uidx \u003d 0; uidx \u003c result.users.length; uidx++) {\n            var user \u003d result.users[uidx];\n            if (userID \u003d\u003d user.record_id) {\n              branch.contact \u003d user.firstName + \" \" + user.lastName;\n              break;\n            }\n          }\n          break;\n        }\n      }\n    }\n  },  \n    \n  addUser:function(user) {\n    GLOBAL.Util.infoLog(\"Entering Admin#addUser()...\");\n    \n    var result \u003d {};\n    \n    \n  },\n  \n  end: function(){\n   //do nothing\n  }\n}"},{"id":"da782c74-2732-4de2-903c-676542b9ca76","name":"admin-ui-js","type":"html","source":"  \u003cscript language\u003d\"javascript\" type\u003d\"text/jscript\"\u003e\n  \u003c!--  \n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EVENT FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  function submitAddUser() {\n    log(\"Entering submitAddUser...\");\n\n    // get the input conditions\n    var param \u003d {};\n    param.userlname \u003d $(\"#userlastname\").val();\n    param.userfname \u003d $(\"#userfirstname\").val();\n    param.useremail \u003d $(\"#useremail\").val();\n    param.userbranch \u003d $(\"#select-user-branch\").find(\"option:selected\").val();\n    \n    var res \u003d checkUserInput(param);\n    if (!res) return;\n    \n    google.script.run.withSuccessHandler(onSuccessAddUser).processAddUser(param);\n  }\n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CALL BACK FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  \n  function onSuccessInitAdminList(result) {\n    log(\"Entering onSuccessInitAdminList...\");\n    \n    //close info window\n    showInfoDialog(\"\", false);\n    \n    refreshAdminUsers(result);\n    refreshAdminBranches(result.branches);\n    \n  } \n  \n  function onSuccessConfirmDistribute(result) {\n    log(\"Entering onSuccessConfirmDistribute...\");\n  \n    //clear sb item list\n    $(\"#distribute-detail\").dataTable().fnClearTable();\n  \n    //return to home screen\n    var msg \u003d \"Purchase [\" + result + \"] has been updated successfully. An email will be sent to your email\";\n    displayHomePage(msg);\n  \n  }\n\n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d COMMON FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  function refreshAdminUsers(result) {\n    var users \u003d result.users;\n    var oTable \u003d $(\"#admin-user-list\").dataTable();\n    oTable.fnClearTable();\n\n    // result is an array of queried items\n    for (var i \u003d 0; i \u003c users.length; i++) {\n      var user \u003d users[i];\n      oTable.fnAddData([\n        user.firstName + \" \" + user.lastName,\n        user.email,    \n        user.branch,\n        \"\u003cspan name\u003d\u0027admin-user-edit\u0027\u003e\u003ci class\u003d\u0027fa fa-pencil-square-o fa-lg m5\u0027\u003e\u003c/i\u003e\u003c/span\u003e\"\n          + \"\u003cspan name\u003d\u0027admin-user-update\u0027 class\u003d\u0027none\u0027\u003e\u003ci class\u003d\u0027fa fa-check fa-lg m5\u0027\u003e\u003c/i\u003e\u003c/span\u003e\" \n          + \"\u003cspan name\u003d\u0027admin-user-delete\u0027\u003e\u003ci class\u003d\u0027fa fa-times fa-lg m5\u0027\u003e\u003c/i\u003e\u003c/span\u003e\"\n      ]);     \n\n      //Add edit event\n      bindEditUserForAdmin(oTable, \u0027admin-user-edit\u0027, result.branches);\n      //Add update event\n      //bindUpdateUserForAdmin(oTable, \u0027admin-user-update\u0027);\n      //Add delete event\n      //bindDeleteEventForAdmin(oTable, \u0027admin-user-delete\u0027);  //Can be shared\n    }\n  }\n  \n  function refreshAdminBranches(branches) {\n    var oTable \u003d $(\"#admin-branch-list\").dataTable();\n    oTable.fnClearTable();\n\n    // result is an array of queried items\n    for (var i \u003d 0; i \u003c branches.length; i++) {\n      var branch \u003d branches[i];\n      oTable.fnAddData([\n        branch.name,\n        branch.address,\n        branch.telno,    \n        branch.faxno,\n        branch.email,\n        branch.contact,\n        \"\u003cspan name\u003d\u0027admin-branch-edit\u0027\u003e\u003ci class\u003d\u0027fa fa-pencil-square-o fa-lg m5\u0027\u003e\u003c/i\u003e\u003c/span\u003e\" \n          + \"\u003cspan name\u003d\u0027admin-branch-update\u0027 class\u003d\u0027none\u0027\u003e\u003ci class\u003d\u0027fa fa-check fa-lg m5\u0027\u003e\u003c/i\u003e\u003c/span\u003e\" \n          + \"\u003cspan name\u003d\u0027admin-branch-delete\u0027\u003e\u003ci class\u003d\u0027fa fa-times fa-lg m5\u0027\u003e\u003c/i\u003e\u003c/span\u003e\"\n      ]);     \n\n      //Add delete event\n      //bindDeleteEventForAdmin(oTable, \u0027admin-branch-delete\u0027);\n      \n    }\n  }\n  \n  function bindEditUserForAdmin(oTable, spanName, branches) {\n    log(\"Entering bindEditUserForAdmin... \" + spanName);\n    \n    //Initialize Delete Button\n    $(\"span[name\u003d\u0027\"+spanName+\"\u0027]\").unbind(\"click\").bind(\"click\", function(event){\n      var target_row \u003d $(this).closest(\"tr\").get(0);   // find the row the icon belong to. get(-) is used to convert jQuery object to DOM object\n\n      // Name cannot be changed\n      \n      // Email\n      var emailCell \u003d $(target_row.cells[1]);\n      emailCell.html(\"\u003cinput type\u003d\u0027text\u0027 name\u003d\u0027email\u0027 value\u003d\" + emailCell.html() + \"\u003e\");\n      \n      // Branches\n      var branchCell \u003d $(target_row.cells[2]);\n      var originalBranch \u003d branchCell.html();\n      \n      var branchHtml \u003d \"\u003cselect name\u003d\u0027branch\u0027\u003e\";\n      //branchHtml +\u003d \"\u003coption value\u003d\u0027-1\u0027\u003e\u003c/option\u003e\"\n      for (var i\u003d0; i\u003cbranches.length; i++) {\n        if (originalBranch \u003d\u003d branches[i].name) {\n          branchHtml +\u003d \"\u003coption value\u003d\"+branches[i].id+\" selected\u003e\"+branches[i].name+\"\u003c/option\u003e\";\n        }else{\n          branchHtml +\u003d \"\u003coption value\u003d\"+branches[i].id+\"\u003e\"+branches[i].name+\"\u003c/option\u003e\";\n        }\n      }\n      branchHtml +\u003d \"\u003c/select\u003e\";\n      branchCell.html(branchHtml);\n      \n      // operation\n      $(this).addClass(\"none\");\n      $(this).next().removeClass(\"none\");\n\n      logShowObject($(this).closest(\"span\"));\n      \n      //invoke the remote function to delete data from db\n      //google.script.run.withSuccessHandler(onSuccessDeleteUser).processAdminDeleteUser(itemType);\n    }); \n  }\n  \n  function bindDeleteEventForAdmin(oTable, spanName) {\n    \n    //Initialize Delete Button\n    $(\"span[name\u003d\u0027\"+spanName+\"\u0027]\").unbind(\"click\").bind(\"click\", function(event){\n      var target_row \u003d $(this).closest(\"tr\").get(0);\n      log(\"target_row\u003d \" + target_row);\n      var aPos \u003d oTable.fnGetPosition(target_row); \n      log(\"delete stock list, aPos\u003d\" + aPos);\n      oTable.fnDeleteRow(aPos);\n      \n      //invoke the remote function to delete data from db\n      google.script.run.withSuccessHandler(onSuccessDeleteUser).processAdminDeleteUser(itemType);\n    }); \n  }\n  \n  function checkUserInput(param) {\n    \n    var result;\n    \n    result \u003d checkPersonName(param.userlname + param.userfname);\n    if (result \u003d\u003d false) {\n      showErrorDialog(String.format(MESSAGETXT.errormsg.msg03,MESSAGETXT.admin.username));\n      throw new Error(\"[ERROR][Admin]-The input value of \" + MESSAGETXT.admin.username + \" is invalid.\");\n    }\n    \n    result \u003d checkEmail(param.useremail);\n    if (result \u003d\u003d false) {\n      showErrorDialog(String.format(MESSAGETXT.errormsg.msg03,MESSAGETXT.business.Email));\n      throw new Error(\"[ERROR][Admin]-The input value of \" + MESSAGETXT.business.Email + \" is invalid.\");\n    }\n    \n  }\n\n  --\u003e\n  \u003c/script\u003e"},{"id":"eed07c2a-81d7-4baf-8fc3-418a61546230","name":"init-js","type":"html","source":"  \u003cscript language\u003d\"javascript\" type\u003d\"text/jscript\"\u003e\n  \u003c!--  \n\n  function initLayout() {\n    log(\"Entering initLayout...\");\n    \n    // menu\n    initMenuItems(menuitems);\n    \n  }\n  \n  function initHandle() {\n    log(\"Entering initHandle...\");\n    handle[\u0027#home\u0027] \u003d handleHome;\n    handle[\u0027#order\u0027] \u003d handleOrder;\n    handle[\u0027#orderlog\u0027] \u003d handleOrderLog;\n    handle[\u0027#purchase\u0027] \u003d handlePurchase;\n    handle[\u0027#purchaselog\u0027] \u003d handlePurchaseLog;\n    handle[\u0027#stocklist\u0027] \u003d handleStockList;\n    handle[\u0027#stock\u0027] \u003d handleStock;   //used by both stock in and out\n    handle[\u0027#distribute\u0027] \u003d handleDistribute;\n    handle[\u0027#itemmgr\u0027] \u003d handleItemMgr;\n    handle[\u0027#suppmgt\u0027] \u003d handleSupplierMgt;\n    handle[\u0027#admin\u0027] \u003d handleAdmin;\n  }\n\n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d HANDLE FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  function handleHome(content) {\n    log(\"entering handleHome:\" + content);\n    showInfoDialog(\"\", false);\n  }\n  function handleOrder(content) {\n    log(\"entering handleOrder:\" + content);\n    google.script.run.withSuccessHandler(onSuccessPrepareOrder).processPrepareOrder();\n  }\n  \n  function handleOrderLog(content) {\n    log(\"entering handleOrderLog:\" + content);\n    google.script.run.withSuccessHandler(onSuccessOrderLog).processOrderLog();\n  }\n  \n  function handlePurchase(content) {\n    log(\"entering handlePurchase:\" + content);\n    $(\"#purchase-list\").dataTable().fnClearTable();\n    $(\"#all-in-stock-msg\").addClass(\"none\");\n    $(\"#set-to-purchased\").addClass(\"none\");\n    showInfoDialog(\"\", false);\n  }\n  \n  function handlePurchaseLog(content) {\n    log(\"entering handlePurchaseLog:\" + content);\n    $(\"#update-purchased\").addClass(\"none\");\n    \n    $(\"#purchase-log-list\").dataTable().fnClearTable();\n    $(\"#purchase-detail-list\").dataTable().fnClearTable();\n    \n    google.script.run.withSuccessHandler(onSuccessPurchaseLog).processPurchaseLog();\n  }\n\n  function handleStockList(content) {\n    log(\"entering handleStockList:\" + content);\n    google.script.run.withSuccessHandler(onSuccessStockList).processStockList();\n  }\n  \n  function handleStock(content) {\n    log(\"entering handleStock:\" + content);\n    google.script.run.withSuccessHandler(onSuccessPrepareStock).processPrepareStock(content);\n  }\n  \n  function handleDistribute(content) {\n    log(\"entering handleDistribute:\" + content);\n\n    $(\"#distribute-list\").dataTable().fnClearTable();\n    $(\"#distribute-detail\").dataTable().fnClearTable();\n    google.script.run.withSuccessHandler(onSuccessDistributeList).processDistributeList();\n    \n  }\n  \n  function handleItemMgr(content) {\n    log(\"entering handleItemMgr:\" + content);\n    google.script.run.withSuccessHandler(onSuccessItemMgr).processItemMgr();\n  }\n\n  function handleSupplierMgt(content) {\n    log(\"entering handleSupplierMgt:\" + content);\n    showInfoDialog(\"\", false);\n  }\n\n  function handleAdmin(content) {\n    log(\"entering handleAdmin:\" + content);\n    google.script.run.withSuccessHandler(onSuccessInitAdminList).processInitAdminList();\n  }\n  \n\n  // NOTE: only correct when there is only one level of sub menu\n  function initMenuItems(menuitems){\n    log(\"Entering initMenuItems...\");\n    var menu_ul \u003d $(\"#menu\");\n    \n    for (var i\u003d0; i\u003cmenuitems.length; i++) {\n      var menuItem \u003d menuitems[i];\n      var item_li \u003d $(\"\u003cli\u003e\u003ca href\u003d\u0027#\"+menuItem.para+\"\u0027\u003e\u003ci class\u003d\u0027fa \"+menuItem.icon+\" fa-lg\u0027 \u003e\u003c/i\u003e\u0026nbsp; \"+menuItem.name+\"\u003c/a\u003e\u003c/li\u003e\");\n      menu_ul.append(item_li);\n      logShowObject(menuItem);\n      \n      if (menuItem.subMenu) {\n        log(menuItem.name + \" has a submenu: \");\n        var subMenu_ul \u003d $(\"\u003cul\u003e\u003c/ul\u003e\");\n        for (var j\u003d0; j\u003cmenuItem.subMenu.length; j++) {\n          var subMenuItem \u003d menuItem.subMenu[j];\n          var subItem_li \u003d $(\"\u003cli\u003e\u003ca href\u003d\u0027#\"+subMenuItem.para+\"\u0027\u003e\"+subMenuItem.name+\"\u003c/a\u003e\u003c/li\u003e\");\n          subMenu_ul.append(subItem_li);\n          log(\"subMenu_ul: \" + subMenu_ul.html());\n        }\n        item_li.append(subMenu_ul);\n        log(\"item_li: \" + item_li.html());\n      }\n    }\n    //log(\"menu_ul: \" + menu_ul.html());\n  }\n\n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Init all types of controls in page  \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  function initControls() {\n    log(\"Entering initControls...\");\n  \n    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Initialize Dialog     \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n    \n/*    $(\"#ok-dialog\").dialog({\n      dialogClass: \"no-close\",\n      autoOpen: false,\n      modal: true,\n      buttons: {\n        Ok: function() {\n          $(this).dialog( \"close\" );\n        }\n      }\n    });\n\n    $(\"#confirm-dialog\").dialog({\n      autoOpen: false,\n      modal: true,\n      buttons: {\n        Ok: function() {\n          $(this).dialog( \"close\" );\n          return;\n        },\n        Cancel: function(cancelFunc) {\n          $(this).dialog( \"close\" );\n          return;\n        }\n      }\n    });*/\n\n    $(\"#info-dialog\").dialog({\n      autoOpen: false,\n      modal: true\n    });\n    \n    $(\"#dialog\").dialog({\n      autoOpen: false,\n      modal: true\n    });\n    \n    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Initialize Data Table \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n    var datatableopt \u003d {\n        \"bPaginate\": false,\n        \"bLengthChange\": false,\n        \"bFilter\": false,\n        \"bSort\": false,\n        \"bJQueryUI\": true,\n        \"bInfo\": false,\n        \"bAutoWidth\": false      \n    };\n  \n    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Initialize Menu \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n    //$(\"#menu\").menu(); \n   /* $(\"#menu\").accordion({\n      heightStyle: \"content\",\n      autoHeight: false,\n      clearStyle: true   \n    });\n    */\n    //Add click function to all menu item\n    $(\"#menu\").find(\"a\").each(function(){   // there are \"a\" tags in different level\n      $(this).click(function(){\n        hideAllContent();\n        var content \u003d $(this).attr(\"href\");\n        var disp \u003d (content \u003d\u003d \"#stockin\" || content \u003d\u003d \"#stockout\")? \"#stock\" : content;\n        log(\"Show \u003d\u003e\" + disp + \" with \u003d\u003e\" + content);\n        $(\"\"+disp).css(\"display\",\"block\");\n        \n        //Do something depend on different content user select\n        showInfoDialog(MESSAGETXT.common.querymsg001, true);\n        \n        refreshNavi(menuitems, content);\n        handle[disp](content);\n      });\n    });\n\n    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Initialize Order Area \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n    //$(\"#order-tabs\").tabs();\n\n    //Initialize the datatable in Order Form\n    datatableopt[\"aoColumns\"] \u003d [\n            { \"sTitle\": MESSAGETXT.business.Type},\n            { \"sTitle\": MESSAGETXT.business.ID},\n            { \"sTitle\": MESSAGETXT.business.ItemID},\n            { \"sTitle\": MESSAGETXT.business.ItemName},\n            { \"sTitle\": MESSAGETXT.business.Qty, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.Supplier},\n            { \"sTitle\": MESSAGETXT.business.Delete}\n        ];\n    $(\"#order-sbitem-list\").dataTable(datatableopt);\n    \n    //Initialize the datatable in Order Log Form\n    datatableopt[\"aoColumns\"] \u003d [\n            { \"sTitle\": MESSAGETXT.business.Type},\n            { \"sTitle\": MESSAGETXT.business.Description},\n            { \"sTitle\": MESSAGETXT.business.Qty},\n            { \"sTitle\": MESSAGETXT.business.Price, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.Supplier},\n            { \"sTitle\": MESSAGETXT.business.Delete}\n        ];\n    $(\"#order-log-list\").dataTable(datatableopt);\n    \n\n    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Initialize Purchase Area \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n    datatableopt[\"aoColumns\"] \u003d [\n            { \"sTitle\": MESSAGETXT.business.ItemCode},\n            { \"sTitle\": MESSAGETXT.business.Description},\n            { \"sTitle\": MESSAGETXT.business.GuidedPrice, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.OrderQty, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.StockQty, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.PurchaseQty, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.Supplier}\n        ];\n    $(\"#purchase-list\").dataTable(datatableopt);\n    \n    $( \"#purchase-query-from, #purchase-query-to\" ).datepicker({\n         dateFormat: \"yy/mm/dd\"\n         ,showAnim: \"slideDown\"\n     });\n    \n    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Initialize PurchaseLog Area \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n    datatableopt[\"aoColumns\"] \u003d [\n            { \"sTitle\": MESSAGETXT.business.AggregateTime},\n            { \"sTitle\": MESSAGETXT.business.From},\n            { \"sTitle\": MESSAGETXT.business.To},\n            { \"sTitle\": MESSAGETXT.business.PurchasedTime},\n            { \"sTitle\": MESSAGETXT.business.Status},\n            { \"sTitle\": MESSAGETXT.business.EditShow}\n        ];\n    datatableopt[\"bPaginate\"] \u003d true;\n    datatableopt[\"bAutoWidth\"] \u003d true;\n    $(\"#purchase-log-list\").dataTable(datatableopt);\n    datatableopt[\"bPaginate\"] \u003d false;\n    datatableopt[\"bAutoWidth\"] \u003d false;\n    \n\n    datatableopt[\"aoColumns\"] \u003d [\n            { \"sTitle\": MESSAGETXT.business.Type},\n            { \"sTitle\": MESSAGETXT.business.ItemName},\n            { \"sTitle\": MESSAGETXT.business.Supplier},\n            { \"sTitle\": MESSAGETXT.business.GuidedPrice, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.PurchasePrice, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.StockQty, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.OrderQty, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.PurchaseQty, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.Comment}\n        ];\n    $(\"#purchase-detail-list\").dataTable(datatableopt);\n    \n    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Initialize Stock Area \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n    datatableopt[\"aoColumns\"] \u003d [\n            { \"sTitle\": MESSAGETXT.business.Type},\n            { \"sTitle\": MESSAGETXT.business.Description, \"sClass\" : \"w400\" },\n            { \"sTitle\": MESSAGETXT.business.StockPrice, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.CurrentStock, \"sClass\" : \"tr\" },\n            { \"sTitle\": MESSAGETXT.business.SafetyStock, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.NecessaryQTY, \"sClass\" : \"tr\"}\n        ];\n    $(\"#stock-list\").dataTable(datatableopt);\n\n    datatableopt[\"aoColumns\"] \u003d [\n            { \"sTitle\": MESSAGETXT.business.ID},\n            { \"sTitle\": MESSAGETXT.business.Type},\n            { \"sTitle\": MESSAGETXT.business.ItemID},\n            { \"sTitle\": MESSAGETXT.business.Description, \"sClass\" : \"w250\" },\n            { \"sTitle\": MESSAGETXT.business.Direction},\n            { \"sTitle\": MESSAGETXT.business.StockInPrice, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.Qty, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.CurrentStock, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.Supplier},\n            { \"sTitle\": MESSAGETXT.business.Delete}\n        ];\n    $(\"#stock-item-list\").dataTable(datatableopt);\n    \n    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Initialize Distribute Area \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n    datatableopt[\"aoColumns\"] \u003d [\n            { \"sTitle\": MESSAGETXT.business.ID},\n            { \"sTitle\": MESSAGETXT.business.AggregateTime },\n            { \"sTitle\": MESSAGETXT.business.From},\n            { \"sTitle\": MESSAGETXT.business.To},\n            { \"sTitle\": MESSAGETXT.business.PurchasedTime},\n            { \"sTitle\": MESSAGETXT.business.Status},\n            { \"sTitle\": MESSAGETXT.common.Operation}\n        ];\n    datatableopt[\"bPaginate\"] \u003d true;\n    $(\"#distribute-list\").dataTable(datatableopt);\n    datatableopt[\"bPaginate\"] \u003d false;\n\n\n    datatableopt[\"aoColumns\"] \u003d [\n            { \"sTitle\": MESSAGETXT.business.ItemName},\n            { \"sTitle\": MESSAGETXT.business.SalePrice , \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.TotalQty, \"sClass\" : \"tr\"}\n        ];\n    var branches01 \u003d JSON.parse($(\"input[name\u003d\u0027branches\u0027]\").first().val());\n    \n    for (var i\u003d0; i\u003cbranches01.length;i++) {\n      datatableopt[\"aoColumns\"].push({\"sTitle\": branches01[i].name, \"sClass\" : \"tr\"});\n    }\n\n    $(\"#distribute-detail\").dataTable(datatableopt);\n    \n    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Initialize Item Management Area \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n    $(\"#itemmgr-tabs\").tabs();\n    datatableopt[\"aoColumns\"] \u003d [\n            { \"sTitle\": MESSAGETXT.business.ItemType},\n            { \"sTitle\": MESSAGETXT.business.ItemCode},\n            { \"sTitle\": MESSAGETXT.business.ItemName},\n            { \"sTitle\": MESSAGETXT.business.Package},\n            { \"sTitle\": MESSAGETXT.business.StockPrice, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.CurrentStock, \"sClass\" : \"tr\" },\n            { \"sTitle\": MESSAGETXT.business.SafetyStock, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.StockPlace, \"sClass\" : \"tr\"},\n            { \"sTitle\": MESSAGETXT.business.Supplier}\n        ];\n    $(\"#itemmgr-item-list\").dataTable(datatableopt);  \n\n    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Initialize Supplier Management Area \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n    $(\"#suppmgr-tabs\").tabs();\n    datatableopt[\"aoColumns\"] \u003d [\n            { \"sTitle\": MESSAGETXT.suppmgr.suppname},\n            { \"sTitle\": MESSAGETXT.business.Email},\n            { \"sTitle\": MESSAGETXT.business.Address},\n            { \"sTitle\": MESSAGETXT.business.TelNo},\n            { \"sTitle\": MESSAGETXT.business.FaxNo}\n        ];\n    $(\"#suppmgr-supplier-list\").dataTable(datatableopt);  \n\n    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Initialize Supplier Management Area \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n    $(\"#admin-tabs\").tabs();\n    datatableopt[\"aoColumns\"] \u003d [\n            { \"sTitle\": MESSAGETXT.admin.username},\n            { \"sTitle\": MESSAGETXT.business.Email},\n            { \"sTitle\": MESSAGETXT.business.Branch},\n            { \"sTitle\": MESSAGETXT.common.Operation}\n        ];\n    $(\"#admin-user-list\").dataTable(datatableopt);  \n    \n    datatableopt[\"aoColumns\"] \u003d [\n            { \"sTitle\": MESSAGETXT.business.Branch},\n            { \"sTitle\": MESSAGETXT.business.Address},\n            { \"sTitle\": MESSAGETXT.business.TelNo},\n            { \"sTitle\": MESSAGETXT.business.FaxNo},\n            { \"sTitle\": MESSAGETXT.business.Email},\n            { \"sTitle\": MESSAGETXT.business.Contact},\n            { \"sTitle\": MESSAGETXT.common.Operation}\n        ];\n    $(\"#admin-branch-list\").dataTable(datatableopt);  \n\n    // Row selection and deletion\n    var disTable \u003d $(\u0027#distribute-list\u0027).dataTable();\n    $(\u0027#distribute-list tbody\u0027).on( \u0027click\u0027, \u0027tr\u0027, function () {\n        if ( $(this).hasClass(\u0027selected\u0027) ) {\n            $(this).removeClass(\u0027selected\u0027);\n        }\n        else {\n            disTable.$(\u0027tr.selected\u0027).removeClass(\u0027selected\u0027);\n            $(this).addClass(\u0027selected\u0027);\n        }\n    } );\n     \n    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Initialize Button \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n    $(\"button\")\n      .button()\n      .click(function( event ) {\n        event.preventDefault();\n      });\n  }\n  \n  //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Init all types of controls in page  \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  function refreshNavi(menuitems, content) {  \n  // Actually menuitems is a global viariable, \n  // it is for convenience to write it as a parameter \n  // NOTE: only handle two levels menu for the time being...\n    log(\"Entering refreshNavi...\" + content);\n    \n    var navi \u003d new Array();\n    \n    // create a navi tree by using content\n    for (var i\u003d0; i\u003cmenuitems.length; i++) {\n      var menuItem \u003d menuitems[i];\n      \n      if (content \u003d\u003d \"#\"+menuItem.para) {\n        navi.push({para:menuItem.para, name:menuItem.name});\n        break;\n      }\n      if (menuItem.subMenu) {\n        for (var j\u003d0; j\u003cmenuItem.subMenu.length; j++) {\n          var subMenuItem \u003d menuItem.subMenu[j];\n          if (content \u003d\u003d \"#\"+subMenuItem.para) {\n            navi.push({para:menuItem.para, name:menuItem.name});\n            navi.push({para:subMenuItem.para, name:subMenuItem.name});\n            break;\n          }\n        }\n      }\n    }\n    \n    // creating navi bar (breadcrumbs)\n    var bc \u003d $(\"#breadcrumbs\");\n    bc.empty();\n    for (var i \u003d 0; i \u003c navi.length; i++) {\n      if (i \u003e 0) {  // not the first level\n        bc.append(\"\u0026nbsp; » \u0026nbsp;\");\n      }\n      if (i \u003d\u003d navi.length - 1) {  // The last one should not be a link\n        bc.append(navi[i].name);\n      } else {\n        bc.append($(\"\u003ca href\u003d\u0027#\"+navi[i].para+\"\u0027\u003e\"+navi[i].name+\"\u003c/a\u003e\"));\n      }\n    }\n    bc.find(\"a\").each(function(){   // there are \"a\" tags in different level\n      $(this).click(function(){\n        hideAllContent();\n        var content \u003d $(this).attr(\"href\");\n        var disp \u003d (content \u003d\u003d \"#stockin\" || content \u003d\u003d \"#stockout\")? \"#stock\" : content;\n        $(\"\"+disp).css(\"display\",\"block\");\n        //Do something depend on different content user select\n        showInfoDialog(MESSAGETXT.common.querymsg001, true);\n        handle[disp](content);\n      });\n    });\n    \n  }\n  //------------------------------------------------------\n  //               Other Functions \n  //------------------------------------------------------\n  function initFunctions() {\n    // Overload String format function\n    String.format \u003d function(src){\n        if (arguments.length \u003d\u003d 0) return null;\n        var args \u003d Array.prototype.slice.call(arguments, 1);\n        return src.replace(/\\{(\\d+)\\}/g, function(m, i){\n            return args[i];\n        });\n    };\n  }\n  \n  function displayHomePage(msg) {\n    log(\"Entering displayHomePage...\");\n    hideAllContent();\n    \n    $(\"#home\").css(\"display\",\"block\");\n    $(\"#home-message\").text(msg).addClass(\"msg_success\");\n    \n    //click home link\n    $(\"#menu\").find(\"a\").each(function(){\n      if ($(this).attr(\"href\") \u003d\u003d \u0027#home\u0027) {\n        $(this).click();\n      }\n    });    \n  }\n  \n  function showOKDialog(msg) {\n    log(\"Entering showOKDialog...\");\n    \n    $(\"#dialog\").html(msg);\n    $(\"#dialog\").dialog(\"option\",  \n      \"buttons\", [{\n        text:\"OK\",\n        click: function() {\n          $(this).dialog(\"close\" );\n        }\n      }]\n    );     \n    $(\"#dialog\").dialog(\"option\", \"title\", \"Done:\");\n    $(\"#dialog\").dialog(\"option\", \"dialogClass\", \"no-close info-dialog\");\n    $(\"#dialog\").dialog(\"open\");\n  }\n\n  function showErrorDialog(msg) {\n    \n    $(\"#dialog\").html(msg);\n    $(\"#dialog\").dialog(\"option\",  \n      \"buttons\", [{\n        text:\"OK\",\n        click: function() {\n          $(this).dialog(\"close\" );\n        }\n      }]\n    );       \n    $(\"#dialog\").dialog(\"option\", \"title\", MESSAGETXT.common.errdiagTitle);\n    $(\"#dialog\").dialog(\"option\", \"dialogClass\", \"no-close error-dialog\");\n    $(\"#dialog\").dialog(\"open\");\n  }\n  \n  function confirmDialog(msg) {\n    log(\"Entering confirm dialog...\")\n    \n    $(\"#confirm-dialog-message\").text(msg);\n    \n    var def \u003d $.Deferred();\n\n    $(\"#confirm-dialog\").dialog({\n        dialogClass: \"no-close\",\n        resizable: false,\n        autoOpen: true,\n        modal: true,\n        buttons: {\n            OK: function() {\n                def.resolve();\n                $(this).dialog(\"close\" );\n            },\n            Cancel: function() {\n                def.reject();\n                $(this).dialog(\"close\");\n            }\n        }\n        /*,\n        close: function() {$(this).remove();} */\n        \n    }); \n    return def.promise();\n  }\n      \n  function showInfoDialog(msg, op) {  //op\u003dtrue: show the window   and op\u003dfalse: close\n    log(\"Entering showInfoDialog... msg:\" + msg + \" op:\" + op);\n    if (op) {\n      $(\"#dialog\").html(msg);\n      $(\"#dialog\").dialog(\"option\", \"title\", \"Processing...\");\n      $(\"#dialog\").dialog(\"option\", \"buttons\", []);\n      $(\"#dialog\").dialog(\"option\", \"dialogClass\", \"no-close info-dialog\");\n      $(\"#dialog\").dialog(\"open\");\n    }\n    else {\n      $(\"#dialog\").html(\"\");\n      $(\"#dialog\").dialog(\"close\");\n    }\n  }\n\n  function hideAllContent() {\n    log(\"Entering hideAllContent...\");\n    $(\"#content\").children().each(function(){\n    \t//alert($(this).prop(\"id\"));\n      if ($(this).prop(\"id\") !\u003d \"breadcrumbs\") {    // Do not hide navigator bar\n        $(this).css(\"display\", \"none\");\n      }\n    });\n  }\n  \n\n  function displayAll(objname, obj){\n    var str \u003d \"The content of \" +objname+\" is:\";\n    for(var name in obj) str +\u003d name + \"\u003d\" + obj[name] + \"\\n\";\n    log(str);\n  }\n  \n  function log(msg){\n\tif (window[\"console\"]){\n\t\tconsole.log(msg);\n\t}\n  }  \n  --\u003e\n  \u003c/script\u003e"},{"id":"3a684622-7186-4d8a-96f6-155a86721378","name":"test-FUNCTION","type":"server_js","source":"function test_displayObject() {\n  \n  var obj \u003d {};\n  obj.key1 \u003d 12;\n  obj.key2 \u003d \"value2\";\n  obj.key3 \u003d {inkey1:\"invalue1\", inkey2:\"invalue2\"};\n  \n  var obj1 \u003d [1,\"two\", {key1:\"value1\"}];\n  var obj2 \u003d \"This one is just a string\";\n  \n  GLOBAL.Util.displayObject(obj);\n  GLOBAL.Util.displayObject(obj1);\n  GLOBAL.Util.displayObject(obj2);\n  \n}\n//---------------------------------\n// FOR TEST \n//---------------------------------\n\nfunction test_status() {\n  GLOBAL.Util.debugLog(\"the status of \"+GLOBAL.Constants.STATUS.NEW.title+\" is \" + GLOBAL.Constants.STATUS.NEW.value);\n  for (var s in GLOBAL.Constants.STATUS) {\n    GLOBAL.Util.debugLog(s + \" is \" + GLOBAL.Constants.STATUS[s].title + \" which value is \" + GLOBAL.Constants.STATUS[s].value);\n  }\n}\n\nfunction test_function() {\n  //var condition \u003d {};\n  //condition.name \u003d {\"$regex\":\"supplier2\", \"$options\" : \"ig\"};\n  //GLOBAL.Util.displayObject(condition);\n  var results \u003d  GLOBAL.Security.createMenuItems();\n  //GLOBAL.Util.debugLog(\"There are \" + results.length + \" data in results!\");\n  \n  GLOBAL.Util.displayObject(results);\n  //var testString \u003d \"鑫牌水饺（猪肉） 6包/箱\";\n  //for (var i\u003d0;i\u003ctestString.length;i++) {\n  //  GLOBAL.Util.debugLog(\"[\"+testString+\"]:\" + \"[\"+GLOBAL.Util.trimString(testString,i*2)+\"]\");\n  //}\n  \n  //GLOBAL.Util.debugLog(\"testing trim [\" + GLOBAL.Lang.trim(\"  898  \") + \"]\");\n}\n"}]}